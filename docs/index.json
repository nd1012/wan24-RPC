{
  "api/index.html": {
    "href": "api/index.html",
    "title": "API reference | wan24-RPC",
    "keywords": "API reference Choose a type from the left to start browsing."
  },
  "api/wan24.RPC.Api.Attributes.AttributeExtensions.html": {
    "href": "api/wan24.RPC.Api.Attributes.AttributeExtensions.html",
    "title": "Class AttributeExtensions | wan24-RPC",
    "keywords": "Class AttributeExtensions Attribute extensions Inheritance object AttributeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax public static class AttributeExtensions Methods | Edit this page View Source IsAuthorizedAsync(IEnumerable<RpcAuthorizationAttributeBase>, RpcContext, bool) Determine if a RPC context is authorized Declaration public static Task<bool> IsAuthorizedAsync(this IEnumerable<RpcAuthorizationAttributeBase> attributes, RpcContext context, bool throwOnUnauthorized = true) Parameters Type Name Description IEnumerable<RpcAuthorizationAttributeBase> attributes Authorization attributes RpcContext context RPC context to authorize bool throwOnUnauthorized Throw an exception if unauthorized? Returns Type Description Task<bool> If authorized Exceptions Type Condition UnauthorizedAccessException Not authorized"
  },
  "api/wan24.RPC.Api.Attributes.NoRpcAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.NoRpcAttribute.html",
    "title": "Class NoRpcAttribute | wan24-RPC",
    "keywords": "Class NoRpcAttribute Attribute for A type which is not allowed to be deserialized A public non-RPC method of an API type A no-RPC servable RPC API method parameter (opt-out) Inheritance object Attribute NoRpcAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Parameter)] public class NoRpcAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source NoRpcAttribute() Attribute for A type which is not allowed to be deserialized A public non-RPC method of an API type A no-RPC servable RPC API method parameter (opt-out) Declaration public NoRpcAttribute() Remarks Constructor"
  },
  "api/wan24.RPC.Api.Attributes.NoRpcDisposeAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.NoRpcDisposeAttribute.html",
    "title": "Class NoRpcDisposeAttribute | wan24-RPC",
    "keywords": "Class NoRpcDisposeAttribute Attribute for A disposable RPC API method parameter which shouldn't be disposed after the method returned regular A disposable RPC API method return value which shouldn't be disposed after the response was sent to the peer A disposable RPC API type which shouldn't be disposed when the RPC processor is disposing Inheritance object Attribute NoRpcDisposeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Parameter)] public class NoRpcDisposeAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source NoRpcDisposeAttribute() Attribute for A disposable RPC API method parameter which shouldn't be disposed after the method returned regular A disposable RPC API method return value which shouldn't be disposed after the response was sent to the peer A disposable RPC API type which shouldn't be disposed when the RPC processor is disposing Declaration public NoRpcDisposeAttribute() Remarks Constructor"
  },
  "api/wan24.RPC.Api.Attributes.NoRpcEnumerableAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.NoRpcEnumerableAttribute.html",
    "title": "Class NoRpcEnumerableAttribute | wan24-RPC",
    "keywords": "Class NoRpcEnumerableAttribute Attribute for an enumerable RPC API method return value which shouldn't be RPC enumerated (will be transported as an array instead) Inheritance object Attribute NoRpcEnumerableAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class NoRpcEnumerableAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source NoRpcEnumerableAttribute() Attribute for an enumerable RPC API method return value which shouldn't be RPC enumerated (will be transported as an array instead) Declaration public NoRpcEnumerableAttribute() Remarks Constructor"
  },
  "api/wan24.RPC.Api.Attributes.RpcAliasAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcAliasAttribute.html",
    "title": "Class RpcAliasAttribute | wan24-RPC",
    "keywords": "Class RpcAliasAttribute Attribute for a RPC API (method) which uses an alias name Inheritance object Attribute RpcAliasAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method)] public class RpcAliasAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source RpcAliasAttribute(string) Attribute for a RPC API (method) which uses an alias name Declaration public RpcAliasAttribute(string alias) Parameters Type Name Description string alias Alias name Remarks Constructor Properties | Edit this page View Source Alias Alias name Declaration public virtual string Alias { get; } Property Value Type Description string"
  },
  "api/wan24.RPC.Api.Attributes.RpcAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcAttribute.html",
    "title": "Class RpcAttribute | wan24-RPC",
    "keywords": "Class RpcAttribute Attribute for a RPC type which is allowed to be deserialized (opt-in) Inheritance object Attribute RpcAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class RpcAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source RpcAttribute() Attribute for a RPC type which is allowed to be deserialized (opt-in) Declaration public RpcAttribute() Remarks Constructor"
  },
  "api/wan24.RPC.Api.Attributes.RpcAuthorizationAttributeBase.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcAuthorizationAttributeBase.html",
    "title": "Class RpcAuthorizationAttributeBase | wan24-RPC",
    "keywords": "Class RpcAuthorizationAttributeBase Base type for a RPC API and/or method authorization attribue Inheritance object Attribute RpcAuthorizationAttributeBase Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax public abstract class RpcAuthorizationAttributeBase : Attribute Remarks Constructor Constructors | Edit this page View Source RpcAuthorizationAttributeBase() Base type for a RPC API and/or method authorization attribue Declaration protected RpcAuthorizationAttributeBase() Remarks Constructor Methods | Edit this page View Source IsContextAuthorizedAsync(RpcContext) Determine if a context is authorized Declaration public abstract Task<bool> IsContextAuthorizedAsync(RpcContext context) Parameters Type Name Description RpcContext context Context Returns Type Description Task<bool> If authorized (if false, the peer will be disconnected)"
  },
  "api/wan24.RPC.Api.Attributes.RpcAuthorizedAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcAuthorizedAttribute.html",
    "title": "Class RpcAuthorizedAttribute | wan24-RPC",
    "keywords": "Class RpcAuthorizedAttribute Attribute for RPC API methods which don't require any authorization Inheritance object Attribute RpcAuthorizedAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Method)] public sealed class RpcAuthorizedAttribute : Attribute Constructors | Edit this page View Source RpcAuthorizedAttribute() Attribute for RPC API methods which don't require any authorization Declaration public RpcAuthorizedAttribute()"
  },
  "api/wan24.RPC.Api.Attributes.RpcStreamAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcStreamAttribute.html",
    "title": "Class RpcStreamAttribute | wan24-RPC",
    "keywords": "Class RpcStreamAttribute Attribute for a RPC API method stream return value transport configuration Inheritance object Attribute RpcStreamAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class RpcStreamAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source RpcStreamAttribute() Attribute for a RPC API method stream return value transport configuration Declaration public RpcStreamAttribute() Remarks Constructor Properties | Edit this page View Source Compression If to use compression Declaration public bool Compression { get; set; } Property Value Type Description bool | Edit this page View Source CompressionAlgorithm Used compression algorithm Declaration public string? CompressionAlgorithm { get; set; } Property Value Type Description string | Edit this page View Source CompressionFlags Used compression flags Declaration public CompressionFlags? CompressionFlags { get; set; } Property Value Type Description CompressionFlags? | Edit this page View Source CompressionLevel Used comression level Declaration public CompressionLevel? CompressionLevel { get; set; } Property Value Type Description CompressionLevel? Methods | Edit this page View Source ApplyTo(CompressionOptions?) Apply the configuration to wan24.Compression.CompressionOptions Declaration public virtual CompressionOptions? ApplyTo(CompressionOptions? options) Parameters Type Name Description CompressionOptions options Options Returns Type Description CompressionOptions Options (may be a new instance or even null, if compression was disabled)"
  },
  "api/wan24.RPC.Api.Attributes.RpcVersionAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcVersionAttribute.html",
    "title": "Class RpcVersionAttribute | wan24-RPC",
    "keywords": "Class RpcVersionAttribute Attribute for an API version restricted RPC API method Inheritance object Attribute RpcVersionAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class RpcVersionAttribute : Attribute Constructors | Edit this page View Source RpcVersionAttribute(int) Constructor Declaration public RpcVersionAttribute(int fromVersion) Parameters Type Name Description int fromVersion From version including | Edit this page View Source RpcVersionAttribute(int, int, string?) Constructor Declaration public RpcVersionAttribute(int fromVersion, int toVersion, string? newerMethodName = null) Parameters Type Name Description int fromVersion From version including int toVersion To version including string newerMethodName Newer method name (forwards the RPC processor to another RPC API method for newer API versions) Properties | Edit this page View Source FromVersion From version including Declaration public int FromVersion { get; } Property Value Type Description int | Edit this page View Source NewerMethodName Newer RPC API method name to use Declaration public string? NewerMethodName { get; } Property Value Type Description string | Edit this page View Source ToVersion To version including Declaration public int? ToVersion { get; } Property Value Type Description int? Methods | Edit this page View Source GetNewerMethodName(in int, in RpcApiMethodInfo) Get the newer RPC API method name to use, if incompatible Declaration public virtual string? GetNewerMethodName(in int version, in RpcApiMethodInfo currentMethod) Parameters Type Name Description int version API version RpcApiMethodInfo currentMethod Current RPC API method used Returns Type Description string The current or newer RPC API method name to use, or null, if the method can't be served with the peers API version | Edit this page View Source IsCompatibleWithApiVersion(in int) Determine if an API version is compatible Declaration public virtual bool IsCompatibleWithApiVersion(in int version) Parameters Type Name Description int version API version Returns Type Description bool If compatible | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString()"
  },
  "api/wan24.RPC.Api.Attributes.html": {
    "href": "api/wan24.RPC.Api.Attributes.html",
    "title": "Namespace wan24.RPC.Api.Attributes | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Api.Attributes Classes AttributeExtensions Attribute extensions NoRpcAttribute Attribute for A type which is not allowed to be deserialized A public non-RPC method of an API type A no-RPC servable RPC API method parameter (opt-out) NoRpcDisposeAttribute Attribute for A disposable RPC API method parameter which shouldn't be disposed after the method returned regular A disposable RPC API method return value which shouldn't be disposed after the response was sent to the peer A disposable RPC API type which shouldn't be disposed when the RPC processor is disposing NoRpcEnumerableAttribute Attribute for an enumerable RPC API method return value which shouldn't be RPC enumerated (will be transported as an array instead) RpcAliasAttribute Attribute for a RPC API (method) which uses an alias name RpcAttribute Attribute for a RPC type which is allowed to be deserialized (opt-in) RpcAuthorizationAttributeBase Base type for a RPC API and/or method authorization attribue RpcAuthorizedAttribute Attribute for RPC API methods which don't require any authorization RpcStreamAttribute Attribute for a RPC API method stream return value transport configuration RpcVersionAttribute Attribute for an API version restricted RPC API method"
  },
  "api/wan24.RPC.Api.DisposableRpcApiBase.html": {
    "href": "api/wan24.RPC.Api.DisposableRpcApiBase.html",
    "title": "Class DisposableRpcApiBase | wan24-RPC",
    "keywords": "Class DisposableRpcApiBase Base type for a disposable RPC API Inheritance object DisposableBase DisposableRpcApiBase Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable Inherited Members DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.Dispose(bool) DisposableBase.DisposeCore() DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api Assembly: wan24RPC.dll Syntax public abstract class DisposableRpcApiBase : DisposableBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable Constructors | Edit this page View Source DisposableRpcApiBase() Constructor Declaration protected DisposableRpcApiBase() | Edit this page View Source DisposableRpcApiBase(in bool, in bool) Constructor Declaration protected DisposableRpcApiBase(in bool asyncDisposing, in bool allowFinalizer = false) Parameters Type Name Description bool asyncDisposing Asynchronous disposing? bool allowFinalizer Don't count running the finalizer as an error? Methods | Edit this page View Source Dispose() Declaration [NoRpc] public void Dispose() | Edit this page View Source DisposeAsync() Declaration [NoRpc] public ValueTask DisposeAsync() Returns Type Description ValueTask | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration [NoRpc] public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration [NoRpc] public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Edit this page View Source RegisterForDispose<T>(in T) Register an object for disposing when this object is being disposed Declaration [NoRpc] public override void RegisterForDispose<T>(in T disposable) Parameters Type Name Description T disposable Disposable (will be disposed) Type Parameters Name Description T Object type Overrides wan24.Core.DisposableBase.RegisterForDispose<T>(in T) | Edit this page View Source ToString() Returns a string that represents the current object. Declaration [NoRpc] public override string? ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable"
  },
  "api/wan24.RPC.Api.IWantRpcProcessorInfo.html": {
    "href": "api/wan24.RPC.Api.IWantRpcProcessorInfo.html",
    "title": "Interface IWantRpcProcessorInfo | wan24-RPC",
    "keywords": "Interface IWantRpcProcessorInfo Interface for a RPC API type which wants to get hosting RPC processor informations after construction Namespace: wan24.RPC.Api Assembly: wan24RPC.dll Syntax public interface IWantRpcProcessorInfo Properties | Edit this page View Source Processor RPC processor Declaration RpcProcessor? Processor { get; set; } Property Value Type Description RpcProcessor | Edit this page View Source ProcessorCancellation RPC processor cancellation token Declaration CancellationToken ProcessorCancellation { get; set; } Property Value Type Description CancellationToken"
  },
  "api/wan24.RPC.Api.Reflection.ReflectionExtensions.html": {
    "href": "api/wan24.RPC.Api.Reflection.ReflectionExtensions.html",
    "title": "Class ReflectionExtensions | wan24-RPC",
    "keywords": "Class ReflectionExtensions Reflection extensions Inheritance object ReflectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Reflection Assembly: wan24RPC.dll Syntax public static class ReflectionExtensions Methods | Edit this page View Source FindApi(IReadOnlyDictionary<string, RpcApiInfo>, string) Find an API by its name Declaration public static RpcApiInfo? FindApi(this IReadOnlyDictionary<string, RpcApiInfo> apis, string name) Parameters Type Name Description IReadOnlyDictionary<string, RpcApiInfo> apis APIs string name Name Returns Type Description RpcApiInfo API | Edit this page View Source FindApiMethod(IReadOnlyDictionary<string, RpcApiInfo>, in string) Find an API method by its name Declaration public static RpcApiMethodInfo? FindApiMethod(this IReadOnlyDictionary<string, RpcApiInfo> apis, in string name) Parameters Type Name Description IReadOnlyDictionary<string, RpcApiInfo> apis APIs string name Name Returns Type Description RpcApiMethodInfo API method | Edit this page View Source IsEnumerable(Type, in bool, bool) Determine if a type is an IEnumerable<T> or IAsyncEnumerable<T> Declaration public static bool IsEnumerable(this Type type, in bool strict = false, bool asyncOnly = false) Parameters Type Name Description Type type Type bool strict If the type must be strictly an IEnumerable<T> or IAsyncEnumerable<T> (may be the generic type definition also) bool asyncOnly IAsyncEnumerable<T> only? Returns Type Description bool If the type is an enumerable"
  },
  "api/wan24.RPC.Api.Reflection.RpcApiInfo.html": {
    "href": "api/wan24.RPC.Api.Reflection.RpcApiInfo.html",
    "title": "Class RpcApiInfo | wan24-RPC",
    "keywords": "Class RpcApiInfo RPC API info Inheritance object DisposableBase RpcApiInfo Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable Inherited Members DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api.Reflection Assembly: wan24RPC.dll Syntax public class RpcApiInfo : DisposableBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable Constructors | Edit this page View Source RpcApiInfo() Constructor Declaration protected RpcApiInfo() | Edit this page View Source RpcApiInfo(in object) Constructor Declaration public RpcApiInfo(in object api) Parameters Type Name Description object api API instance | Edit this page View Source RpcApiInfo(in Type) Constructor Declaration public RpcApiInfo(in Type type) Parameters Type Name Description Type type API type Properties | Edit this page View Source Alias Alias Declaration public RpcAliasAttribute? Alias { get; protected set; } Property Value Type Description RpcAliasAttribute | Edit this page View Source Authorization Authorization Declaration public FrozenSet<RpcAuthorizationAttributeBase> Authorization { get; protected set; } Property Value Type Description FrozenSet<RpcAuthorizationAttributeBase> | Edit this page View Source Authorize If authorized for every context Declaration public bool Authorize { get; protected set; } Property Value Type Description bool | Edit this page View Source DisposeInstance If to dispose the Instance after use Declaration public bool DisposeInstance { get; protected set; } Property Value Type Description bool | Edit this page View Source Instance API instance Declaration public object Instance { get; protected set; } Property Value Type Description object | Edit this page View Source Methods Methods Declaration public FrozenDictionary<string, RpcApiMethodInfo> Methods { get; protected set; } Property Value Type Description FrozenDictionary<string, RpcApiMethodInfo> | Edit this page View Source Name Name Declaration public virtual string Name { get; } Property Value Type Description string | Edit this page View Source NamePrefix Name prefix Declaration public string? NamePrefix { get; set; } Property Value Type Description string | Edit this page View Source Type API type Declaration public Type Type { get; protected set; } Property Value Type Description Type | Edit this page View Source Version Version Declaration public RpcVersionAttribute? Version { get; protected set; } Property Value Type Description RpcVersionAttribute Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableBase.DisposeCore() | Edit this page View Source FindMethod(string) Find a method by its name Declaration public RpcApiMethodInfo? FindMethod(string name) Parameters Type Name Description string name Name Returns Type Description RpcApiMethodInfo Method | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable"
  },
  "api/wan24.RPC.Api.Reflection.RpcApiMethodInfo.html": {
    "href": "api/wan24.RPC.Api.Reflection.RpcApiMethodInfo.html",
    "title": "Class RpcApiMethodInfo | wan24-RPC",
    "keywords": "Class RpcApiMethodInfo RPC API method info Inheritance object RpcApiMethodInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api.Reflection Assembly: wan24RPC.dll Syntax public class RpcApiMethodInfo Constructors | Edit this page View Source RpcApiMethodInfo() Constructor Declaration protected RpcApiMethodInfo() | Edit this page View Source RpcApiMethodInfo(RpcApiInfo, MethodInfo) Constructor Declaration public RpcApiMethodInfo(RpcApiInfo api, MethodInfo method) Parameters Type Name Description RpcApiInfo api API MethodInfo method Method Properties | Edit this page View Source API API Declaration public RpcApiInfo API { get; protected set; } Property Value Type Description RpcApiInfo | Edit this page View Source Alias Alias Declaration public RpcAliasAttribute? Alias { get; protected set; } Property Value Type Description RpcAliasAttribute | Edit this page View Source Authorization Authorization Declaration public FrozenSet<RpcAuthorizationAttributeBase> Authorization { get; protected set; } Property Value Type Description FrozenSet<RpcAuthorizationAttributeBase> | Edit this page View Source Authorize If authorized for every context Declaration public bool Authorize { get; protected set; } Property Value Type Description bool | Edit this page View Source DisposeReturnValue If to dispose the return value after sending Declaration public bool DisposeReturnValue { get; protected set; } Property Value Type Description bool | Edit this page View Source EnumerateReturnValue If to enumerate the return value, if applicable Declaration public bool EnumerateReturnValue { get; protected set; } Property Value Type Description bool | Edit this page View Source Method Method Declaration public MethodInfo Method { get; protected set; } Property Value Type Description MethodInfo | Edit this page View Source Name Name Declaration public virtual string Name { get; } Property Value Type Description string | Edit this page View Source Parameters Parameters Declaration public FrozenDictionary<string, RpcApiMethodParameterInfo> Parameters { get; protected set; } Property Value Type Description FrozenDictionary<string, RpcApiMethodParameterInfo> | Edit this page View Source RpcParameters RPC parameters Declaration public FrozenSet<RpcApiMethodParameterInfo> RpcParameters { get; protected set; } Property Value Type Description FrozenSet<RpcApiMethodParameterInfo> | Edit this page View Source Stream Stream configuration Declaration public RpcStreamAttribute? Stream { get; protected set; } Property Value Type Description RpcStreamAttribute | Edit this page View Source Version Version Declaration public RpcVersionAttribute? Version { get; protected set; } Property Value Type Description RpcVersionAttribute Methods | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString()"
  },
  "api/wan24.RPC.Api.Reflection.RpcApiMethodParameterInfo.html": {
    "href": "api/wan24.RPC.Api.Reflection.RpcApiMethodParameterInfo.html",
    "title": "Class RpcApiMethodParameterInfo | wan24-RPC",
    "keywords": "Class RpcApiMethodParameterInfo RPC API method parameter info Inheritance object RpcApiMethodParameterInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Reflection Assembly: wan24RPC.dll Syntax public class RpcApiMethodParameterInfo Constructors | Edit this page View Source RpcApiMethodParameterInfo() Constructor Declaration protected RpcApiMethodParameterInfo() | Edit this page View Source RpcApiMethodParameterInfo(in RpcApiMethodInfo, in ParameterInfo, in int, in NullabilityInfoContext) Constructor Declaration public RpcApiMethodParameterInfo(in RpcApiMethodInfo method, in ParameterInfo pi, in int index, in NullabilityInfoContext nic) Parameters Type Name Description RpcApiMethodInfo method Method ParameterInfo pi Parameter int index Index NullabilityInfoContext nic Nullability info context Properties | Edit this page View Source API API Declaration public RpcApiInfo API { get; } Property Value Type Description RpcApiInfo | Edit this page View Source DisposeParameterValue If to dispose the parameter value after processing Declaration public bool DisposeParameterValue { get; protected set; } Property Value Type Description bool | Edit this page View Source Enumerable If the parameter value may be transported as RPC enumerable Declaration public bool Enumerable { get; protected set; } Property Value Type Description bool | Edit this page View Source Index Index Declaration public int Index { get; protected set; } Property Value Type Description int | Edit this page View Source Method Method Declaration public RpcApiMethodInfo Method { get; protected set; } Property Value Type Description RpcApiMethodInfo | Edit this page View Source Nullable If the parameter value is nullable Declaration public bool Nullable { get; protected set; } Property Value Type Description bool | Edit this page View Source Parameter Parameter Declaration public ParameterInfo Parameter { get; protected set; } Property Value Type Description ParameterInfo | Edit this page View Source RPC If the parameter is available via RPC Declaration public bool RPC { get; protected set; } Property Value Type Description bool"
  },
  "api/wan24.RPC.Api.Reflection.html": {
    "href": "api/wan24.RPC.Api.Reflection.html",
    "title": "Namespace wan24.RPC.Api.Reflection | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Api.Reflection Classes ReflectionExtensions Reflection extensions RpcApiInfo RPC API info RpcApiMethodInfo RPC API method info RpcApiMethodParameterInfo RPC API method parameter info"
  },
  "api/wan24.RPC.Api.RpcApiBase.html": {
    "href": "api/wan24.RPC.Api.RpcApiBase.html",
    "title": "Class RpcApiBase | wan24-RPC",
    "keywords": "Class RpcApiBase Base type for a RPC API Inheritance object RpcApiBase Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api Assembly: wan24RPC.dll Syntax public abstract class RpcApiBase Remarks Constructor Constructors | Edit this page View Source RpcApiBase() Base type for a RPC API Declaration protected RpcApiBase() Remarks Constructor Methods | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration [NoRpc] public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration [NoRpc] public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Edit this page View Source ToString() Returns a string that represents the current object. Declaration [NoRpc] public override string? ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString()"
  },
  "api/wan24.RPC.Api.html": {
    "href": "api/wan24.RPC.Api.html",
    "title": "Namespace wan24.RPC.Api | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Api Classes DisposableRpcApiBase Base type for a disposable RPC API RpcApiBase Base type for a RPC API Interfaces IWantRpcProcessorInfo Interface for a RPC API type which wants to get hosting RPC processor informations after construction"
  },
  "api/wan24.RPC.Processing.Exceptions.RpcRemoteException.html": {
    "href": "api/wan24.RPC.Processing.Exceptions.RpcRemoteException.html",
    "title": "Class RpcRemoteException | wan24-RPC",
    "keywords": "Class RpcRemoteException RPC remote exception (InnerException should serve the remote exception type) Inheritance object Exception RpcRemoteException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing.Exceptions Assembly: wan24RPC.dll Syntax [Serializable] public class RpcRemoteException : Exception, ISerializable Constructors | Edit this page View Source RpcRemoteException() Constructor Declaration public RpcRemoteException() | Edit this page View Source RpcRemoteException(string?) Constructor Declaration public RpcRemoteException(string? message) Parameters Type Name Description string message Message | Edit this page View Source RpcRemoteException(string?, Exception?) Constructor Declaration public RpcRemoteException(string? message, Exception? inner) Parameters Type Name Description string message Message Exception inner Inner exception Properties | Edit this page View Source RemoteExceptionType Remote exception type name Declaration public required string RemoteExceptionType { get; init; } Property Value Type Description string Implements ISerializable"
  },
  "api/wan24.RPC.Processing.Exceptions.TooManyRpcRequestsException.html": {
    "href": "api/wan24.RPC.Processing.Exceptions.TooManyRpcRequestsException.html",
    "title": "Class TooManyRpcRequestsException | wan24-RPC",
    "keywords": "Class TooManyRpcRequestsException Thrown on too many RPC requests Inheritance object Exception TooManyRpcRequestsException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing.Exceptions Assembly: wan24RPC.dll Syntax [Serializable] public class TooManyRpcRequestsException : Exception, ISerializable Constructors | Edit this page View Source TooManyRpcRequestsException() Constructor Declaration public TooManyRpcRequestsException() | Edit this page View Source TooManyRpcRequestsException(string?) Constructor Declaration public TooManyRpcRequestsException(string? message) Parameters Type Name Description string message Message | Edit this page View Source TooManyRpcRequestsException(string?, Exception?) Constructor Declaration public TooManyRpcRequestsException(string? message, Exception? inner) Parameters Type Name Description string message Message Exception inner Inner exception Implements ISerializable"
  },
  "api/wan24.RPC.Processing.Exceptions.TooManyRpcStreamsException.html": {
    "href": "api/wan24.RPC.Processing.Exceptions.TooManyRpcStreamsException.html",
    "title": "Class TooManyRpcStreamsException | wan24-RPC",
    "keywords": "Class TooManyRpcStreamsException Thrown on too many RPC streams Inheritance object Exception TooManyRpcStreamsException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing.Exceptions Assembly: wan24RPC.dll Syntax [Serializable] public class TooManyRpcStreamsException : Exception, ISerializable Constructors | Edit this page View Source TooManyRpcStreamsException() Constructor Declaration public TooManyRpcStreamsException() | Edit this page View Source TooManyRpcStreamsException(string?) Constructor Declaration public TooManyRpcStreamsException(string? message) Parameters Type Name Description string message Message | Edit this page View Source TooManyRpcStreamsException(string?, Exception?) Constructor Declaration public TooManyRpcStreamsException(string? message, Exception? inner) Parameters Type Name Description string message Message Exception inner Inner exception Implements ISerializable"
  },
  "api/wan24.RPC.Processing.Exceptions.html": {
    "href": "api/wan24.RPC.Processing.Exceptions.html",
    "title": "Namespace wan24.RPC.Processing.Exceptions | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Processing.Exceptions Classes RpcRemoteException RPC remote exception (InnerException should serve the remote exception type) TooManyRpcRequestsException Thrown on too many RPC requests TooManyRpcStreamsException Thrown on too many RPC streams"
  },
  "api/wan24.RPC.Processing.IRpcProcessorInternals.html": {
    "href": "api/wan24.RPC.Processing.IRpcProcessorInternals.html",
    "title": "Interface IRpcProcessorInternals | wan24-RPC",
    "keywords": "Interface IRpcProcessorInternals Interface for a RPC processor which exports its internals Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public interface IRpcProcessorInternals Methods | Edit this page View Source CreateOutgoingStreamAsync(RpcStreamParameter, CancellationToken) Create an outgoing stream Declaration Task<RpcStreamValue> CreateOutgoingStreamAsync(RpcStreamParameter streamParameter, CancellationToken cancellationToken = default) Parameters Type Name Description RpcStreamParameter streamParameter Parameter CancellationToken cancellationToken Cancellation token Returns Type Description Task<RpcStreamValue> Stream value to send to the peer | Edit this page View Source CreateStreamParameter(in Stream, in bool) Create a RPC stream parameter Declaration RpcStreamParameter CreateStreamParameter(in Stream stream, in bool disposeStream = false) Parameters Type Name Description Stream stream Stream bool disposeStream Dispose the stream after use? Returns Type Description RpcStreamParameter Parameter | Edit this page View Source SendMessageAsync(IRpcMessage, int, CancellationToken) Send a RPC message to the peer Declaration Task SendMessageAsync(IRpcMessage message, int priority, CancellationToken cancellationToken = default) Parameters Type Name Description IRpcMessage message Message int priority Priority (higher value will be processed faster) CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source SendMessageAsync(IRpcMessage, CancellationToken) Send a RPC message to the peer Declaration Task SendMessageAsync(IRpcMessage message, CancellationToken cancellationToken = default) Parameters Type Name Description IRpcMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task"
  },
  "api/wan24.RPC.Processing.Messages.CancellationMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.CancellationMessage.html",
    "title": "Class CancellationMessage | wan24-RPC",
    "keywords": "Class CancellationMessage RPC cancellation message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase CancellationMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcMessage IStreamSerializer Inherited Members RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) RpcMessageBase.SerializeAsync(Stream, CancellationToken) RpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public class CancellationMessage : RpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source CancellationMessage() RPC cancellation message Declaration public CancellationMessage() Remarks Constructor | Edit this page View Source CancellationMessage(in RequestMessage) Constructor Declaration public CancellationMessage(in RequestMessage request) Parameters Type Name Description RequestMessage request RPC request to cancel Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 3 Field Value Type Description int Properties | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.ErrorResponseMessage.JsonError.html": {
    "href": "api/wan24.RPC.Processing.Messages.ErrorResponseMessage.JsonError.html",
    "title": "Class ErrorResponseMessage.JsonError | wan24-RPC",
    "keywords": "Class ErrorResponseMessage.JsonError JSON error object Inheritance object ErrorResponseMessage.JsonError Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public class ErrorResponseMessage.JsonError Constructors | Edit this page View Source JsonError(Exception) JSON error object Declaration public JsonError(Exception ex) Parameters Type Name Description Exception ex Exception Properties | Edit this page View Source Message Message Declaration public string? Message { get; } Property Value Type Description string | Edit this page View Source Type Exception type Declaration public string Type { get; } Property Value Type Description string"
  },
  "api/wan24.RPC.Processing.Messages.ErrorResponseMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.ErrorResponseMessage.html",
    "title": "Class ErrorResponseMessage | wan24-RPC",
    "keywords": "Class ErrorResponseMessage RPC error response message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase ErrorResponseMessage LocalStreamCloseMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcMessage IStreamSerializer Inherited Members RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public class ErrorResponseMessage : RpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source ErrorResponseMessage() RPC error response message Declaration public ErrorResponseMessage() Remarks Constructor Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 2 Field Value Type Description int | Edit this page View Source _JError JSON error Declaration protected ErrorResponseMessage.JsonError? _JError Field Value Type Description ErrorResponseMessage.JsonError Properties | Edit this page View Source Error Error Declaration [JsonIgnore] public required Exception Error { get; set; } Property Value Type Description Exception | Edit this page View Source JError JSON error Declaration public ErrorResponseMessage.JsonError JError { get; set; } Property Value Type Description ErrorResponseMessage.JsonError | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.EventMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.EventMessage.html",
    "title": "Class EventMessage | wan24-RPC",
    "keywords": "Class EventMessage RPC event message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase SerializerRpcMessageBase EventMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcRequest IRpcMessage IStreamSerializer Inherited Members SerializerRpcMessageBase.DefaultSerializer SerializerRpcMessageBase.Serializer SerializerRpcMessageBase.SerializeObjectAsync(Stream, object, CancellationToken) SerializerRpcMessageBase.SerializeObjectListAsync(Stream, object[], CancellationToken) SerializerRpcMessageBase.DeserializeObjectAsync(Stream, CancellationToken) SerializerRpcMessageBase.DeserializeObjectListAsync(Stream, CancellationToken) SerializerRpcMessageBase.GetSerializer() RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public class EventMessage : SerializerRpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcRequest, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source EventMessage() RPC event message Declaration public EventMessage() Remarks Constructor Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 4 Field Value Type Description int Properties | Edit this page View Source Arguments Event arguments Declaration public EventArgs? Arguments { get; set; } Property Value Type Description EventArgs | Edit this page View Source Name Event name Declaration [MinLength(1)] [MaxLength(255)] public required string Name { get; set; } Property Value Type Description string | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type | Edit this page View Source Waiting If the sender is waiting for the event hndlers to finish Declaration public bool Waiting { get; set; } Property Value Type Description bool Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source DisposeArgumentsAsync() Dispose the arguments Declaration public virtual Task DisposeArgumentsAsync() Returns Type Description Task | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcRequest IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.IRpcMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.IRpcMessage.html",
    "title": "Interface IRpcMessage | wan24-RPC",
    "keywords": "Interface IRpcMessage Interface for a RPC message Inherited Members IStreamSerializer.Serialize(Stream) IStreamSerializer.SerializeAsync(Stream, CancellationToken) IStreamSerializer.Deserialize(Stream, int) IStreamSerializer.DeserializeAsync(Stream, int, CancellationToken) Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public interface IRpcMessage : IStreamSerializer Properties | Edit this page View Source Created Created time Declaration DateTime Created { get; } Property Value Type Description DateTime | Edit this page View Source Id Message ID Declaration long? Id { get; } Property Value Type Description long? | Edit this page View Source Meta Meta data (keys are limited to 255 characters; values are limited to 4KB string length) Declaration IReadOnlyDictionary<string, string> Meta { get; } Property Value Type Description IReadOnlyDictionary<string, string> | Edit this page View Source Type Message Type ID Declaration int Type { get; } Property Value Type Description int"
  },
  "api/wan24.RPC.Processing.Messages.IRpcRequest.html": {
    "href": "api/wan24.RPC.Processing.Messages.IRpcRequest.html",
    "title": "Interface IRpcRequest | wan24-RPC",
    "keywords": "Interface IRpcRequest Interface for a RPC request message (which can be used with a RpcProcessor.Request or a RpcProcessor.Call) Inherited Members IRpcMessage.Type IRpcMessage.Id IRpcMessage.Created IRpcMessage.Meta IStreamSerializer.Serialize(Stream) IStreamSerializer.SerializeAsync(Stream, CancellationToken) IStreamSerializer.Deserialize(Stream, int) IStreamSerializer.DeserializeAsync(Stream, int, CancellationToken) Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public interface IRpcRequest : IRpcMessage, IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.RequestMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.RequestMessage.html",
    "title": "Class RequestMessage | wan24-RPC",
    "keywords": "Class RequestMessage RPC request message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase SerializerRpcMessageBase RequestMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcRequest IRpcMessage IStreamSerializer Inherited Members SerializerRpcMessageBase.DefaultSerializer SerializerRpcMessageBase.Serializer SerializerRpcMessageBase.SerializeObjectAsync(Stream, object, CancellationToken) SerializerRpcMessageBase.SerializeObjectListAsync(Stream, object[], CancellationToken) SerializerRpcMessageBase.DeserializeObjectAsync(Stream, CancellationToken) SerializerRpcMessageBase.DeserializeObjectListAsync(Stream, CancellationToken) SerializerRpcMessageBase.GetSerializer() RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public class RequestMessage : SerializerRpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcRequest, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source RequestMessage() RPC request message Declaration public RequestMessage() Remarks Constructor Fields | Edit this page View Source ParametersDisposed If the parameters are disposed Declaration protected bool ParametersDisposed Field Value Type Description bool | Edit this page View Source SyncObject An object for thread synchronization Declaration protected readonly object SyncObject Field Value Type Description object | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 0 Field Value Type Description int Properties | Edit this page View Source Api API name Declaration [MinLength(1)] [MaxLength(255)] public string? Api { get; set; } Property Value Type Description string | Edit this page View Source Method API method name Declaration [MinLength(1)] [MaxLength(255)] public required string Method { get; set; } Property Value Type Description string | Edit this page View Source Parameters API method parameters Declaration [CountLimit(255)] public object?[]? Parameters { get; set; } Property Value Type Description object[] | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type | Edit this page View Source WantsReturnValue If a return value is expected Declaration public virtual bool WantsReturnValue { get; set; } Property Value Type Description bool Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source DisposeParametersAsync(RpcApiMethodInfo?) Dispose parameter values Declaration public virtual Task DisposeParametersAsync(RpcApiMethodInfo? method = null) Parameters Type Name Description RpcApiMethodInfo method Method Returns Type Description Task | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcRequest IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.ResponseMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.ResponseMessage.html",
    "title": "Class ResponseMessage | wan24-RPC",
    "keywords": "Class ResponseMessage RPC response message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase SerializerRpcMessageBase ResponseMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcMessage IStreamSerializer Inherited Members SerializerRpcMessageBase.DefaultSerializer SerializerRpcMessageBase.Serializer SerializerRpcMessageBase.SerializeObjectAsync(Stream, object, CancellationToken) SerializerRpcMessageBase.SerializeObjectListAsync(Stream, object[], CancellationToken) SerializerRpcMessageBase.DeserializeObjectAsync(Stream, CancellationToken) SerializerRpcMessageBase.DeserializeObjectListAsync(Stream, CancellationToken) SerializerRpcMessageBase.GetSerializer() RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public class ResponseMessage : SerializerRpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source ResponseMessage() RPC response message Declaration public ResponseMessage() Remarks Constructor Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 1 Field Value Type Description int Properties | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source ReturnValue Return value Declaration public object? ReturnValue { get; set; } Property Value Type Description object | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source DisposeReturnValueAsync() Dispose the return value Declaration public virtual Task DisposeReturnValueAsync() Returns Type Description Task | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.RpcMessageBase.html": {
    "href": "api/wan24.RPC.Processing.Messages.RpcMessageBase.html",
    "title": "Class RpcMessageBase | wan24-RPC",
    "keywords": "Class RpcMessageBase Base type for a RPC message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase CancellationMessage ErrorResponseMessage SerializerRpcMessageBase RemoteStreamCloseMessage StreamChunkMessage StreamStartMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcMessage IStreamSerializer Inherited Members StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public abstract class RpcMessageBase : StreamSerializerBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source RpcMessageBase() Base type for a RPC message Declaration protected RpcMessageBase() Remarks Constructor Fields | Edit this page View Source VERSION Object version number Declaration public const int VERSION = 1 Field Value Type Description int Properties | Edit this page View Source Created Created time Declaration [JsonIgnore] public DateTime Created { get; } Property Value Type Description DateTime | Edit this page View Source HlObjectVersion Higher level object version Declaration [JsonIgnore] public virtual int HlObjectVersion { get; } Property Value Type Description int | Edit this page View Source Id Message ID Declaration [RequiredIf(\"RequireId\", new object?[] { true })] public long? Id { get; set; } Property Value Type Description long? | Edit this page View Source Meta Meta data (keys are limited to 255 characters; values are limited to 4KB string length) Declaration [CountLimit(255)] [ItemStringLength(255, ItemValidationTargets.Key)] [ItemStringLength(4095, ItemValidationTargets.Item)] public IReadOnlyDictionary<string, string> Meta { get; set; } Property Value Type Description IReadOnlyDictionary<string, string> | Edit this page View Source MinHlObjectVersion Minimum supported higher level object version (see SerializedHlObjectVersion) Declaration protected virtual int? MinHlObjectVersion { get; } Property Value Type Description int? | Edit this page View Source PeerRpcVersion Peers RPC protocol version (from the RpcVersion for serializing the peers readable object structure) Declaration [JsonIgnore] public required int PeerRpcVersion { get; init; } Property Value Type Description int | Edit this page View Source RequireId If an Id is required Declaration [JsonIgnore] public virtual bool RequireId { get; } Property Value Type Description bool | Edit this page View Source SerializedHlObjectVersion Deserialized higher level object version Declaration protected int? SerializedHlObjectVersion { get; } Property Value Type Description int? | Edit this page View Source Type Message Type ID Declaration [JsonIgnore] public abstract int Type { get; } Property Value Type Description int Methods | Edit this page View Source Deserialize(Stream, int) Deserialize Declaration protected override sealed void Deserialize(Stream stream, int version) Parameters Type Name Description Stream stream Stream int version Serializer version Overrides StreamSerializerBase.Deserialize(Stream, int) | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides StreamSerializerBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source Serialize(Stream) Serialize Declaration protected override sealed void Serialize(Stream stream) Parameters Type Name Description Stream stream Stream Overrides StreamSerializerBase.Serialize(Stream) | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides StreamSerializerBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.RpcMessages.html": {
    "href": "api/wan24.RPC.Processing.Messages.RpcMessages.html",
    "title": "Class RpcMessages | wan24-RPC",
    "keywords": "Class RpcMessages Registered RPC message types Inheritance object RpcMessages Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public static class RpcMessages Methods | Edit this page View Source Get(in int) Get a RPC message type Declaration public static Type? Get(in int id) Parameters Type Name Description int id RPC message type ID Returns Type Description Type RPC message type | Edit this page View Source Register<T>(in int) Register a RPC message type Declaration public static void Register<T>(in int id) where T : IRpcMessage, new() Parameters Type Name Description int id RPC message type ID Type Parameters Name Description T RPC message type"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.BinarySerializer.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.BinarySerializer.html",
    "title": "Class BinarySerializer | wan24-RPC",
    "keywords": "Class BinarySerializer Binary RPC serializer Inheritance object BinarySerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public static class BinarySerializer Fields | Edit this page View Source SERIALIZER Serializer ID Declaration public const int SERIALIZER = 0 Field Value Type Description int Methods | Edit this page View Source CanSerialize(Type?) Determine if a type can be serialized Declaration public static bool CanSerialize(Type? type) Parameters Type Name Description Type type Type Returns Type Description bool If the type can be serialized | Edit this page View Source ObjectDeserializerAsync(Stream, CancellationToken) Object deserializer Declaration public static Task<object?> ObjectDeserializerAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Object | Edit this page View Source ObjectListDeserializerAsync(Stream, CancellationToken) Object list deserializer Declaration public static Task<object?[]?> ObjectListDeserializerAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object[]> Object list | Edit this page View Source ObjectListSerializerAsync(object?[]?, Stream, CancellationToken) Object list serializer Declaration public static Task ObjectListSerializerAsync(object?[]? objList, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object[] objList Object list Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source ObjectSerializerAsync(object?, Stream, CancellationToken) Object serializer Declaration public static Task ObjectSerializerAsync(object? obj, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object obj Object Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.JsonSerializer.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.JsonSerializer.html",
    "title": "Class JsonSerializer | wan24-RPC",
    "keywords": "Class JsonSerializer JSON RPC serializer Inheritance object JsonSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public static class JsonSerializer Fields | Edit this page View Source SERIALIZER Serializer ID Declaration public const int SERIALIZER = 1 Field Value Type Description int Methods | Edit this page View Source CanSerialize(Type?) Determine if a type can be serialized Declaration public static bool CanSerialize(Type? type) Parameters Type Name Description Type type Type Returns Type Description bool If the type can be serialized | Edit this page View Source ObjectDeserializerAsync(Stream, CancellationToken) Object deserializer Declaration public static Task<object?> ObjectDeserializerAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Object | Edit this page View Source ObjectListDeserializerAsync(Stream, CancellationToken) Object list deserializer Declaration public static Task<object?[]?> ObjectListDeserializerAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object[]> Object list | Edit this page View Source ObjectListSerializerAsync(object?[]?, Stream, CancellationToken) Object list serializer Declaration public static Task ObjectListSerializerAsync(object?[]? objList, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object[] objList Object list Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source ObjectSerializerAsync(object?, Stream, CancellationToken) Object serializer Declaration public static Task ObjectSerializerAsync(object? obj, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object obj Object Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.MixedSerializer.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.MixedSerializer.html",
    "title": "Class MixedSerializer | wan24-RPC",
    "keywords": "Class MixedSerializer Mixed RPC serializer (chooses between binary and JSON serialization, prefers binary) Inheritance object MixedSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public static class MixedSerializer Fields | Edit this page View Source SERIALIZER Serializer ID Declaration public const int SERIALIZER = 2 Field Value Type Description int Methods | Edit this page View Source CanSerialize(Type?) Determine if a type can be serialized Declaration public static bool CanSerialize(Type? type) Parameters Type Name Description Type type Type Returns Type Description bool If the type can be serialized | Edit this page View Source ObjectDeserializerAsync(Stream, CancellationToken) Object deserializer Declaration public static Task<object?> ObjectDeserializerAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Object | Edit this page View Source ObjectListDeserializerAsync(Stream, CancellationToken) Object list deserializer Declaration public static Task<object?[]?> ObjectListDeserializerAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object[]> Object list | Edit this page View Source ObjectListSerializerAsync(object?[]?, Stream, CancellationToken) Object list serializer Declaration public static Task ObjectListSerializerAsync(object?[]? objList, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object[] objList Object list Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source ObjectSerializerAsync(object?, Stream, CancellationToken) Object serializer Declaration public static Task ObjectSerializerAsync(object? obj, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object obj Object Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.CanSerialize_Delegate.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.CanSerialize_Delegate.html",
    "title": "Delegate RpcSerializer.CanSerialize_Delegate | wan24-RPC",
    "keywords": "Delegate RpcSerializer.CanSerialize_Delegate Delegate for a RPC serializer method to determine if a type can be serialized Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public delegate bool RpcSerializer.CanSerialize_Delegate(Type? type) Parameters Type Name Description Type type Type Returns Type Description bool If the type can be serialized"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.ObjectDeserializer_Delegate.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.ObjectDeserializer_Delegate.html",
    "title": "Delegate RpcSerializer.ObjectDeserializer_Delegate | wan24-RPC",
    "keywords": "Delegate RpcSerializer.ObjectDeserializer_Delegate Delegate for an object deserializer Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public delegate Task<object?> RpcSerializer.ObjectDeserializer_Delegate(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Object"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.ObjectListDeserializer_Delegate.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.ObjectListDeserializer_Delegate.html",
    "title": "Delegate RpcSerializer.ObjectListDeserializer_Delegate | wan24-RPC",
    "keywords": "Delegate RpcSerializer.ObjectListDeserializer_Delegate Delegate for an object list deserializer Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public delegate Task<object?[]?> RpcSerializer.ObjectListDeserializer_Delegate(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object[]> Object list"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.ObjectListSerializer_Delegate.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.ObjectListSerializer_Delegate.html",
    "title": "Delegate RpcSerializer.ObjectListSerializer_Delegate | wan24-RPC",
    "keywords": "Delegate RpcSerializer.ObjectListSerializer_Delegate Delegate for an object list serializer Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public delegate Task RpcSerializer.ObjectListSerializer_Delegate(object?[]? objList, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object[] objList Object list Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Delegate for an object list serializer"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.ObjectSerializer_Delegate.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.ObjectSerializer_Delegate.html",
    "title": "Delegate RpcSerializer.ObjectSerializer_Delegate | wan24-RPC",
    "keywords": "Delegate RpcSerializer.ObjectSerializer_Delegate Delegate for an object serializer Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public delegate Task RpcSerializer.ObjectSerializer_Delegate(object? obj, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object obj Object Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Delegate for an object serializer"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.html",
    "title": "Class RpcSerializer | wan24-RPC",
    "keywords": "Class RpcSerializer RPC serializer Inheritance object RpcSerializer Implements IEquatable<RpcSerializer> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public sealed record RpcSerializer : IEquatable<RpcSerializer> Remarks Constructor Constructors | Edit this page View Source RpcSerializer() RPC serializer Declaration public RpcSerializer() Remarks Constructor Properties | Edit this page View Source CanSerialize Determine if a type can be serialized Declaration public required RpcSerializer.CanSerialize_Delegate CanSerialize { get; init; } Property Value Type Description RpcSerializer.CanSerialize_Delegate | Edit this page View Source DefaultOptIn Opt-in deserializable types? Declaration public static bool DefaultOptIn { get; set; } Property Value Type Description bool | Edit this page View Source ObjectDeserializer Object deserializer Declaration public required RpcSerializer.ObjectDeserializer_Delegate ObjectDeserializer { get; init; } Property Value Type Description RpcSerializer.ObjectDeserializer_Delegate | Edit this page View Source ObjectListDeserializer Object list deserializer Declaration public required RpcSerializer.ObjectListDeserializer_Delegate ObjectListDeserializer { get; init; } Property Value Type Description RpcSerializer.ObjectListDeserializer_Delegate | Edit this page View Source ObjectListSerializer Object list serializer Declaration public required RpcSerializer.ObjectListSerializer_Delegate ObjectListSerializer { get; init; } Property Value Type Description RpcSerializer.ObjectListSerializer_Delegate | Edit this page View Source ObjectSerializer Object serializer Declaration public required RpcSerializer.ObjectSerializer_Delegate ObjectSerializer { get; init; } Property Value Type Description RpcSerializer.ObjectSerializer_Delegate | Edit this page View Source OptIn Opt-in deserializable types? Declaration public bool? OptIn { get; init; } Property Value Type Description bool? Methods | Edit this page View Source Get(in int) Get a serializer Declaration public static RpcSerializer? Get(in int id) Parameters Type Name Description int id ID Returns Type Description RpcSerializer Serializer | Edit this page View Source GetIsOptIn() Get if opt-in is required for deserializable types Declaration public bool GetIsOptIn() Returns Type Description bool If opt-in is required | Edit this page View Source Register(in int, in RpcSerializer) Register a serializer Declaration public static void Register(in int id, in RpcSerializer serializer) Parameters Type Name Description int id ID RpcSerializer serializer Serializer | Edit this page View Source Remove(in int) Remove a serializer Declaration public static void Remove(in int id) Parameters Type Name Description int id ID Implements IEquatable<T>"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.SerializerExtensions.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.SerializerExtensions.html",
    "title": "Class SerializerExtensions | wan24-RPC",
    "keywords": "Class SerializerExtensions Stream extensions Inheritance object SerializerExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public static class SerializerExtensions Methods | Edit this page View Source ReadRpcMessageAsync(Stream, int?, Type?, bool, CancellationToken) Read a RPC message Declaration public static ValueTask<IRpcMessage> ReadRpcMessageAsync(this Stream stream, int? serializerVersion = null, Type? expectedType = null, bool strictType = false, CancellationToken cancellationToken = default) Parameters Type Name Description Stream stream Stream int? serializerVersion Serializer version Type expectedType Expected RPC message type bool strictType Expect strictly the given RPC message type CancellationToken cancellationToken Cancellation token Returns Type Description ValueTask<IRpcMessage> RPC message | Edit this page View Source ReadRpcMessageAsync<T>(Stream, int?, bool, CancellationToken) Read a RPC message Declaration public static ValueTask<T> ReadRpcMessageAsync<T>(this Stream stream, int? serializerVersion = null, bool strictType = false, CancellationToken cancellationToken = default) where T : IRpcMessage, new() Parameters Type Name Description Stream stream Stream int? serializerVersion Serializer version bool strictType Expect strictly the given RPC message type CancellationToken cancellationToken Cancellation token Returns Type Description ValueTask<T> RPC message Type Parameters Name Description T Expected RPC message type | Edit this page View Source WriteRpcMessageAsync(Stream, IRpcMessage, CancellationToken) Write a RPC message Declaration public static ValueTask WriteRpcMessageAsync(this Stream stream, IRpcMessage message, CancellationToken cancellationToken = default) Parameters Type Name Description Stream stream Stream IRpcMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description ValueTask"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.html",
    "title": "Namespace wan24.RPC.Processing.Messages.Serialization | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Processing.Messages.Serialization Classes BinarySerializer Binary RPC serializer JsonSerializer JSON RPC serializer MixedSerializer Mixed RPC serializer (chooses between binary and JSON serialization, prefers binary) RpcSerializer RPC serializer SerializerExtensions Stream extensions Delegates RpcSerializer.CanSerialize_Delegate Delegate for a RPC serializer method to determine if a type can be serialized RpcSerializer.ObjectDeserializer_Delegate Delegate for an object deserializer RpcSerializer.ObjectListDeserializer_Delegate Delegate for an object list deserializer RpcSerializer.ObjectListSerializer_Delegate Delegate for an object list serializer RpcSerializer.ObjectSerializer_Delegate Delegate for an object serializer"
  },
  "api/wan24.RPC.Processing.Messages.SerializerRpcMessageBase.html": {
    "href": "api/wan24.RPC.Processing.Messages.SerializerRpcMessageBase.html",
    "title": "Class SerializerRpcMessageBase | wan24-RPC",
    "keywords": "Class SerializerRpcMessageBase Base type for a variable serializer RPC message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase SerializerRpcMessageBase EventMessage RequestMessage ResponseMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcMessage IStreamSerializer Inherited Members RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.Type RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.RequireId RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public abstract class SerializerRpcMessageBase : RpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source SerializerRpcMessageBase() Base type for a variable serializer RPC message Declaration protected SerializerRpcMessageBase() Remarks Constructor Properties | Edit this page View Source DefaultSerializer Default serializer ID Declaration public static int DefaultSerializer { get; set; } Property Value Type Description int | Edit this page View Source Serializer Serializer ID Declaration [JsonIgnore] public int Serializer { get; set; } Property Value Type Description int Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source DeserializeObjectAsync(Stream, CancellationToken) Deserialize an object Declaration protected Task<object?> DeserializeObjectAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Object | Edit this page View Source DeserializeObjectListAsync(Stream, CancellationToken) Deserialize an object list Declaration protected Task<object?[]?> DeserializeObjectListAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object[]> Object list | Edit this page View Source GetSerializer() Get the serializer Declaration protected RpcSerializer GetSerializer() Returns Type Description RpcSerializer Serializer | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcMessageBase.SerializeAsync(Stream, CancellationToken) | Edit this page View Source SerializeObjectAsync(Stream, object?, CancellationToken) Serialize an object Declaration protected Task SerializeObjectAsync(Stream stream, object? obj, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream object obj Object CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source SerializeObjectListAsync(Stream, object?[]?, CancellationToken) Serialize an object list Declaration protected Task SerializeObjectListAsync(Stream stream, object?[]? objList, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream object[] objList Object list CancellationToken cancellationToken Cancellation token Returns Type Description Task Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.Streaming.LocalStreamCloseMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.Streaming.LocalStreamCloseMessage.html",
    "title": "Class LocalStreamCloseMessage | wan24-RPC",
    "keywords": "Class LocalStreamCloseMessage Signal local RPC stream close to the peer due to an error Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase ErrorResponseMessage LocalStreamCloseMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcMessage IStreamSerializer Inherited Members ErrorResponseMessage.TYPE_ID ErrorResponseMessage._JError ErrorResponseMessage.RequireId ErrorResponseMessage.Error ErrorResponseMessage.JError ErrorResponseMessage.SerializeAsync(Stream, CancellationToken) ErrorResponseMessage.DeserializeAsync(Stream, int, CancellationToken) RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Streaming Assembly: wan24RPC.dll Syntax public class LocalStreamCloseMessage : ErrorResponseMessage, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source LocalStreamCloseMessage() Signal local RPC stream close to the peer due to an error Declaration public LocalStreamCloseMessage() Remarks Constructor Fields | Edit this page View Source HL_TYPE_ID RPC message type ID Declaration public const int HL_TYPE_ID = 8 Field Value Type Description int Properties | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides ErrorResponseMessage.Type Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.Streaming.RemoteStreamCloseMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.Streaming.RemoteStreamCloseMessage.html",
    "title": "Class RemoteStreamCloseMessage | wan24-RPC",
    "keywords": "Class RemoteStreamCloseMessage Closes a remote RPC stream Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase RemoteStreamCloseMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcMessage IStreamSerializer Inherited Members RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) RpcMessageBase.SerializeAsync(Stream, CancellationToken) RpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Streaming Assembly: wan24RPC.dll Syntax public class RemoteStreamCloseMessage : RpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source RemoteStreamCloseMessage() Closes a remote RPC stream Declaration public RemoteStreamCloseMessage() Remarks Constructor Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 7 Field Value Type Description int Properties | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.Streaming.StreamChunkMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.Streaming.StreamChunkMessage.html",
    "title": "Class StreamChunkMessage | wan24-RPC",
    "keywords": "Class StreamChunkMessage RPC stream chunk message (if the response to this message is an error, the stream will be closed at the sender side; last chunk doesn't need a response) Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase StreamChunkMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcRequest IRpcMessage IStreamSerializer Inherited Members RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Streaming Assembly: wan24RPC.dll Syntax public class StreamChunkMessage : RpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcRequest, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source StreamChunkMessage() RPC stream chunk message (if the response to this message is an error, the stream will be closed at the sender side; last chunk doesn't need a response) Declaration public StreamChunkMessage() Remarks Constructor Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 6 Field Value Type Description int Properties | Edit this page View Source Data Chunk data (if this is an empty array, the stream should be closed at the sender side) Declaration [RequiredIf(\"IsLastChunk\", new object?[] { false })] public byte[]? Data { get; set; } Property Value Type Description byte[] | Edit this page View Source IsLastChunk If this is the last chunk (stream is closed) Declaration public bool IsLastChunk { get; set; } Property Value Type Description bool | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Stream Stream ID Declaration [Range(1, 9.223372036854776E+18)] public long Stream { get; set; } Property Value Type Description long | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcRequest IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.Streaming.StreamStartMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.Streaming.StreamStartMessage.html",
    "title": "Class StreamStartMessage | wan24-RPC",
    "keywords": "Class StreamStartMessage Remote stream start request message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase StreamStartMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcMessage IStreamSerializer Inherited Members RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) RpcMessageBase.SerializeAsync(Stream, CancellationToken) RpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Streaming Assembly: wan24RPC.dll Syntax public class StreamStartMessage : RpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source StreamStartMessage() Remote stream start request message Declaration public StreamStartMessage() Remarks Constructor Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 5 Field Value Type Description int Properties | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.Streaming.html": {
    "href": "api/wan24.RPC.Processing.Messages.Streaming.html",
    "title": "Namespace wan24.RPC.Processing.Messages.Streaming | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Processing.Messages.Streaming Classes LocalStreamCloseMessage Signal local RPC stream close to the peer due to an error RemoteStreamCloseMessage Closes a remote RPC stream StreamChunkMessage RPC stream chunk message (if the response to this message is an error, the stream will be closed at the sender side; last chunk doesn't need a response) StreamStartMessage Remote stream start request message"
  },
  "api/wan24.RPC.Processing.Messages.html": {
    "href": "api/wan24.RPC.Processing.Messages.html",
    "title": "Namespace wan24.RPC.Processing.Messages | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Processing.Messages Classes CancellationMessage RPC cancellation message ErrorResponseMessage RPC error response message ErrorResponseMessage.JsonError JSON error object EventMessage RPC event message RequestMessage RPC request message ResponseMessage RPC response message RpcMessageBase Base type for a RPC message RpcMessages Registered RPC message types SerializerRpcMessageBase Base type for a variable serializer RPC message Interfaces IRpcMessage Interface for a RPC message IRpcRequest Interface for a RPC request message (which can be used with a RpcProcessor.Request or a RpcProcessor.Call)"
  },
  "api/wan24.RPC.Processing.Parameters.RpcEnumerationParameter-1.html": {
    "href": "api/wan24.RPC.Processing.Parameters.RpcEnumerationParameter-1.html",
    "title": "Class RpcEnumerationParameter<T> | wan24-RPC",
    "keywords": "Class RpcEnumerationParameter<T> RPC enumeration parameter Inheritance object DisposableRecordBase RpcEnumerationParameter<T> Implements IWillDispose IDisposableObject IDisposable IEquatable<DisposableRecordBase> IAsyncEnumerator<T> IAsyncDisposable IEquatable<RpcEnumerationParameter<T>> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing.Parameters Assembly: wan24RPC.dll Syntax public record RpcEnumerationParameter<T> : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IEquatable<DisposableRecordBase>, IAsyncEnumerator<T>, IAsyncDisposable, IEquatable<RpcEnumerationParameter<T>> Type Parameters Name Description T Item type Remarks Constructor Constructors | Edit this page View Source RpcEnumerationParameter() RPC enumeration parameter Declaration public RpcEnumerationParameter() Remarks Constructor Fields | Edit this page View Source AsyncEnumerator Asynchronous enumerator Declaration protected IAsyncEnumerator<T>? AsyncEnumerator Field Value Type Description IAsyncEnumerator<T> | Edit this page View Source Enumerator Enumerator Declaration protected IEnumerator<T>? Enumerator Field Value Type Description IEnumerator<T> Properties | Edit this page View Source AsyncEnumerable Asynchronous enumerable Declaration public IAsyncEnumerable<T>? AsyncEnumerable { get; init; } Property Value Type Description IAsyncEnumerable<T> | Edit this page View Source CancelToken Cancellation Declaration public CancellationToken CancelToken { get; set; } Property Value Type Description CancellationToken | Edit this page View Source Current Gets the element in the collection at the current position of the enumerator. Declaration public virtual T Current { get; } Property Value Type Description T The element in the collection at the current position of the enumerator. | Edit this page View Source DisposeEnumerable If to dispose the Enumerable/AsyncEnumerable when disposing Declaration public bool DisposeEnumerable { get; init; } Property Value Type Description bool | Edit this page View Source Enumerable Enumerable Declaration public IEnumerable<T>? Enumerable { get; init; } Property Value Type Description IEnumerable<T> | Edit this page View Source HasEnumerationStarted If the enumeration has started Declaration public bool HasEnumerationStarted { get; } Property Value Type Description bool Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableRecordBase.DisposeCore() | Edit this page View Source MoveNextAsync() Advances the enumerator asynchronously to the next element of the collection. Declaration public virtual ValueTask<bool> MoveNextAsync() Returns Type Description ValueTask<bool> A ValueTask<TResult> that will complete with a result of true if the enumerator was successfully advanced to the next element, or false if the enumerator has passed the end of the collection. Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IEquatable<T> IAsyncEnumerator<T> IAsyncDisposable IEquatable<T>"
  },
  "api/wan24.RPC.Processing.Parameters.RpcStreamParameter.html": {
    "href": "api/wan24.RPC.Processing.Parameters.RpcStreamParameter.html",
    "title": "Class RpcStreamParameter | wan24-RPC",
    "keywords": "Class RpcStreamParameter RPC stream parameter Inheritance object DisposableRecordBase RpcStreamParameter Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcStreamParameter> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing.Parameters Assembly: wan24RPC.dll Syntax public record RpcStreamParameter : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcStreamParameter> Remarks Constructor Constructors | Edit this page View Source RpcStreamParameter() RPC stream parameter Declaration public RpcStreamParameter() Remarks Constructor Properties | Edit this page View Source Compression Compression options Declaration public CompressionOptions? Compression { get; set; } Property Value Type Description CompressionOptions | Edit this page View Source DisposeSource If to dispose the Source stream after it was sent Declaration public bool DisposeSource { get; init; } Property Value Type Description bool | Edit this page View Source Source Source stream Declaration public required Stream Source { get; init; } Property Value Type Description Stream Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableRecordBase.DisposeCore() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.Parameters.html": {
    "href": "api/wan24.RPC.Processing.Parameters.html",
    "title": "Namespace wan24.RPC.Processing.Parameters | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Processing.Parameters Classes RpcEnumerationParameter<T> RPC enumeration parameter RpcStreamParameter RPC stream parameter"
  },
  "api/wan24.RPC.Processing.RpcContext.Unauthorized_Delegate.html": {
    "href": "api/wan24.RPC.Processing.RpcContext.Unauthorized_Delegate.html",
    "title": "Delegate RpcContext.Unauthorized_Delegate | wan24-RPC",
    "keywords": "Delegate RpcContext.Unauthorized_Delegate Unauthorized handler delegate Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public delegate Task RpcContext.Unauthorized_Delegate(RpcContext context, RpcAuthorizationAttributeBase authZ) Parameters Type Name Description RpcContext context RPC context RpcAuthorizationAttributeBase authZ Authorization attribute Returns Type Description Task Unauthorized handler delegate"
  },
  "api/wan24.RPC.Processing.RpcContext.html": {
    "href": "api/wan24.RPC.Processing.RpcContext.html",
    "title": "Class RpcContext | wan24-RPC",
    "keywords": "Class RpcContext RPC context Inheritance object DisposableRecordBase RpcContext Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcContext> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public record RpcContext : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcContext> Remarks Constructor Constructors | Edit this page View Source RpcContext() RPC context Declaration public RpcContext() Remarks Constructor Properties | Edit this page View Source API RPC API Declaration public RpcApiInfo API { get; } Property Value Type Description RpcApiInfo | Edit this page View Source Cancellation Cancellation Declaration public CancellationToken Cancellation { get; init; } Property Value Type Description CancellationToken | Edit this page View Source Created Created time Declaration public DateTime Created { get; init; } Property Value Type Description DateTime | Edit this page View Source Done Done time Declaration public DateTime Done { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Message RPC request Declaration public required RequestMessage Message { get; init; } Property Value Type Description RequestMessage | Edit this page View Source Method RPC API method Declaration public required RpcApiMethodInfo Method { get; init; } Property Value Type Description RpcApiMethodInfo | Edit this page View Source Processor RPC processor Declaration public required RpcProcessor Processor { get; init; } Property Value Type Description RpcProcessor | Edit this page View Source Services Service provider (will be disposed) Declaration public required ScopedDiHelper Services { get; init; } Property Value Type Description ScopedDiHelper | Edit this page View Source UnauthorizedHandler Unauthorized context handler Declaration public static RpcContext.Unauthorized_Delegate? UnauthorizedHandler { get; set; } Property Value Type Description RpcContext.Unauthorized_Delegate Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableRecordBase.DisposeCore() | Edit this page View Source SetDone() Set done Declaration public virtual void SetDone() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcEvent.EventHandler_Delegate.html": {
    "href": "api/wan24.RPC.Processing.RpcEvent.EventHandler_Delegate.html",
    "title": "Delegate RpcEvent.EventHandler_Delegate | wan24-RPC",
    "keywords": "Delegate RpcEvent.EventHandler_Delegate Delegate for an event handler Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public delegate Task RpcEvent.EventHandler_Delegate(RpcEvent eventInfo, EventMessage message, CancellationToken cancellationToken) Parameters Type Name Description RpcEvent eventInfo Event informations EventMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task Delegate for an event handler"
  },
  "api/wan24.RPC.Processing.RpcEvent.html": {
    "href": "api/wan24.RPC.Processing.RpcEvent.html",
    "title": "Class RpcEvent | wan24-RPC",
    "keywords": "Class RpcEvent RPC event Inheritance object RpcEvent Implements IEquatable<RpcEvent> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public record RpcEvent : IEquatable<RpcEvent> Fields | Edit this page View Source SyncObject An object for thread synchronization Declaration protected readonly object SyncObject Field Value Type Description object Properties | Edit this page View Source Arguments Event arguments type (must be a EventArgs) Declaration public Type? Arguments { get; init; } Property Value Type Description Type | Edit this page View Source FirstRaised First raised time Declaration public DateTime FirstRaised { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Handler Event handler Declaration public required RpcEvent.EventHandler_Delegate Handler { get; init; } Property Value Type Description RpcEvent.EventHandler_Delegate | Edit this page View Source LastRaised Last raised time Declaration public DateTime LastRaised { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Name Event name Declaration public required string Name { get; init; } Property Value Type Description string | Edit this page View Source Processor Processor Declaration public required RpcProcessor Processor { get; init; } Property Value Type Description RpcProcessor | Edit this page View Source RaiseCount Number of times the event was raised Declaration public long RaiseCount { get; protected set; } Property Value Type Description long Methods | Edit this page View Source RaiseEventAsync(EventMessage, CancellationToken) Raise the event Declaration public virtual Task RaiseEventAsync(EventMessage message, CancellationToken cancellationToken) Parameters Type Name Description EventMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task Implements IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessor.Call.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.Call.html",
    "title": "Class RpcProcessor.Call | wan24-RPC",
    "keywords": "Class RpcProcessor.Call RPC call Inheritance object DisposableRecordBase RpcProcessor.Call Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcProcessor.Call> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax protected record RpcProcessor.Call : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcProcessor.Call> Remarks Constructor Constructors | Edit this page View Source Call() RPC call Declaration public Call() Remarks Constructor Properties | Edit this page View Source CallCancellation Call cancellation Declaration public CancellationTokenSource CallCancellation { get; } Property Value Type Description CancellationTokenSource | Edit this page View Source Completion Completion Declaration public TaskCompletionSource<object?> Completion { get; } Property Value Type Description TaskCompletionSource<object> | Edit this page View Source Context Context Declaration public RpcContext? Context { get; set; } Property Value Type Description RpcContext | Edit this page View Source Created Created time Declaration public DateTime Created { get; } Property Value Type Description DateTime | Edit this page View Source Done Done time Declaration public DateTime Done { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Message Message Declaration public required IRpcRequest Message { get; init; } Property Value Type Description IRpcRequest | Edit this page View Source Processed If the call was processed Declaration public bool Processed { get; set; } Property Value Type Description bool | Edit this page View Source Processor RPC Processor Declaration public required RpcProcessor Processor { get; init; } Property Value Type Description RpcProcessor | Edit this page View Source ProcessorCancellation RPC processor cancellation token Declaration public required CancellationToken ProcessorCancellation { get; init; } Property Value Type Description CancellationToken | Edit this page View Source Streams Incoming streams Declaration public HashSet<RpcProcessor.IncomingStream> Streams { get; } Property Value Type Description HashSet<RpcProcessor.IncomingStream> Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableRecordBase.DisposeCore() | Edit this page View Source SetDone() Set done Declaration public virtual void SetDone() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessor.CallQueue.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.CallQueue.html",
    "title": "Class RpcProcessor.CallQueue | wan24-RPC",
    "keywords": "Class RpcProcessor.CallQueue RPC call queue Inheritance object DisposableBase HostedServiceBase QueueWorker ParallelQueueWorker ParallelItemQueueWorkerBase<RpcProcessor.Call> RpcProcessor.CallQueue Implements IWillDispose IParallelQueueWorker IItemQueueWorker<RpcProcessor.Call> IQueueWorker IServiceWorkerStatus IServiceWorker IHostedService IDisposableObject IDisposable IAsyncDisposable IStatusProvider IProducerConsumerCollection<QueueWorker.Task_Delegate> IEnumerable<QueueWorker.Task_Delegate> ICollection IEnumerable Inherited Members ParallelItemQueueWorkerBase<RpcProcessor.Call>.EnqueueAsync(RpcProcessor.Call, CancellationToken) ParallelItemQueueWorkerBase<RpcProcessor.Call>.TryEnqueue(RpcProcessor.Call) ParallelItemQueueWorkerBase<RpcProcessor.Call>.EnqueueRangeAsync(IEnumerable<RpcProcessor.Call>, CancellationToken) ParallelItemQueueWorkerBase<RpcProcessor.Call>.EnqueueRangeAsync(IAsyncEnumerable<RpcProcessor.Call>, CancellationToken) ParallelQueueWorker.Busy ParallelQueueWorker.Processing ParallelQueueWorker.WorkerSync ParallelQueueWorker.ProcessCount ParallelQueueWorker.WaitBoring(TimeSpan) ParallelQueueWorker.WaitBoringAsync(TimeSpan) ParallelQueueWorker.WaitBoring(CancellationToken) ParallelQueueWorker.WaitBoringAsync(CancellationToken) ParallelQueueWorker.AfterStopAsync(CancellationToken) ParallelQueueWorker.WorkerAsync() ParallelQueueWorker.Process(QueueWorker.Task_Delegate, CancellationToken) ParallelQueueWorker.Dispose(bool) ParallelQueueWorker.DisposeCore() ParallelQueueWorker.Threads ParallelQueueWorker.State QueueWorker.Queue QueueWorker.EnqueueAsync(QueueWorker.Task_Delegate, CancellationToken) QueueWorker.TryEnqueue(QueueWorker.Task_Delegate, CancellationToken) QueueWorker.EnqueueRangeAsync(IEnumerable<QueueWorker.Task_Delegate>, CancellationToken) QueueWorker.EnqueueRangeAsync(IAsyncEnumerable<QueueWorker.Task_Delegate>, CancellationToken) QueueWorker.TryAdd(QueueWorker.Task_Delegate) QueueWorker.TryTake(out QueueWorker.Task_Delegate) QueueWorker.CopyTo(QueueWorker.Task_Delegate[], int) QueueWorker.ToArray() QueueWorker.GetEnumerator() QueueWorker.CopyTo(Array, int) QueueWorker.GUID QueueWorker.Queued QueueWorker.Count QueueWorker.IsSynchronized QueueWorker.SyncRoot HostedServiceBase.Sync HostedServiceBase.RunEvent HostedServiceBase.PauseEvent HostedServiceBase.StopTask HostedServiceBase.Cancellation HostedServiceBase.ServiceTask HostedServiceBase._LastException HostedServiceBase.StartAsync(CancellationToken) HostedServiceBase.StopAsync(CancellationToken) HostedServiceBase.PauseAsync(CancellationToken) HostedServiceBase.ResumeAsync(CancellationToken) HostedServiceBase.ToString() HostedServiceBase.BeforeStartAsync(CancellationToken) HostedServiceBase.StartingAsync(CancellationToken) HostedServiceBase.AfterStartAsync(CancellationToken) HostedServiceBase.BeforeStopAsync(CancellationToken) HostedServiceBase.StoppingAsync(CancellationToken) HostedServiceBase.BeforePauseAsync(CancellationToken) HostedServiceBase.PausingAsync(CancellationToken) HostedServiceBase.AfterPauseAsync(CancellationToken) HostedServiceBase.BeforeResumeAsync(CancellationToken) HostedServiceBase.ResumingAsync(CancellationToken) HostedServiceBase.AfterResumeAsync(CancellationToken) HostedServiceBase.RunServiceAsync() HostedServiceBase.EnsureNotCanceled(in bool) HostedServiceBase.EnsureRunning(in bool) HostedServiceBase.RaiseOnException() HostedServiceBase.CanPause HostedServiceBase.IsRunning HostedServiceBase.IsPaused HostedServiceBase.Started HostedServiceBase.Paused HostedServiceBase.Stopped HostedServiceBase.IsStopping HostedServiceBase.LastException HostedServiceBase.StoppedExceptional HostedServiceBase.Name HostedServiceBase.ErrorSource HostedServiceBase.CancelToken HostedServiceBase.OnException DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax protected class RpcProcessor.CallQueue : ParallelItemQueueWorkerBase<RpcProcessor.Call>, IWillDispose, IParallelQueueWorker, IItemQueueWorker<RpcProcessor.Call>, IQueueWorker, IServiceWorkerStatus, IServiceWorker, IHostedService, IDisposableObject, IDisposable, IAsyncDisposable, IStatusProvider, IProducerConsumerCollection<QueueWorker.Task_Delegate>, IEnumerable<QueueWorker.Task_Delegate>, ICollection, IEnumerable Remarks Constructor Constructors | Edit this page View Source CallQueue(in RpcProcessor) RPC call queue Declaration public CallQueue(in RpcProcessor processor) Parameters Type Name Description RpcProcessor processor RPC processor Remarks Constructor Properties | Edit this page View Source Processor RPC processor Declaration public RpcProcessor Processor { get; } Property Value Type Description RpcProcessor Methods | Edit this page View Source AuthorizeContextAsync(Call, RequestMessage, RpcApiMethodInfo, RpcContext) Authorize the RPC context (should set a Completion exception on error) Declaration protected virtual Task<bool> AuthorizeContextAsync(RpcProcessor.Call item, RequestMessage request, RpcApiMethodInfo method, RpcContext context) Parameters Type Name Description RpcProcessor.Call item RPC call RequestMessage request RPC request message RpcApiMethodInfo method RPC API method RpcContext context Context Returns Type Description Task<bool> If authorized | Edit this page View Source FindApiMethodAsync(Call, RequestMessage) Find the API method to use (should set a Completion exception on error) Declaration protected virtual Task<RpcApiMethodInfo?> FindApiMethodAsync(RpcProcessor.Call item, RequestMessage request) Parameters Type Name Description RpcProcessor.Call item RPC call RequestMessage request RPC request message Returns Type Description Task<RpcApiMethodInfo> API method (validated to be callable using the RPC request informations) | Edit this page View Source GetFinalParameterValueAsync(Call, RequestMessage, RpcContext, RpcApiMethodParameterInfo, int, object?) Get the final parameter value for the API method call Declaration protected virtual Task<object?> GetFinalParameterValueAsync(RpcProcessor.Call item, RequestMessage request, RpcContext context, RpcApiMethodParameterInfo parameter, int index, object? value) Parameters Type Name Description RpcProcessor.Call item RPC call RequestMessage request RPC request message RpcContext context Context RpcApiMethodParameterInfo parameter API method parameter int index Zero based index of the RPC call parameter (or -1, if it's not a RPC servable parameter) object value Current parameter value Returns Type Description Task<object> Parameter value to use | Edit this page View Source GetFinalReturnValueAsync(Call, RequestMessage, RpcContext, RpcApiMethodInfo, object?) Get the final return value of a method request which will be sent back to the peer Declaration protected virtual Task<object?> GetFinalReturnValueAsync(RpcProcessor.Call item, RequestMessage request, RpcContext context, RpcApiMethodInfo method, object? returnValue) Parameters Type Name Description RpcProcessor.Call item RPC call RequestMessage request RPC request message RpcContext context Context RpcApiMethodInfo method API method object returnValue Return value Returns Type Description Task<object> Final return value | Edit this page View Source GetParameterValueAsync(Call, RequestMessage, RpcContext, RpcApiMethodParameterInfo, int) Get a parameter value for the API method call Declaration protected virtual Task<object?> GetParameterValueAsync(RpcProcessor.Call item, RequestMessage request, RpcContext context, RpcApiMethodParameterInfo parameter, int index) Parameters Type Name Description RpcProcessor.Call item RPC call RequestMessage request RPC request message RpcContext context Context RpcApiMethodParameterInfo parameter API method parameter int index Zero based index of the RPC call parameter (or -1, if it's not a RPC servable parameter) Returns Type Description Task<object> Parameter value to use | Edit this page View Source ProcessItem(Call, CancellationToken) Process one item Declaration protected override Task ProcessItem(RpcProcessor.Call item, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor.Call item Item to process CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides ParallelItemQueueWorkerBase<RpcProcessor.Call>.ProcessItem(RpcProcessor.Call, CancellationToken) Implements wan24.Core.IWillDispose wan24.Core.IParallelQueueWorker wan24.Core.IItemQueueWorker<T> wan24.Core.IQueueWorker wan24.Core.IServiceWorkerStatus wan24.Core.IServiceWorker IHostedService wan24.Core.IDisposableObject IDisposable IAsyncDisposable wan24.Core.IStatusProvider IProducerConsumerCollection<T> IEnumerable<T> ICollection IEnumerable"
  },
  "api/wan24.RPC.Processing.RpcProcessor.IncomingQueue.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.IncomingQueue.html",
    "title": "Class RpcProcessor.IncomingQueue | wan24-RPC",
    "keywords": "Class RpcProcessor.IncomingQueue Incoming message queue Inheritance object DisposableBase HostedServiceBase QueueWorker ParallelQueueWorker ParallelItemQueueWorkerBase<IRpcMessage> RpcProcessor.IncomingQueue Implements IWillDispose IParallelQueueWorker IItemQueueWorker<IRpcMessage> IQueueWorker IServiceWorkerStatus IServiceWorker IHostedService IDisposableObject IDisposable IAsyncDisposable IStatusProvider IProducerConsumerCollection<QueueWorker.Task_Delegate> IEnumerable<QueueWorker.Task_Delegate> ICollection IEnumerable Inherited Members ParallelItemQueueWorkerBase<IRpcMessage>.EnqueueAsync(IRpcMessage, CancellationToken) ParallelItemQueueWorkerBase<IRpcMessage>.TryEnqueue(IRpcMessage) ParallelItemQueueWorkerBase<IRpcMessage>.EnqueueRangeAsync(IEnumerable<IRpcMessage>, CancellationToken) ParallelItemQueueWorkerBase<IRpcMessage>.EnqueueRangeAsync(IAsyncEnumerable<IRpcMessage>, CancellationToken) ParallelQueueWorker.Busy ParallelQueueWorker.Processing ParallelQueueWorker.WorkerSync ParallelQueueWorker.ProcessCount ParallelQueueWorker.WaitBoring(TimeSpan) ParallelQueueWorker.WaitBoringAsync(TimeSpan) ParallelQueueWorker.WaitBoring(CancellationToken) ParallelQueueWorker.WaitBoringAsync(CancellationToken) ParallelQueueWorker.AfterStopAsync(CancellationToken) ParallelQueueWorker.WorkerAsync() ParallelQueueWorker.Process(QueueWorker.Task_Delegate, CancellationToken) ParallelQueueWorker.Threads ParallelQueueWorker.State QueueWorker.Queue QueueWorker.EnqueueAsync(QueueWorker.Task_Delegate, CancellationToken) QueueWorker.TryEnqueue(QueueWorker.Task_Delegate, CancellationToken) QueueWorker.EnqueueRangeAsync(IEnumerable<QueueWorker.Task_Delegate>, CancellationToken) QueueWorker.EnqueueRangeAsync(IAsyncEnumerable<QueueWorker.Task_Delegate>, CancellationToken) QueueWorker.TryAdd(QueueWorker.Task_Delegate) QueueWorker.TryTake(out QueueWorker.Task_Delegate) QueueWorker.CopyTo(QueueWorker.Task_Delegate[], int) QueueWorker.ToArray() QueueWorker.GetEnumerator() QueueWorker.CopyTo(Array, int) QueueWorker.GUID QueueWorker.Queued QueueWorker.Count QueueWorker.IsSynchronized QueueWorker.SyncRoot HostedServiceBase.Sync HostedServiceBase.RunEvent HostedServiceBase.PauseEvent HostedServiceBase.StopTask HostedServiceBase.Cancellation HostedServiceBase.ServiceTask HostedServiceBase._LastException HostedServiceBase.StartAsync(CancellationToken) HostedServiceBase.StopAsync(CancellationToken) HostedServiceBase.PauseAsync(CancellationToken) HostedServiceBase.ResumeAsync(CancellationToken) HostedServiceBase.ToString() HostedServiceBase.BeforeStartAsync(CancellationToken) HostedServiceBase.StartingAsync(CancellationToken) HostedServiceBase.AfterStartAsync(CancellationToken) HostedServiceBase.BeforeStopAsync(CancellationToken) HostedServiceBase.StoppingAsync(CancellationToken) HostedServiceBase.BeforePauseAsync(CancellationToken) HostedServiceBase.PausingAsync(CancellationToken) HostedServiceBase.AfterPauseAsync(CancellationToken) HostedServiceBase.BeforeResumeAsync(CancellationToken) HostedServiceBase.ResumingAsync(CancellationToken) HostedServiceBase.AfterResumeAsync(CancellationToken) HostedServiceBase.RunServiceAsync() HostedServiceBase.EnsureNotCanceled(in bool) HostedServiceBase.EnsureRunning(in bool) HostedServiceBase.RaiseOnException() HostedServiceBase.CanPause HostedServiceBase.IsRunning HostedServiceBase.IsPaused HostedServiceBase.Started HostedServiceBase.Paused HostedServiceBase.Stopped HostedServiceBase.IsStopping HostedServiceBase.LastException HostedServiceBase.StoppedExceptional HostedServiceBase.Name HostedServiceBase.ErrorSource HostedServiceBase.CancelToken HostedServiceBase.OnException DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax protected class RpcProcessor.IncomingQueue : ParallelItemQueueWorkerBase<IRpcMessage>, IWillDispose, IParallelQueueWorker, IItemQueueWorker<IRpcMessage>, IQueueWorker, IServiceWorkerStatus, IServiceWorker, IHostedService, IDisposableObject, IDisposable, IAsyncDisposable, IStatusProvider, IProducerConsumerCollection<QueueWorker.Task_Delegate>, IEnumerable<QueueWorker.Task_Delegate>, ICollection, IEnumerable Constructors | Edit this page View Source IncomingQueue(in RpcProcessor) Incoming message queue Declaration public IncomingQueue(in RpcProcessor processor) Parameters Type Name Description RpcProcessor processor RPC processor Fields | Edit this page View Source SpaceEvent Space event (raised and reset when having space) Declaration public readonly ResetEvent SpaceEvent Field Value Type Description ResetEvent Properties | Edit this page View Source Processor RPC processor Declaration public RpcProcessor Processor { get; } Property Value Type Description RpcProcessor Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides ParallelQueueWorker.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.ParallelQueueWorker.DisposeCore() | Edit this page View Source ProcessItem(IRpcMessage, CancellationToken) Process one item Declaration protected override Task ProcessItem(IRpcMessage item, CancellationToken cancellationToken) Parameters Type Name Description IRpcMessage item Item to process CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides ParallelItemQueueWorkerBase<IRpcMessage>.ProcessItem(IRpcMessage, CancellationToken) | Edit this page View Source WaitSpaceAsync() Wait for space Declaration public virtual Task WaitSpaceAsync() Returns Type Description Task Implements wan24.Core.IWillDispose wan24.Core.IParallelQueueWorker wan24.Core.IItemQueueWorker<T> wan24.Core.IQueueWorker wan24.Core.IServiceWorkerStatus wan24.Core.IServiceWorker IHostedService wan24.Core.IDisposableObject IDisposable IAsyncDisposable wan24.Core.IStatusProvider IProducerConsumerCollection<T> IEnumerable<T> ICollection IEnumerable"
  },
  "api/wan24.RPC.Processing.RpcProcessor.IncomingStream.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.IncomingStream.html",
    "title": "Class RpcProcessor.IncomingStream | wan24-RPC",
    "keywords": "Class RpcProcessor.IncomingStream Incoming stream Inheritance object DisposableRecordBase RpcProcessor.IncomingStream Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcProcessor.IncomingStream> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public record RpcProcessor.IncomingStream : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcProcessor.IncomingStream> Constructors | Edit this page View Source IncomingStream() Incoming stream Declaration public IncomingStream() Properties | Edit this page View Source Decompression Decompression stream Declaration public Stream? Decompression { get; protected set; } Property Value Type Description Stream | Edit this page View Source Done Done time Declaration public DateTime Done { get; protected set; } Property Value Type Description DateTime | Edit this page View Source IsCanceled If canceled Declaration public bool IsCanceled { get; protected set; } Property Value Type Description bool | Edit this page View Source IsChunkRequested If the next chunk was requested Declaration public bool IsChunkRequested { get; set; } Property Value Type Description bool | Edit this page View Source IsDone If done Declaration public bool IsDone { get; } Property Value Type Description bool | Edit this page View Source IsStarted If started streaming Declaration public bool IsStarted { get; } Property Value Type Description bool | Edit this page View Source LastRemoteException Last remote exception Declaration public Exception? LastRemoteException { get; protected set; } Property Value Type Description Exception | Edit this page View Source Processor RPC processor Declaration public required RpcProcessor Processor { get; init; } Property Value Type Description RpcProcessor | Edit this page View Source ProcessorCancellation RPC processor cancellation token Declaration public required CancellationToken ProcessorCancellation { get; init; } Property Value Type Description CancellationToken | Edit this page View Source Started Streaming started time Declaration public DateTime Started { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Stream RPC stream Declaration public required RpcStream Stream { get; init; } Property Value Type Description RpcStream | Edit this page View Source Target Chunk target stream Declaration public Stream Target { get; } Property Value Type Description Stream | Edit this page View Source Value Stream value Declaration public required RpcStreamValue Value { get; init; } Property Value Type Description RpcStreamValue Methods | Edit this page View Source CancelAsync() Cancel streaming Declaration public virtual Task CancelAsync() Returns Type Description Task | Edit this page View Source CompleteAsync() Complete streaming Declaration public virtual Task CompleteAsync() Returns Type Description Task | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableRecordBase.DisposeCore() | Edit this page View Source SetDone() Set Done Declaration public virtual void SetDone() | Edit this page View Source SetRemoteExceptionAsync(LocalStreamCloseMessage) Set a remote exception Declaration public virtual Task SetRemoteExceptionAsync(LocalStreamCloseMessage message) Parameters Type Name Description LocalStreamCloseMessage message Message Returns Type Description Task | Edit this page View Source StartAsync(CancellationToken) Start streaming Declaration public virtual Task StartAsync(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken Cancellation token Returns Type Description Task Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessor.OutgoingQueue.QueuedMessage.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.OutgoingQueue.QueuedMessage.html",
    "title": "Class RpcProcessor.OutgoingQueue.QueuedMessage | wan24-RPC",
    "keywords": "Class RpcProcessor.OutgoingQueue.QueuedMessage Queued outgoing message Inheritance object RpcProcessor.OutgoingQueue.QueuedMessage Implements IEquatable<RpcProcessor.OutgoingQueue.QueuedMessage> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public record RpcProcessor.OutgoingQueue.QueuedMessage : IEquatable<RpcProcessor.OutgoingQueue.QueuedMessage> Remarks Constructor Constructors | Edit this page View Source QueuedMessage() Queued outgoing message Declaration public QueuedMessage() Remarks Constructor Properties | Edit this page View Source CancelToken Cancellation Declaration public required CancellationToken CancelToken { get; init; } Property Value Type Description CancellationToken | Edit this page View Source Completion Completion Declaration public TaskCompletionSource Completion { get; } Property Value Type Description TaskCompletionSource | Edit this page View Source Done Done time Declaration public DateTime Done { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Enqueued Enqueued time Declaration public DateTime Enqueued { get; } Property Value Type Description DateTime | Edit this page View Source IsDone If the message has been processed Declaration public bool IsDone { get; } Property Value Type Description bool | Edit this page View Source Message Message Declaration public required IRpcMessage Message { get; init; } Property Value Type Description IRpcMessage | Edit this page View Source Priority Priority (higher value will be processed faster) Declaration public required int Priority { get; init; } Property Value Type Description int Methods | Edit this page View Source SetDone() Set Done Declaration public virtual void SetDone() Implements IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessor.OutgoingQueue.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.OutgoingQueue.html",
    "title": "Class RpcProcessor.OutgoingQueue | wan24-RPC",
    "keywords": "Class RpcProcessor.OutgoingQueue Outgoing message queue Inheritance object DisposableBase HostedServiceBase PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage> PriorityItemQueueWorkerBase<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage> RpcProcessor.OutgoingQueue Implements IWillDispose IPriorityItemQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage> IPriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage> IServiceWorkerStatus IServiceWorker IHostedService IDisposableObject IDisposable IAsyncDisposable IStatusProvider Inherited Members PriorityItemQueueWorkerBase<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage>.EnqueueAsync(RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) PriorityItemQueueWorkerBase<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage>.TryEnqueue(RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage) PriorityItemQueueWorkerBase<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage>.EnqueueRangeAsync(IEnumerable<RpcProcessor.OutgoingQueue.QueuedMessage>, RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) PriorityItemQueueWorkerBase<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage>.EnqueueRangeAsync(IAsyncEnumerable<RpcProcessor.OutgoingQueue.QueuedMessage>, RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) PriorityItemQueueWorkerBase<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage>.ProcessItem(RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.Queue PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.QueueSync PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.QueueEvent PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.SpaceEvent PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.EnqueueAsync(PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.Task_Delegate, RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.TryEnqueue(PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.Task_Delegate, RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.EnqueueRangeAsync(IEnumerable<PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.Task_Delegate>, RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.EnqueueRangeAsync(IAsyncEnumerable<PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.Task_Delegate>, RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.WorkerAsync() PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.Dispose(bool) PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.DisposeCore() PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.GUID PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.Capacity PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.Queued PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.State HostedServiceBase.Sync HostedServiceBase.RunEvent HostedServiceBase.PauseEvent HostedServiceBase.StopTask HostedServiceBase.Cancellation HostedServiceBase.ServiceTask HostedServiceBase._LastException HostedServiceBase.StartAsync(CancellationToken) HostedServiceBase.StopAsync(CancellationToken) HostedServiceBase.PauseAsync(CancellationToken) HostedServiceBase.ResumeAsync(CancellationToken) HostedServiceBase.ToString() HostedServiceBase.BeforeStartAsync(CancellationToken) HostedServiceBase.StartingAsync(CancellationToken) HostedServiceBase.AfterStartAsync(CancellationToken) HostedServiceBase.BeforeStopAsync(CancellationToken) HostedServiceBase.StoppingAsync(CancellationToken) HostedServiceBase.AfterStopAsync(CancellationToken) HostedServiceBase.BeforePauseAsync(CancellationToken) HostedServiceBase.PausingAsync(CancellationToken) HostedServiceBase.AfterPauseAsync(CancellationToken) HostedServiceBase.BeforeResumeAsync(CancellationToken) HostedServiceBase.ResumingAsync(CancellationToken) HostedServiceBase.AfterResumeAsync(CancellationToken) HostedServiceBase.RunServiceAsync() HostedServiceBase.EnsureNotCanceled(in bool) HostedServiceBase.EnsureRunning(in bool) HostedServiceBase.RaiseOnException() HostedServiceBase.CanPause HostedServiceBase.IsRunning HostedServiceBase.IsPaused HostedServiceBase.Started HostedServiceBase.Paused HostedServiceBase.Stopped HostedServiceBase.IsStopping HostedServiceBase.LastException HostedServiceBase.StoppedExceptional HostedServiceBase.Name HostedServiceBase.ErrorSource HostedServiceBase.CancelToken HostedServiceBase.OnException DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax protected class RpcProcessor.OutgoingQueue : PriorityItemQueueWorkerBase<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage>, IWillDispose, IPriorityItemQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage>, IPriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>, IServiceWorkerStatus, IServiceWorker, IHostedService, IDisposableObject, IDisposable, IAsyncDisposable, IStatusProvider Remarks Constructor Constructors | Edit this page View Source OutgoingQueue(in RpcProcessor, in IComparer<QueuedMessage>?) Outgoing message queue Declaration public OutgoingQueue(in RpcProcessor processor, in IComparer<RpcProcessor.OutgoingQueue.QueuedMessage>? comparer = null) Parameters Type Name Description RpcProcessor processor RPC processor IComparer<RpcProcessor.OutgoingQueue.QueuedMessage> comparer Message comparer Remarks Constructor Properties | Edit this page View Source Processor RPC processor Declaration public RpcProcessor Processor { get; } Property Value Type Description RpcProcessor Methods | Edit this page View Source ProcessItem(QueuedMessage, CancellationToken) Process one item Declaration protected override Task ProcessItem(RpcProcessor.OutgoingQueue.QueuedMessage item, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor.OutgoingQueue.QueuedMessage item Item to process CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides PriorityItemQueueWorkerBase<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage>.ProcessItem(RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) Implements wan24.Core.IWillDispose wan24.Core.IPriorityItemQueueWorker<tItem, tPriority> wan24.Core.IPriorityQueueWorker<T> wan24.Core.IServiceWorkerStatus wan24.Core.IServiceWorker IHostedService wan24.Core.IDisposableObject IDisposable IAsyncDisposable wan24.Core.IStatusProvider"
  },
  "api/wan24.RPC.Processing.RpcProcessor.OutgoingStream.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.OutgoingStream.html",
    "title": "Class RpcProcessor.OutgoingStream | wan24-RPC",
    "keywords": "Class RpcProcessor.OutgoingStream Outgoing stream Inheritance object DisposableRecordBase RpcProcessor.OutgoingStream Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcProcessor.OutgoingStream> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax protected record RpcProcessor.OutgoingStream : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcProcessor.OutgoingStream> Remarks Constructor Constructors | Edit this page View Source OutgoingStream() Outgoing stream Declaration public OutgoingStream() Remarks Constructor Properties | Edit this page View Source Cancellation Cancellation Declaration public CancellationTokenSource Cancellation { get; } Property Value Type Description CancellationTokenSource | Edit this page View Source Completed Transfer completed? Declaration public bool Completed { get; protected set; } Property Value Type Description bool | Edit this page View Source Done Done time Declaration public DateTime Done { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Id Stream ID Declaration public required long Id { get; init; } Property Value Type Description long | Edit this page View Source IsDone If done Declaration public bool IsDone { get; } Property Value Type Description bool | Edit this page View Source LastException Last transfer exception Declaration public Exception? LastException { get; set; } Property Value Type Description Exception | Edit this page View Source Parameter Parameter Declaration public required RpcStreamParameter Parameter { get; init; } Property Value Type Description RpcStreamParameter | Edit this page View Source Processor RPC processor Declaration public required RpcProcessor Processor { get; init; } Property Value Type Description RpcProcessor | Edit this page View Source RemoteCanceled If canceled from the remote peer Declaration public bool RemoteCanceled { get; set; } Property Value Type Description bool | Edit this page View Source Source Source stream Declaration public Stream? Source { get; protected set; } Property Value Type Description Stream | Edit this page View Source Started Started time Declaration public DateTime Started { get; protected set; } Property Value Type Description DateTime | Edit this page View Source UncompressedSourceLength Uncompressed source stream length in bytes Declaration public long? UncompressedSourceLength { get; init; } Property Value Type Description long? Methods | Edit this page View Source CompressAsync() Compression thread Declaration protected virtual Task CompressAsync() Returns Type Description Task | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableRecordBase.DisposeCore() | Edit this page View Source ReadNextChunkAsync(Memory<byte>, CancellationToken) Read the next chunk Declaration public virtual Task<int> ReadNextChunkAsync(Memory<byte> buffer, CancellationToken cancellationToken = default) Parameters Type Name Description Memory<byte> buffer Buffer CancellationToken cancellationToken Cancellation token Returns Type Description Task<int> Number of bytes red | Edit this page View Source SetDone() Set Done Declaration public virtual void SetDone() | Edit this page View Source StartAsync() Start streaming Declaration public virtual Task StartAsync() Returns Type Description Task Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessor.Request.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.Request.html",
    "title": "Class RpcProcessor.Request | wan24-RPC",
    "keywords": "Class RpcProcessor.Request RPC request (context) Inheritance object DisposableRecordBase RpcProcessor.Request Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcProcessor.Request> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax protected record RpcProcessor.Request : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcProcessor.Request> Remarks Constructor Constructors | Edit this page View Source Request() RPC request (context) Declaration public Request() Remarks Constructor Properties | Edit this page View Source Created Created time Declaration public DateTime Created { get; } Property Value Type Description DateTime | Edit this page View Source Done Done time Declaration public DateTime Done { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Message Message Declaration public required IRpcRequest Message { get; init; } Property Value Type Description IRpcRequest | Edit this page View Source Processed If the request was processed by the peer (the request message was sent) Declaration public bool Processed { get; set; } Property Value Type Description bool | Edit this page View Source Processor RPC processor Declaration public required RpcProcessor Processor { get; init; } Property Value Type Description RpcProcessor | Edit this page View Source ProcessorCancellation RPC processor cancellation token Declaration public required CancellationToken ProcessorCancellation { get; init; } Property Value Type Description CancellationToken | Edit this page View Source ProcessorCompletion Processor completion (completes the request queue processing) Declaration public TaskCompletionSource<object?> ProcessorCompletion { get; } Property Value Type Description TaskCompletionSource<object> | Edit this page View Source RequestCancellation Request cancellation token Declaration public CancellationToken RequestCancellation { get; init; } Property Value Type Description CancellationToken | Edit this page View Source RequestCompletion Request completion (completes the whole request) Declaration public TaskCompletionSource<object?> RequestCompletion { get; } Property Value Type Description TaskCompletionSource<object> | Edit this page View Source Streams Outgoing streams (will be disposed) Declaration public HashSet<RpcProcessor.OutgoingStream> Streams { get; } Property Value Type Description HashSet<RpcProcessor.OutgoingStream> Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableRecordBase.DisposeCore() | Edit this page View Source SetDone() Set done Declaration public virtual void SetDone() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessor.RequestQueue.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.RequestQueue.html",
    "title": "Class RpcProcessor.RequestQueue | wan24-RPC",
    "keywords": "Class RpcProcessor.RequestQueue RPC request queue Inheritance object DisposableBase HostedServiceBase QueueWorker ParallelQueueWorker ParallelItemQueueWorkerBase<RpcProcessor.Request> RpcProcessor.RequestQueue Implements IWillDispose IParallelQueueWorker IItemQueueWorker<RpcProcessor.Request> IQueueWorker IServiceWorkerStatus IServiceWorker IHostedService IDisposableObject IDisposable IAsyncDisposable IStatusProvider IProducerConsumerCollection<QueueWorker.Task_Delegate> IEnumerable<QueueWorker.Task_Delegate> ICollection IEnumerable Inherited Members ParallelItemQueueWorkerBase<RpcProcessor.Request>.EnqueueAsync(RpcProcessor.Request, CancellationToken) ParallelItemQueueWorkerBase<RpcProcessor.Request>.TryEnqueue(RpcProcessor.Request) ParallelItemQueueWorkerBase<RpcProcessor.Request>.EnqueueRangeAsync(IEnumerable<RpcProcessor.Request>, CancellationToken) ParallelItemQueueWorkerBase<RpcProcessor.Request>.EnqueueRangeAsync(IAsyncEnumerable<RpcProcessor.Request>, CancellationToken) ParallelQueueWorker.Busy ParallelQueueWorker.Processing ParallelQueueWorker.WorkerSync ParallelQueueWorker.ProcessCount ParallelQueueWorker.WaitBoring(TimeSpan) ParallelQueueWorker.WaitBoringAsync(TimeSpan) ParallelQueueWorker.WaitBoring(CancellationToken) ParallelQueueWorker.WaitBoringAsync(CancellationToken) ParallelQueueWorker.AfterStopAsync(CancellationToken) ParallelQueueWorker.WorkerAsync() ParallelQueueWorker.Process(QueueWorker.Task_Delegate, CancellationToken) ParallelQueueWorker.Dispose(bool) ParallelQueueWorker.DisposeCore() ParallelQueueWorker.Threads ParallelQueueWorker.State QueueWorker.Queue QueueWorker.EnqueueAsync(QueueWorker.Task_Delegate, CancellationToken) QueueWorker.TryEnqueue(QueueWorker.Task_Delegate, CancellationToken) QueueWorker.EnqueueRangeAsync(IEnumerable<QueueWorker.Task_Delegate>, CancellationToken) QueueWorker.EnqueueRangeAsync(IAsyncEnumerable<QueueWorker.Task_Delegate>, CancellationToken) QueueWorker.TryAdd(QueueWorker.Task_Delegate) QueueWorker.TryTake(out QueueWorker.Task_Delegate) QueueWorker.CopyTo(QueueWorker.Task_Delegate[], int) QueueWorker.ToArray() QueueWorker.GetEnumerator() QueueWorker.CopyTo(Array, int) QueueWorker.GUID QueueWorker.Queued QueueWorker.Count QueueWorker.IsSynchronized QueueWorker.SyncRoot HostedServiceBase.Sync HostedServiceBase.RunEvent HostedServiceBase.PauseEvent HostedServiceBase.StopTask HostedServiceBase.Cancellation HostedServiceBase.ServiceTask HostedServiceBase._LastException HostedServiceBase.StartAsync(CancellationToken) HostedServiceBase.StopAsync(CancellationToken) HostedServiceBase.PauseAsync(CancellationToken) HostedServiceBase.ResumeAsync(CancellationToken) HostedServiceBase.ToString() HostedServiceBase.BeforeStartAsync(CancellationToken) HostedServiceBase.StartingAsync(CancellationToken) HostedServiceBase.AfterStartAsync(CancellationToken) HostedServiceBase.BeforeStopAsync(CancellationToken) HostedServiceBase.StoppingAsync(CancellationToken) HostedServiceBase.BeforePauseAsync(CancellationToken) HostedServiceBase.PausingAsync(CancellationToken) HostedServiceBase.AfterPauseAsync(CancellationToken) HostedServiceBase.BeforeResumeAsync(CancellationToken) HostedServiceBase.ResumingAsync(CancellationToken) HostedServiceBase.AfterResumeAsync(CancellationToken) HostedServiceBase.RunServiceAsync() HostedServiceBase.EnsureNotCanceled(in bool) HostedServiceBase.EnsureRunning(in bool) HostedServiceBase.RaiseOnException() HostedServiceBase.CanPause HostedServiceBase.IsRunning HostedServiceBase.IsPaused HostedServiceBase.Started HostedServiceBase.Paused HostedServiceBase.Stopped HostedServiceBase.IsStopping HostedServiceBase.LastException HostedServiceBase.StoppedExceptional HostedServiceBase.Name HostedServiceBase.ErrorSource HostedServiceBase.CancelToken HostedServiceBase.OnException DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax protected class RpcProcessor.RequestQueue : ParallelItemQueueWorkerBase<RpcProcessor.Request>, IWillDispose, IParallelQueueWorker, IItemQueueWorker<RpcProcessor.Request>, IQueueWorker, IServiceWorkerStatus, IServiceWorker, IHostedService, IDisposableObject, IDisposable, IAsyncDisposable, IStatusProvider, IProducerConsumerCollection<QueueWorker.Task_Delegate>, IEnumerable<QueueWorker.Task_Delegate>, ICollection, IEnumerable Constructors | Edit this page View Source RequestQueue(in RpcProcessor) RPC request queue Declaration public RequestQueue(in RpcProcessor processor) Parameters Type Name Description RpcProcessor processor Properties | Edit this page View Source Processor RPC processor Declaration public RpcProcessor Processor { get; } Property Value Type Description RpcProcessor Methods | Edit this page View Source GetFinalParameterValueAsync(Request, RequestMessage, int, object?, CancellationToken) Get the final parameter value Declaration protected virtual Task<object?> GetFinalParameterValueAsync(RpcProcessor.Request item, RequestMessage request, int index, object? value, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor.Request item RPC request RequestMessage request RPC request message int index Zero based parameter index object value Current parameter value CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Parameter value to use | Edit this page View Source GetFinalReturnValueAsync(Request, RequestMessage, object?, CancellationToken) Get the final return value of a method call which will be sent back to the peer Declaration protected virtual Task<object?> GetFinalReturnValueAsync(RpcProcessor.Request item, RequestMessage request, object? returnValue, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor.Request item RPC request RequestMessage request RPC request message object returnValue Return value CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Final return value | Edit this page View Source ProcessItem(Request, CancellationToken) Process one item Declaration protected override Task ProcessItem(RpcProcessor.Request item, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor.Request item Item to process CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides ParallelItemQueueWorkerBase<RpcProcessor.Request>.ProcessItem(RpcProcessor.Request, CancellationToken) Implements wan24.Core.IWillDispose wan24.Core.IParallelQueueWorker wan24.Core.IItemQueueWorker<T> wan24.Core.IQueueWorker wan24.Core.IServiceWorkerStatus wan24.Core.IServiceWorker IHostedService wan24.Core.IDisposableObject IDisposable IAsyncDisposable wan24.Core.IStatusProvider IProducerConsumerCollection<T> IEnumerable<T> ICollection IEnumerable"
  },
  "api/wan24.RPC.Processing.RpcProcessor.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.html",
    "title": "Class RpcProcessor | wan24-RPC",
    "keywords": "Class RpcProcessor RPC processor Inheritance object DisposableBase HostedServiceBase RpcProcessor Implements IWillDispose IServiceWorker IHostedService IDisposableObject IDisposable IAsyncDisposable IStatusProvider Inherited Members HostedServiceBase.Sync HostedServiceBase.RunEvent HostedServiceBase.PauseEvent HostedServiceBase.StopTask HostedServiceBase.Cancellation HostedServiceBase.ServiceTask HostedServiceBase._LastException HostedServiceBase.StartAsync(CancellationToken) HostedServiceBase.StopAsync(CancellationToken) HostedServiceBase.PauseAsync(CancellationToken) HostedServiceBase.ResumeAsync(CancellationToken) HostedServiceBase.ToString() HostedServiceBase.BeforeStartAsync(CancellationToken) HostedServiceBase.StartingAsync(CancellationToken) HostedServiceBase.AfterStartAsync(CancellationToken) HostedServiceBase.BeforeStopAsync(CancellationToken) HostedServiceBase.StoppingAsync(CancellationToken) HostedServiceBase.AfterStopAsync(CancellationToken) HostedServiceBase.BeforePauseAsync(CancellationToken) HostedServiceBase.PausingAsync(CancellationToken) HostedServiceBase.AfterPauseAsync(CancellationToken) HostedServiceBase.BeforeResumeAsync(CancellationToken) HostedServiceBase.ResumingAsync(CancellationToken) HostedServiceBase.AfterResumeAsync(CancellationToken) HostedServiceBase.RunServiceAsync() HostedServiceBase.EnsureNotCanceled(in bool) HostedServiceBase.EnsureRunning(in bool) HostedServiceBase.RaiseOnException() HostedServiceBase.CanPause HostedServiceBase.IsRunning HostedServiceBase.IsPaused HostedServiceBase.Started HostedServiceBase.Paused HostedServiceBase.Stopped HostedServiceBase.IsStopping HostedServiceBase.LastException HostedServiceBase.StoppedExceptional HostedServiceBase.Name HostedServiceBase.ErrorSource HostedServiceBase.CancelToken HostedServiceBase.OnException DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public class RpcProcessor : HostedServiceBase, IWillDispose, IServiceWorker, IHostedService, IDisposableObject, IDisposable, IAsyncDisposable, IStatusProvider Constructors | Edit this page View Source RpcProcessor(in RpcProcessorOptions) Constructor Declaration public RpcProcessor(in RpcProcessorOptions options) Parameters Type Name Description RpcProcessorOptions options Options (will be disposed) Fields | Edit this page View Source CHUNK_PRIORTY Chunk message priority Declaration protected const int CHUNK_PRIORTY = 1000 Field Value Type Description int | Edit this page View Source Calls RPC calls Declaration protected readonly RpcProcessor.CallQueue Calls Field Value Type Description RpcProcessor.CallQueue | Edit this page View Source EVENT_PRIORTY Event message priority Declaration protected const int EVENT_PRIORTY = 2000 Field Value Type Description int | Edit this page View Source IncomingMessages Incoming messages Declaration protected readonly RpcProcessor.IncomingQueue IncomingMessages Field Value Type Description RpcProcessor.IncomingQueue | Edit this page View Source IncomingStreams Incoming streams (key is the stream ID) Declaration protected readonly Dictionary<long, RpcProcessor.IncomingStream> IncomingStreams Field Value Type Description Dictionary<long, RpcProcessor.IncomingStream> | Edit this page View Source IncomingStreamsSync Incoming streams thread synchronization Declaration protected readonly SemaphoreSync IncomingStreamsSync Field Value Type Description SemaphoreSync | Edit this page View Source MessageId Message ID Declaration protected long MessageId Field Value Type Description long | Edit this page View Source OutgoingMessages Outgoing messages Declaration protected readonly RpcProcessor.OutgoingQueue OutgoingMessages Field Value Type Description RpcProcessor.OutgoingQueue | Edit this page View Source OutgoingStreamId Outgoing stream ID Declaration protected long OutgoingStreamId Field Value Type Description long | Edit this page View Source OutgoingStreams Outgoing streams (key is the stream ID) Declaration protected readonly Dictionary<long, RpcProcessor.OutgoingStream> OutgoingStreams Field Value Type Description Dictionary<long, RpcProcessor.OutgoingStream> | Edit this page View Source OutgoingStreamsSync Outgoing streams thread synchronization Declaration protected readonly SemaphoreSync OutgoingStreamsSync Field Value Type Description SemaphoreSync | Edit this page View Source PendingCalls Pending calls Declaration protected readonly ConcurrentDictionary<long, RpcProcessor.Call> PendingCalls Field Value Type Description ConcurrentDictionary<long, RpcProcessor.Call> | Edit this page View Source PendingRequests Pending RPC requests Declaration protected readonly ConcurrentDictionary<long, RpcProcessor.Request> PendingRequests Field Value Type Description ConcurrentDictionary<long, RpcProcessor.Request> | Edit this page View Source RPC_PRIORTY RPC message priority Declaration protected const int RPC_PRIORTY = 3000 Field Value Type Description int | Edit this page View Source Requests RPC request queue Declaration protected readonly RpcProcessor.RequestQueue Requests Field Value Type Description RpcProcessor.RequestQueue | Edit this page View Source WriteSync Stream writing thread synchronization Declaration protected readonly SemaphoreSync WriteSync Field Value Type Description SemaphoreSync | Edit this page View Source _RemoteEvents Remote events (key is the event name; values will be disposed) Declaration protected readonly ConcurrentDictionary<string, RpcEvent> _RemoteEvents Field Value Type Description ConcurrentDictionary<string, RpcEvent> Properties | Edit this page View Source Options Options (will be disposed) Declaration public RpcProcessorOptions Options { get; } Property Value Type Description RpcProcessorOptions | Edit this page View Source RemoteEvents Registered remote events Declaration public IEnumerable<RpcEvent> RemoteEvents { get; } Property Value Type Description IEnumerable<RpcEvent> | Edit this page View Source State Status information Declaration public virtual IEnumerable<Status> State { get; } Property Value Type Description IEnumerable<Status> Methods | Edit this page View Source AddIncomingStream(in IncomingStream, in bool) Add an incoming stream Declaration protected virtual bool AddIncomingStream(in RpcProcessor.IncomingStream stream, in bool lockDict = false) Parameters Type Name Description RpcProcessor.IncomingStream stream Stream bool lockDict If to lock the dictionary Returns Type Description bool If added | Edit this page View Source AddIncomingStreamAsync(IncomingStream, bool, CancellationToken) Add an incoming stream Declaration protected virtual Task<bool> AddIncomingStreamAsync(RpcProcessor.IncomingStream stream, bool lockDict = true, CancellationToken cancellationToken = default) Parameters Type Name Description RpcProcessor.IncomingStream stream Stream bool lockDict If to lock the dictionary CancellationToken cancellationToken Cancellation token Returns Type Description Task<bool> If added | Edit this page View Source AddOutgoingStream(in OutgoingStream, in bool) Add an outgoing stream Declaration protected virtual bool AddOutgoingStream(in RpcProcessor.OutgoingStream stream, in bool lockDict = false) Parameters Type Name Description RpcProcessor.OutgoingStream stream Stream bool lockDict If to lock the dictionary Returns Type Description bool If added | Edit this page View Source AddOutgoingStreamAsync(OutgoingStream, bool, CancellationToken) Add an outgoing stream Declaration protected virtual Task<bool> AddOutgoingStreamAsync(RpcProcessor.OutgoingStream stream, bool lockDict = true, CancellationToken cancellationToken = default) Parameters Type Name Description RpcProcessor.OutgoingStream stream Stream bool lockDict If to lock the dictionary CancellationToken cancellationToken Cancellation token Returns Type Description Task<bool> If added | Edit this page View Source AddPendingCall(in Call) Add a pending call Declaration protected virtual bool AddPendingCall(in RpcProcessor.Call call) Parameters Type Name Description RpcProcessor.Call call Call Returns Type Description bool If added | Edit this page View Source AddPendingRequest(in Request) Add a pending request Declaration protected virtual bool AddPendingRequest(in RpcProcessor.Request request) Parameters Type Name Description RpcProcessor.Request request Request Returns Type Description bool If added | Edit this page View Source AddRemoteEvent(in RpcEvent) Add a remote event Declaration protected virtual bool AddRemoteEvent(in RpcEvent e) Parameters Type Name Description RpcEvent e Event Returns Type Description bool | Edit this page View Source BeginWorkAsync() Begin working Declaration protected virtual Task BeginWorkAsync() Returns Type Description Task | Edit this page View Source CallValueAsync(string?, string, Type, CancellationToken, params object?[]) Call a RPC API method at the peer and wait for the return value Declaration public virtual Task<object?> CallValueAsync(string? api, string method, Type returnValueType, CancellationToken cancellationToken = default, params object?[] parameters) Parameters Type Name Description string api API name string method Method name Type returnValueType Return value type CancellationToken cancellationToken Cancellation token object[] parameters Parameters (won't be diposed) Returns Type Description Task<object> Return value (should be disposed, if possible) | Edit this page View Source CallValueAsync<T>(string?, string, CancellationToken, params object?[]) Call a RPC API method at the peer and wait for the return value Declaration public virtual Task<T?> CallValueAsync<T>(string? api, string method, CancellationToken cancellationToken = default, params object?[] parameters) Parameters Type Name Description string api API name string method Method name CancellationToken cancellationToken Cancellation token object[] parameters Parameters (won't be diposed) Returns Type Description Task<T> Return value (should be disposed, if possible) Type Parameters Name Description T Return value type | Edit this page View Source CallVoidAsync(string?, string, CancellationToken, params object?[]) Call a RPC API method at the peer and wait for the return value Declaration public virtual Task CallVoidAsync(string? api, string method, CancellationToken cancellationToken = default, params object?[] parameters) Parameters Type Name Description string api API name string method Method name CancellationToken cancellationToken Cancellation token object[] parameters Parameters (won't be diposed) Returns Type Description Task | Edit this page View Source CancelRequestAsync(RequestMessage) Cancel a RPC request execution at the peer Declaration protected virtual Task CancelRequestAsync(RequestMessage request) Parameters Type Name Description RequestMessage request RPC request message Returns Type Description Task | Edit this page View Source CreateCallQueue() Create a call queue Declaration protected virtual RpcProcessor.CallQueue CreateCallQueue() Returns Type Description RpcProcessor.CallQueue Call queue | Edit this page View Source CreateEvent(in string, in Type, in EventHandler_Delegate) Create an event Declaration protected virtual RpcEvent CreateEvent(in string name, in Type arguments, in RpcEvent.EventHandler_Delegate handler) Parameters Type Name Description string name Event name Type arguments Event arguments type RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event | Edit this page View Source CreateEvent(in string, in EventHandler_Delegate) Create an event Declaration protected virtual RpcEvent CreateEvent(in string name, in RpcEvent.EventHandler_Delegate handler) Parameters Type Name Description string name Event name RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event | Edit this page View Source CreateEvent<T>(in string, in EventHandler_Delegate) Create an event Declaration protected RpcEvent CreateEvent<T>(in string name, in RpcEvent.EventHandler_Delegate handler) where T : EventArgs Parameters Type Name Description string name Event name RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event Type Parameters Name Description T Event arguments type | Edit this page View Source CreateIncomingMessageQueue() Create an incoming messages queue Declaration protected virtual RpcProcessor.IncomingQueue CreateIncomingMessageQueue() Returns Type Description RpcProcessor.IncomingQueue Incoming messages queue | Edit this page View Source CreateIncomingStreamAsync(RpcStreamValue, bool, CancellationToken) Create an incoming stream Declaration public virtual Task<Stream> CreateIncomingStreamAsync(RpcStreamValue stream, bool leaveOpen, CancellationToken cancellationToken = default) Parameters Type Name Description RpcStreamValue stream Received stream value bool leaveOpen Leave the stream open when the incoming stream is disposing (required for a stream return value)? CancellationToken cancellationToken Cancellation token Returns Type Description Task<Stream> Stream (don't forget to dispose!) | Edit this page View Source CreateOutgoingMessageQueue() Create an outgoing message queue Declaration protected virtual RpcProcessor.OutgoingQueue CreateOutgoingMessageQueue() Returns Type Description RpcProcessor.OutgoingQueue Outgoing message queue | Edit this page View Source CreateOutgoingStreamAsync(RpcStreamParameter, CancellationToken) Create an outgoing stream Declaration protected virtual Task<RpcStreamValue> CreateOutgoingStreamAsync(RpcStreamParameter streamParameter, CancellationToken cancellationToken = default) Parameters Type Name Description RpcStreamParameter streamParameter Parameter CancellationToken cancellationToken Cancellation token Returns Type Description Task<RpcStreamValue> Stream value to send to the peer | Edit this page View Source CreateRequestQueue() Create a request queue Declaration protected virtual RpcProcessor.RequestQueue CreateRequestQueue() Returns Type Description RpcProcessor.RequestQueue Request queue | Edit this page View Source CreateStreamParameter(in Stream, in bool) Create a RPC stream parameter Declaration protected virtual RpcStreamParameter CreateStreamParameter(in Stream stream, in bool disposeStream = false) Parameters Type Name Description Stream stream Stream bool disposeStream Dispose the stream after use? Returns Type Description RpcStreamParameter Parameter | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides HostedServiceBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.HostedServiceBase.DisposeCore() | Edit this page View Source EndWorkAsync() End working Declaration protected virtual Task EndWorkAsync() Returns Type Description Task | Edit this page View Source EnsureStreamsAreEnabled() Ensure streams are enabled Declaration protected virtual void EnsureStreamsAreEnabled() | Edit this page View Source GetContext(in RequestMessage, in RpcApiMethodInfo, in CancellationToken) Get a context for processing a RPC call Declaration protected virtual RpcContext GetContext(in RequestMessage request, in RpcApiMethodInfo method, in CancellationToken cancellationToken) Parameters Type Name Description RequestMessage request Message RpcApiMethodInfo method API method CancellationToken cancellationToken Cancellation token Returns Type Description RpcContext Context | Edit this page View Source GetIncomingStream(in long, in bool) Get an incoming stream Declaration protected virtual RpcProcessor.IncomingStream? GetIncomingStream(in long id, in bool lockDict = false) Parameters Type Name Description long id Stream ID bool lockDict If to lock the dictionary Returns Type Description RpcProcessor.IncomingStream Stream | Edit this page View Source GetIncomingStreamAsync(long, bool, CancellationToken) Get an incoming stream Declaration protected virtual Task<RpcProcessor.IncomingStream?> GetIncomingStreamAsync(long id, bool lockDict = true, CancellationToken cancellationToken = default) Parameters Type Name Description long id Stream ID bool lockDict If to lock the dictionary CancellationToken cancellationToken Cancellation token Returns Type Description Task<RpcProcessor.IncomingStream> Stream | Edit this page View Source GetOutgoingStream(in long, in bool) Get an outgoing stream Declaration protected virtual RpcProcessor.OutgoingStream? GetOutgoingStream(in long id, in bool lockDict = false) Parameters Type Name Description long id Stream ID bool lockDict If to lock the dictionary Returns Type Description RpcProcessor.OutgoingStream Stream | Edit this page View Source GetOutgoingStreamAsync(long, bool, CancellationToken) Get an outgoing stream Declaration protected virtual Task<RpcProcessor.OutgoingStream?> GetOutgoingStreamAsync(long id, bool lockDict = true, CancellationToken cancellationToken = default) Parameters Type Name Description long id Stream ID bool lockDict If to lock the dictionary CancellationToken cancellationToken Cancellation token Returns Type Description Task<RpcProcessor.OutgoingStream> Stream | Edit this page View Source GetPendingCall(in long) Get a pending call Declaration protected virtual RpcProcessor.Call? GetPendingCall(in long id) Parameters Type Name Description long id ID Returns Type Description RpcProcessor.Call Call | Edit this page View Source GetPendingRequest(in long) Get a pending request Declaration protected virtual RpcProcessor.Request? GetPendingRequest(in long id) Parameters Type Name Description long id ID Returns Type Description RpcProcessor.Request Request | Edit this page View Source GetRemoteEvent(in string) Get a remote event Declaration protected virtual RpcEvent? GetRemoteEvent(in string name) Parameters Type Name Description string name Name Returns Type Description RpcEvent Event | Edit this page View Source GetStreamChunkLengthAsync(OutgoingStream, CancellationToken) Get the stream chunk length in bytes Declaration protected virtual Task<int> GetStreamChunkLengthAsync(RpcProcessor.OutgoingStream stream, CancellationToken cancellationToken = default) Parameters Type Name Description RpcProcessor.OutgoingStream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<int> Chunk length in bytes | Edit this page View Source HandleCallProcessingErrorAsync(Call, Exception) Handle a call processing error Declaration protected virtual Task HandleCallProcessingErrorAsync(RpcProcessor.Call call, Exception exception) Parameters Type Name Description RpcProcessor.Call call Call Exception exception Exception Returns Type Description Task | Edit this page View Source HandleCancellationAsync(CancellationMessage) Handle a RPC request cancellation (processing will be stopped on handler exception) Declaration protected virtual Task HandleCancellationAsync(CancellationMessage message) Parameters Type Name Description CancellationMessage message Message Returns Type Description Task | Edit this page View Source HandleErrorAsync(ErrorResponseMessage) Handle a RPC error response (processing will be stopped on handler exception) Declaration protected virtual Task HandleErrorAsync(ErrorResponseMessage message) Parameters Type Name Description ErrorResponseMessage message Message Returns Type Description Task | Edit this page View Source HandleEventAsync(EventMessage) Handle a RPC event (processing will be stopped on handler exception) Declaration protected virtual Task HandleEventAsync(EventMessage message) Parameters Type Name Description EventMessage message Message Returns Type Description Task | Edit this page View Source HandleEventErrorAsync(EventMessage, RpcEvent?, Exception) Handle an event processing error Declaration protected virtual Task HandleEventErrorAsync(EventMessage message, RpcEvent? e, Exception ex) Parameters Type Name Description EventMessage message Message RpcEvent e Event Exception ex Exception Returns Type Description Task | Edit this page View Source HandleIncomingStreamProcessingErrorAsync(IncomingStream, Exception) Handle an incoming stream processing error Declaration protected virtual Task HandleIncomingStreamProcessingErrorAsync(RpcProcessor.IncomingStream stream, Exception ex) Parameters Type Name Description RpcProcessor.IncomingStream stream Stream Exception ex Exception Returns Type Description Task | Edit this page View Source HandleInvalidReturnValueAsync(ResponseMessage) Handle an invalid return value (processing will be stopped on handler exception) Declaration protected virtual Task HandleInvalidReturnValueAsync(ResponseMessage message) Parameters Type Name Description ResponseMessage message Message Returns Type Description Task | Edit this page View Source HandleLocalStreamCloseAsync(LocalStreamCloseMessage) Handle an incoming stream close message (processing will be stopped on handler exception) Declaration protected virtual Task HandleLocalStreamCloseAsync(LocalStreamCloseMessage message) Parameters Type Name Description LocalStreamCloseMessage message Message Returns Type Description Task | Edit this page View Source HandleMessageAsync(IRpcMessage) Handle a message (should call StopExceptionalAsync(Exception) on exception) Declaration protected virtual Task HandleMessageAsync(IRpcMessage message) Parameters Type Name Description IRpcMessage message Message Returns Type Description Task | Edit this page View Source HandleMessageStorageErrorAsync(IRpcMessage) Handle an error with the incoming message storage (handler should dispose values, if required; peer will be disconnected) Declaration protected virtual Task HandleMessageStorageErrorAsync(IRpcMessage message) Parameters Type Name Description IRpcMessage message RPC Message Returns Type Description Task | Edit this page View Source HandleRemoteStreamCloseAsync(RemoteStreamCloseMessage) Handle a remote stream close request (processing will be stopped on handler exception) Declaration protected virtual Task HandleRemoteStreamCloseAsync(RemoteStreamCloseMessage message) Parameters Type Name Description RemoteStreamCloseMessage message Message Returns Type Description Task | Edit this page View Source HandleRequestAsync(RequestMessage) Handle a RPC request (processing will be stopped on handler exception) Declaration protected virtual Task HandleRequestAsync(RequestMessage message) Parameters Type Name Description RequestMessage message Message Returns Type Description Task | Edit this page View Source HandleResponseAsync(ResponseMessage) Handle a RPC response (processing will be stopped on handler exception) Declaration protected virtual Task HandleResponseAsync(ResponseMessage message) Parameters Type Name Description ResponseMessage message Message Returns Type Description Task | Edit this page View Source HandleStreamChunkAsync(StreamChunkMessage) Handle an incoming stream chunk (processing will be stopped on handler exception) Declaration protected virtual Task HandleStreamChunkAsync(StreamChunkMessage message) Parameters Type Name Description StreamChunkMessage message Message Returns Type Description Task | Edit this page View Source HandleStreamStartAsync(StreamStartMessage) Handle a stream start request (processing will be stopped on handler exception) Declaration protected virtual Task HandleStreamStartAsync(StreamStartMessage message) Parameters Type Name Description StreamStartMessage message Message Returns Type Description Task | Edit this page View Source RaiseEventAsync(string, EventArgs?, bool, CancellationToken) Raise an event at the peer Declaration public virtual Task RaiseEventAsync(string name, EventArgs? e = null, bool wait = false, CancellationToken cancellationToken = default) Parameters Type Name Description string name Event name EventArgs e Event arguments bool wait Wait for remote event handlers to finish? CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source RegisterEvent(in string, in Type, in EventHandler_Delegate) Register a remote event handler Declaration public virtual RpcEvent RegisterEvent(in string name, in Type arguments, in RpcEvent.EventHandler_Delegate handler) Parameters Type Name Description string name Event name Type arguments Event arguments type (must be an EventArgs) RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event | Edit this page View Source RegisterEvent(in string, in EventHandler_Delegate) Register a remote event handler Declaration public virtual RpcEvent RegisterEvent(in string name, in RpcEvent.EventHandler_Delegate handler) Parameters Type Name Description string name Event name RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event | Edit this page View Source RegisterEvent<T>(in string, in EventHandler_Delegate) Register a remote event handler Declaration public RpcEvent RegisterEvent<T>(in string name, in RpcEvent.EventHandler_Delegate handler) where T : EventArgs Parameters Type Name Description string name Event name RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event Type Parameters Name Description T Event arguments type | Edit this page View Source RemoveIncomingStream(in long, in bool) Remove an incoming stream Declaration protected virtual RpcProcessor.IncomingStream? RemoveIncomingStream(in long id, in bool lockDict = false) Parameters Type Name Description long id Stream ID bool lockDict If to lock the dictionary Returns Type Description RpcProcessor.IncomingStream Stream (don't forget to dispose!) | Edit this page View Source RemoveIncomingStream(in IncomingStream, in bool) Remove an incoming stream Declaration protected virtual void RemoveIncomingStream(in RpcProcessor.IncomingStream stream, in bool lockDict = false) Parameters Type Name Description RpcProcessor.IncomingStream stream Stream bool lockDict If to lock the dictionary | Edit this page View Source RemoveIncomingStreamAsync(long, bool, CancellationToken) Remove an incoming stream Declaration protected virtual Task<RpcProcessor.IncomingStream?> RemoveIncomingStreamAsync(long id, bool lockDict = true, CancellationToken cancellationToken = default) Parameters Type Name Description long id Stream ID bool lockDict If to lock the dictionary CancellationToken cancellationToken Cancellation token Returns Type Description Task<RpcProcessor.IncomingStream> Stream (don't forget to dispose!) | Edit this page View Source RemoveIncomingStreamAsync(IncomingStream, bool, CancellationToken) Remove an incoming stream Declaration protected virtual Task RemoveIncomingStreamAsync(RpcProcessor.IncomingStream stream, bool lockDict = true, CancellationToken cancellationToken = default) Parameters Type Name Description RpcProcessor.IncomingStream stream Stream bool lockDict If to lock the dictionary CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source RemoveOutgoingStream(in long, in bool) Remove an outgoing stream Declaration protected virtual RpcProcessor.OutgoingStream? RemoveOutgoingStream(in long id, in bool lockDict = false) Parameters Type Name Description long id Stream ID bool lockDict If to lock the dictionary Returns Type Description RpcProcessor.OutgoingStream Stream (don't forget to dispose!) | Edit this page View Source RemoveOutgoingStream(in OutgoingStream, in bool) Remove an outgoing stream Declaration protected virtual void RemoveOutgoingStream(in RpcProcessor.OutgoingStream stream, in bool lockDict = false) Parameters Type Name Description RpcProcessor.OutgoingStream stream Stream bool lockDict If to lock the dictionary | Edit this page View Source RemoveOutgoingStreamAsync(long, bool, CancellationToken) Remove an outgoing stream Declaration protected virtual Task<RpcProcessor.OutgoingStream?> RemoveOutgoingStreamAsync(long id, bool lockDict = true, CancellationToken cancellationToken = default) Parameters Type Name Description long id Stream ID bool lockDict If to lock the dictionary CancellationToken cancellationToken Cancellation token Returns Type Description Task<RpcProcessor.OutgoingStream> Stream (don't forget to dispose!) | Edit this page View Source RemoveOutgoingStreamAsync(OutgoingStream, bool, CancellationToken) Remove an outgoing stream Declaration protected virtual Task RemoveOutgoingStreamAsync(RpcProcessor.OutgoingStream stream, bool lockDict = true, CancellationToken cancellationToken = default) Parameters Type Name Description RpcProcessor.OutgoingStream stream Stream bool lockDict If to lock the dictionary CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source RemovePendingCall(in long) Remove a pending call Declaration protected virtual RpcProcessor.Call? RemovePendingCall(in long id) Parameters Type Name Description long id ID Returns Type Description RpcProcessor.Call | Edit this page View Source RemovePendingCall(in Call) Remove a pending call Declaration protected virtual void RemovePendingCall(in RpcProcessor.Call call) Parameters Type Name Description RpcProcessor.Call call Call | Edit this page View Source RemovePendingRequest(in long) Remove a pending request Declaration protected virtual RpcProcessor.Request? RemovePendingRequest(in long id) Parameters Type Name Description long id ID Returns Type Description RpcProcessor.Request Request | Edit this page View Source RemovePendingRequest(in Request) Remove a pending request Declaration protected virtual void RemovePendingRequest(in RpcProcessor.Request request) Parameters Type Name Description RpcProcessor.Request request Request | Edit this page View Source RemoveRemoteEvent(in string) Remove a remote event Declaration protected virtual RpcEvent? RemoveRemoteEvent(in string name) Parameters Type Name Description string name Name Returns Type Description RpcEvent Event | Edit this page View Source RemoveRemoteEvent(in RpcEvent) Remove a remote event Declaration protected virtual bool RemoveRemoteEvent(in RpcEvent e) Parameters Type Name Description RpcEvent e Event Returns Type Description bool If removed | Edit this page View Source SendErrorResponseAsync(RequestMessage, Exception) Send an error response for a RPC request processing exception Declaration protected virtual Task SendErrorResponseAsync(RequestMessage message, Exception exception) Parameters Type Name Description RequestMessage message RPC request Exception exception Exception Returns Type Description Task | Edit this page View Source SendMessageAsync(IRpcMessage, int, CancellationToken) Send a RPC message to the peer Declaration protected virtual Task SendMessageAsync(IRpcMessage message, int priority, CancellationToken cancellationToken = default) Parameters Type Name Description IRpcMessage message Message int priority Priority (higher value will be processed faster) CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source SendMessageAsync(IRpcMessage, CancellationToken) Send a RPC message to the peer Declaration protected virtual Task SendMessageAsync(IRpcMessage message, CancellationToken cancellationToken = default) Parameters Type Name Description IRpcMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source SendMessageAsync(QueuedMessage) Send a RPC message to the peer Declaration protected virtual Task SendMessageAsync(RpcProcessor.OutgoingQueue.QueuedMessage queuedMessage) Parameters Type Name Description RpcProcessor.OutgoingQueue.QueuedMessage queuedMessage Message (won't be disposed) Returns Type Description Task | Edit this page View Source SendResponseAsync(RequestMessage, object?) Send a response for a RPC request Declaration protected virtual Task SendResponseAsync(RequestMessage message, object? returnValue) Parameters Type Name Description RequestMessage message RPC request object returnValue Return value (should be null, if WantsReturnValue is false) Returns Type Description Task | Edit this page View Source StopExceptionalAsync(Exception) Stop exceptional Declaration protected virtual Task StopExceptionalAsync(Exception ex) Parameters Type Name Description Exception ex Exception Returns Type Description Task | Edit this page View Source WorkerAsync() Service worker Declaration protected override Task WorkerAsync() Returns Type Description Task Overrides wan24.Core.HostedServiceBase.WorkerAsync() Implements wan24.Core.IWillDispose wan24.Core.IServiceWorker IHostedService wan24.Core.IDisposableObject IDisposable IAsyncDisposable wan24.Core.IStatusProvider"
  },
  "api/wan24.RPC.Processing.RpcProcessorOptions.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessorOptions.html",
    "title": "Class RpcProcessorOptions | wan24-RPC",
    "keywords": "Class RpcProcessorOptions RPC processor options Inheritance object DisposableRecordBase RpcProcessorOptions Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcProcessorOptions> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public record RpcProcessorOptions : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcProcessorOptions> Constructors | Edit this page View Source RpcProcessorOptions() Constructor Declaration protected RpcProcessorOptions() | Edit this page View Source RpcProcessorOptions(params object[]) Constructor Declaration public RpcProcessorOptions(params object[] apis) Parameters Type Name Description object[] apis APIs (will be disposed per default) | Edit this page View Source RpcProcessorOptions(params Type[]) Constructor Declaration public RpcProcessorOptions(params Type[] apis) Parameters Type Name Description Type[] apis API types (instances will be disposed per default) Fields | Edit this page View Source MIN_RPC_VERSION Min. supported RPC protocol version Declaration public const int MIN_RPC_VERSION = 1 Field Value Type Description int | Edit this page View Source RPC_VERSION RPC protocol version Declaration public const int RPC_VERSION = 1 Field Value Type Description int Properties | Edit this page View Source API API (infos will be disposed) Declaration public Dictionary<string, RpcApiInfo> API { get; init; } Property Value Type Description Dictionary<string, RpcApiInfo> | Edit this page View Source CallQueueSize Max. number of queued RPC calls (RPC requests from the peer; should at last fit the peers RequestThreads) Declaration public required int CallQueueSize { get; init; } Property Value Type Description int | Edit this page View Source CallThreads Max. number of RPC call processing threads Declaration public required int CallThreads { get; init; } Property Value Type Description int | Edit this page View Source CompressionBufferSize Compression buffer size in bytes Declaration public int CompressionBufferSize { get; init; } Property Value Type Description int | Edit this page View Source DecompressionBufferSize Decompression buffer size in bytes Declaration public int DecompressionBufferSize { get; init; } Property Value Type Description int | Edit this page View Source DefaultCompression Default compression options for streams Declaration public CompressionOptions? DefaultCompression { get; init; } Property Value Type Description CompressionOptions | Edit this page View Source DefaultContext Default context for an incoming RPC call (will be disposed) Declaration public RpcContext? DefaultContext { get; init; } Property Value Type Description RpcContext | Edit this page View Source DefaultServices Default service provider for an incoming RPC call (will be disposed) Declaration public IServiceProvider? DefaultServices { get; init; } Property Value Type Description IServiceProvider | Edit this page View Source DisconnectOnApiError Disconnect the peer on API error (when processing RPC requests)? Declaration public bool DisconnectOnApiError { get; init; } Property Value Type Description bool | Edit this page View Source FlushStream Flush the Stream after sending a message? Declaration public bool FlushStream { get; init; } Property Value Type Description bool | Edit this page View Source IncomingMessageQueueCapacity Incoming message queue capacity (overflow will block reading incoming messages until a queued message was dequeued) Declaration public required int IncomingMessageQueueCapacity { get; init; } Property Value Type Description int | Edit this page View Source IncomingMessageQueueThreads Incoming message queue processing threads Declaration public required int IncomingMessageQueueThreads { get; init; } Property Value Type Description int | Edit this page View Source Logger Logger Declaration public ILogger? Logger { get; init; } Property Value Type Description ILogger | Edit this page View Source MaxEnumerationCount Maximum number of enumerations (I/O) at both peers (0 to disable enumerations) Declaration public int MaxEnumerationCount { get; init; } Property Value Type Description int | Edit this page View Source MaxMessageLength Max. message length (I/O) in bytes at both peers Declaration public int MaxMessageLength { get; init; } Property Value Type Description int | Edit this page View Source MaxStreamCount Maximum number of streams (I/O) at both peers (0 to disable streams) Declaration public int MaxStreamCount { get; init; } Property Value Type Description int | Edit this page View Source OutgoingMessageQueueCapacity Outgoing message queue capacity (for priority message sending) Declaration public required int OutgoingMessageQueueCapacity { get; init; } Property Value Type Description int | Edit this page View Source RequestQueueSize Max. number of queued RPC requests (RPC requests to the peer) Declaration public required int RequestQueueSize { get; init; } Property Value Type Description int | Edit this page View Source RequestThreads Max. number of RPC requests processing threads (should not exceed the peers CallQueueSize) Declaration public required int RequestThreads { get; init; } Property Value Type Description int | Edit this page View Source RpcVersion Peer RPC protocol version Declaration public int RpcVersion { get; set; } Property Value Type Description int | Edit this page View Source SerializerVersion Stream serializer version Declaration public int SerializerVersion { get; init; } Property Value Type Description int | Edit this page View Source Stream Bi-directional RPC stream (will be disposed) Declaration public required Stream Stream { get; init; } Property Value Type Description Stream | Edit this page View Source SyncObject An object for thread synchronization Declaration public object SyncObject { get; } Property Value Type Description object Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableRecordBase.DisposeCore() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessorTable.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessorTable.html",
    "title": "Class RpcProcessorTable | wan24-RPC",
    "keywords": "Class RpcProcessorTable RPC processor table Inheritance object RpcProcessorTable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public static class RpcProcessorTable Fields | Edit this page View Source Processors RPC processors (key is the object hash code) Declaration public static readonly ConcurrentDictionary<int, RpcProcessor> Processors Field Value Type Description ConcurrentDictionary<int, RpcProcessor>"
  },
  "api/wan24.RPC.Processing.RpcStream.html": {
    "href": "api/wan24.RPC.Processing.RpcStream.html",
    "title": "Class RpcStream | wan24-RPC",
    "keywords": "Class RpcStream RPC stream (asynchronous operation ONLY!) Inheritance object MarshalByRefObject Stream StreamBase BlockingBufferStream RpcStream Implements IStream IDisposableObject IDisposable IAsyncDisposable IStatusProvider Inherited Members BlockingBufferStream.Buffer BlockingBufferStream.BufferSync BlockingBufferStream.SpaceEvent BlockingBufferStream.DataEvent BlockingBufferStream.WriteOffset BlockingBufferStream.ReadOffset BlockingBufferStream._Length BlockingBufferStream._Position BlockingBufferStream._IsEndOfFile BlockingBufferStream.SetIsEndOfFileAsync(CancellationToken) BlockingBufferStream.ReorganizeBuffer() BlockingBufferStream.ReorganizeBufferAsync(CancellationToken) BlockingBufferStream.WaitSpace(CancellationToken) BlockingBufferStream.WaitSpaceAsync(CancellationToken) BlockingBufferStream.WaitData(CancellationToken) BlockingBufferStream.WaitDataAsync(CancellationToken) BlockingBufferStream.Flush() BlockingBufferStream.FlushAsync(CancellationToken) BlockingBufferStream.Seek(long, SeekOrigin) BlockingBufferStream.RaiseOnDataAvailable() BlockingBufferStream.RaiseOnNeedData() BlockingBufferStream.RaiseOnSpaceAvailable() BlockingBufferStream.RaiseOnNeedSpace() BlockingBufferStream.ResetBuffer() BlockingBufferStream.Read(byte[], int, int) BlockingBufferStream.ReadAsync(byte[], int, int, CancellationToken) BlockingBufferStream.SetLength(long) BlockingBufferStream.WriteByte(byte) BlockingBufferStream.Write(byte[], int, int) BlockingBufferStream.Write(ReadOnlySpan<byte>) BlockingBufferStream.TryWrite(ReadOnlySpan<byte>) BlockingBufferStream.WriteAsync(byte[], int, int, CancellationToken) BlockingBufferStream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) BlockingBufferStream.TryWriteAsync(ReadOnlyMemory<byte>, CancellationToken) BlockingBufferStream.BufferSize BlockingBufferStream.Available BlockingBufferStream.SpaceLeft BlockingBufferStream.AggressiveReadBlocking BlockingBufferStream.ReadIncomplete BlockingBufferStream.IsReadBlocked BlockingBufferStream.IsWriteBlocked BlockingBufferStream.AutoReorg BlockingBufferStream.UseFlush BlockingBufferStream.IsEndOfFile BlockingBufferStream.State BlockingBufferStream.CanRead BlockingBufferStream.CanSeek BlockingBufferStream.CanWrite BlockingBufferStream.Length BlockingBufferStream.Position BlockingBufferStream.OnDataAvailable BlockingBufferStream.OnNeedData BlockingBufferStream.OnSpaceAvailable BlockingBufferStream.OnNeedSpace StreamBase.SyncObject StreamBase.Close() StreamBase.DisposeAsync() StreamBase.DoClose() StreamBase.EnsureUndisposed(in bool, in bool) StreamBase.IfUndisposed<T>(in T, in bool) StreamBase.IfUndisposed(in Action, in bool) StreamBase.IfUndisposed<T>(in Func<T>, in bool) StreamBase.IfUndisposedNullable<T>(in Func<T>, in bool) StreamBase.EnsureSeekable() StreamBase.EnsureWritable() StreamBase.EnsureReadable() StreamBase.Name StreamBase.IsClosed StreamBase.IsDisposed StreamBase.IsDisposing StreamBase.OnDisposing StreamBase.OnDisposed Stream.Null Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.CopyToAsync(Stream, CancellationToken) Stream.CreateWaitHandle() Stream.Dispose() Stream.EndRead(IAsyncResult) Stream.EndWrite(IAsyncResult) Stream.FlushAsync() Stream.ObjectInvariant() Stream.ReadAsync(byte[], int, int) Stream.ReadAtLeast(Span<byte>, int, bool) Stream.ReadAtLeastAsync(Memory<byte>, int, bool, CancellationToken) Stream.ReadExactly(byte[], int, int) Stream.ReadExactly(Span<byte>) Stream.ReadExactlyAsync(byte[], int, int, CancellationToken) Stream.ReadExactlyAsync(Memory<byte>, CancellationToken) Stream.Synchronized(Stream) Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.WriteAsync(byte[], int, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public class RpcStream : BlockingBufferStream, IStream, IDisposableObject, IDisposable, IAsyncDisposable, IStatusProvider Remarks Constructor Constructors | Edit this page View Source RpcStream() RPC stream (asynchronous operation ONLY!) Declaration public RpcStream() Remarks Constructor Fields | Edit this page View Source _IncomingStream Incoming stream Declaration protected RpcProcessor.IncomingStream? _IncomingStream Field Value Type Description RpcProcessor.IncomingStream Properties | Edit this page View Source IncomingStream Incoming stream Declaration public RpcProcessor.IncomingStream IncomingStream { get; set; } Property Value Type Description RpcProcessor.IncomingStream | Edit this page View Source LeaveOpen Leave this stream open when the IncomingStream is disposing? Declaration public bool LeaveOpen { get; set; } Property Value Type Description bool Methods | Edit this page View Source Dispose(bool) Releases the unmanaged resources used by the Stream and optionally releases the managed resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. Overrides BlockingBufferStream.Dispose(bool) | Edit this page View Source DisposeCore() Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.BlockingBufferStream.DisposeCore() | Edit this page View Source EnsureValidIncomingStreamState() Ensure a valid state Declaration protected virtual void EnsureValidIncomingStreamState() | Edit this page View Source Read(Span<byte>) When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read. Declaration public override int Read(Span<byte> buffer) Parameters Type Name Description Span<byte> buffer A region of memory. When this method returns, the contents of this region are replaced by the bytes read from the current source. Returns Type Description int The total number of bytes read into the buffer. This can be less than the size of the buffer if that many bytes are not currently available, or zero (0) if the buffer's length is zero or the end of the stream has been reached. Overrides BlockingBufferStream.Read(Span<byte>) | Edit this page View Source ReadAsync(Memory<byte>, CancellationToken) Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests. Declaration public override ValueTask<int> ReadAsync(Memory<byte> buffer, CancellationToken cancellationToken = default) Parameters Type Name Description Memory<byte> buffer The region of memory to write the data into. CancellationToken cancellationToken The token to monitor for cancellation requests. The default value is None. Returns Type Description ValueTask<int> A task that represents the asynchronous read operation. The value of its Result property contains the total number of bytes read into the buffer. The result value can be less than the length of the buffer if that many bytes are not currently available, or it can be 0 (zero) if the length of the buffer is 0 or if the end of the stream has been reached. Overrides BlockingBufferStream.ReadAsync(Memory<byte>, CancellationToken) | Edit this page View Source ReadByte() Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream. Declaration public override int ReadByte() Returns Type Description int The unsigned byte cast to an int, or -1 if at the end of the stream. Overrides wan24.Core.BlockingBufferStream.ReadByte() Exceptions Type Condition NotSupportedException The stream does not support reading. ObjectDisposedException Methods were called after the stream was closed. | Edit this page View Source TryRead(Span<byte>) Try reading as much data as available without blocking Declaration public override int TryRead(Span<byte> buffer) Parameters Type Name Description Span<byte> buffer Buffer Returns Type Description int Number of bytes written into the buffer Overrides BlockingBufferStream.TryRead(Span<byte>) | Edit this page View Source TryReadAsync(Memory<byte>, CancellationToken) Try reading as much data as available without blocking Declaration public override ValueTask<int> TryReadAsync(Memory<byte> buffer, CancellationToken cancellationToken = default) Parameters Type Name Description Memory<byte> buffer Buffer CancellationToken cancellationToken Cancellation token Returns Type Description ValueTask<int> Number of bytes written into the buffer Overrides BlockingBufferStream.TryReadAsync(Memory<byte>, CancellationToken) Implements wan24.Core.IStream wan24.Core.IDisposableObject IDisposable IAsyncDisposable wan24.Core.IStatusProvider Extension Methods SerializerExtensions.ReadRpcMessageAsync(Stream, int?, Type?, bool, CancellationToken) SerializerExtensions.ReadRpcMessageAsync<T>(Stream, int?, bool, CancellationToken) SerializerExtensions.WriteRpcMessageAsync(Stream, IRpcMessage, CancellationToken)"
  },
  "api/wan24.RPC.Processing.Values.RpcEnumerableValue-1.html": {
    "href": "api/wan24.RPC.Processing.Values.RpcEnumerableValue-1.html",
    "title": "Class RpcEnumerableValue<T> | wan24-RPC",
    "keywords": "Class RpcEnumerableValue<T> RPC enumerable parameter Inheritance object ValidatableRecordBase StreamSerializerRecordBase RpcEnumerableValue<T> Implements IObjectValidatable IValidatableObject IEquatable<ValidatableRecordBase> IStreamSerializerVersion IStreamSerializer IEquatable<StreamSerializerRecordBase> IEquatable<RpcEnumerableValue<T>> Inherited Members StreamSerializerRecordBase.BASE_VERSION StreamSerializerRecordBase.ToString() StreamSerializerRecordBase.PrintMembers(StringBuilder) StreamSerializerRecordBase.GetHashCode() StreamSerializerRecordBase.Equals(object) StreamSerializerRecordBase.Equals(ValidatableRecordBase) StreamSerializerRecordBase.Equals(StreamSerializerRecordBase) StreamSerializerRecordBase.<Clone>$() StreamSerializerRecordBase.EqualityContract StreamSerializerRecordBase.SerializedObjectVersion StreamSerializerRecordBase.SerializerVersion ValidatableRecordBase.Validate(ValidationContext) ValidatableRecordBase.ObjectValidatable(IObjectValidatable) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing.Values Assembly: wan24RPC.dll Syntax [Rpc] public record RpcEnumerableValue<T> : StreamSerializerRecordBase, IObjectValidatable, IValidatableObject, IEquatable<ValidatableRecordBase>, IStreamSerializerVersion, IStreamSerializer, IEquatable<StreamSerializerRecordBase>, IEquatable<RpcEnumerableValue<T>> Type Parameters Name Description T Item type Remarks Constructor Constructors | Edit this page View Source RpcEnumerableValue() RPC enumerable parameter Declaration public RpcEnumerableValue() Remarks Constructor Fields | Edit this page View Source VERSION Object version Declaration public const int VERSION = 1 Field Value Type Description int Properties | Edit this page View Source Enumerable Enumerable Declaration [RequiredIf(\"Id\", new object?[] { }, RequiredIfNull = true)] [RuntimeCountLimit(\"wan24.RPC.Api.Messages.Values.RpcEnumerableValue.MaxItemCount\", null)] public T[]? Enumerable { get; set; } Property Value Type Description T[] | Edit this page View Source HlObjectVersion Higher level object version Declaration [JsonIgnore] public virtual int HlObjectVersion { get; } Property Value Type Description int | Edit this page View Source Id Enumeration ID Declaration [RequiredIf(\"Enumerable\", new object?[] { }, RequiredIfNull = true)] public long? Id { get; set; } Property Value Type Description long? | Edit this page View Source MaxItemCount Max. item count Declaration public static int MaxItemCount { get; set; } Property Value Type Description int | Edit this page View Source MinHlObjectVersion Minimum supported higher level object version (see SerializedHlObjectVersion) Declaration protected virtual int? MinHlObjectVersion { get; } Property Value Type Description int? | Edit this page View Source SerializedHlObjectVersion Deserialized higher level object version Declaration protected int? SerializedHlObjectVersion { get; } Property Value Type Description int? Methods | Edit this page View Source Deserialize(Stream, int) Deserialize Declaration protected override sealed void Deserialize(Stream stream, int version) Parameters Type Name Description Stream stream Stream int version Serializer version Overrides StreamSerializerRecordBase.Deserialize(Stream, int) | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides StreamSerializerRecordBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source Serialize(Stream) Serialize Declaration protected override sealed void Serialize(Stream stream) Parameters Type Name Description Stream stream Stream Overrides StreamSerializerRecordBase.Serialize(Stream) | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides StreamSerializerRecordBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject IEquatable<T> wan24.StreamSerializerExtensions.IStreamSerializerVersion wan24.StreamSerializerExtensions.IStreamSerializer IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.Values.RpcStreamValue.html": {
    "href": "api/wan24.RPC.Processing.Values.RpcStreamValue.html",
    "title": "Class RpcStreamValue | wan24-RPC",
    "keywords": "Class RpcStreamValue RPC stream parameter/return value Inheritance object DisposableRecordBase DisposableStreamSerializerRecordBase RpcStreamValue Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IStreamSerializerVersion IStreamSerializer IObjectValidatable IValidatableObject IEquatable<DisposableStreamSerializerRecordBase> IEquatable<RpcStreamValue> Inherited Members DisposableStreamSerializerRecordBase.BASE_VERSION DisposableStreamSerializerRecordBase.ToString() DisposableStreamSerializerRecordBase.PrintMembers(StringBuilder) DisposableStreamSerializerRecordBase.GetHashCode() DisposableStreamSerializerRecordBase.Equals(object) DisposableStreamSerializerRecordBase.Equals(DisposableRecordBase) DisposableStreamSerializerRecordBase.Equals(DisposableStreamSerializerRecordBase) DisposableStreamSerializerRecordBase.<Clone>$() DisposableStreamSerializerRecordBase.EqualityContract DisposableStreamSerializerRecordBase.SerializedObjectVersion DisposableStreamSerializerRecordBase.SerializerVersion DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing.Values Assembly: wan24RPC.dll Syntax [Rpc] public record RpcStreamValue : DisposableStreamSerializerRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IStreamSerializerVersion, IStreamSerializer, IObjectValidatable, IValidatableObject, IEquatable<DisposableStreamSerializerRecordBase>, IEquatable<RpcStreamValue> Remarks Constructor Constructors | Edit this page View Source RpcStreamValue() RPC stream parameter/return value Declaration public RpcStreamValue() Remarks Constructor Fields | Edit this page View Source VERSION Object version Declaration public const int VERSION = 1 Field Value Type Description int | Edit this page View Source _Compression Compression options Declaration protected byte[]? _Compression Field Value Type Description byte[] Properties | Edit this page View Source Compression Compression options Declaration public CompressionOptions? Compression { get; set; } Property Value Type Description CompressionOptions | Edit this page View Source Content Stream content Declaration [RequiredIf(\"Stream\", new object?[] { }, RequiredIfNull = true)] [RuntimeCountLimit(\"wan24.RPC.Api.Messages.Values.RpcStreamValue.MaxContentLength\", null)] public byte[]? Content { get; set; } Property Value Type Description byte[] | Edit this page View Source HlObjectVersion Higher level object version Declaration [JsonIgnore] public virtual int HlObjectVersion { get; } Property Value Type Description int | Edit this page View Source IncomingStream Incoming stream to dispose when this value disposes Declaration [JsonIgnore] public RpcProcessor.IncomingStream? IncomingStream { get; set; } Property Value Type Description RpcProcessor.IncomingStream | Edit this page View Source Length Uncompressed stream length in bytes Declaration public long? Length { get; set; } Property Value Type Description long? | Edit this page View Source MaxContentLength Max. stream content length in bytes Declaration public static int MaxContentLength { get; set; } Property Value Type Description int | Edit this page View Source MinHlObjectVersion Minimum supported higher level object version (see SerializedHlObjectVersion) Declaration protected virtual int? MinHlObjectVersion { get; } Property Value Type Description int? | Edit this page View Source SerializedHlObjectVersion Deserialized higher level object version Declaration protected int? SerializedHlObjectVersion { get; } Property Value Type Description int? | Edit this page View Source Stream Stream ID Declaration [RequiredIf(\"Content\", new object?[] { }, RequiredIfNull = true)] public long? Stream { get; set; } Property Value Type Description long? | Edit this page View Source UsesCompression If compression is being used Declaration [JsonIgnore] public bool UsesCompression { get; } Property Value Type Description bool Methods | Edit this page View Source Deserialize(Stream, int) Deserialize Declaration protected override sealed void Deserialize(Stream stream, int version) Parameters Type Name Description Stream stream Stream int version Serializer version Overrides DisposableStreamSerializerRecordBase.Deserialize(Stream, int) | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides DisposableStreamSerializerRecordBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableRecordBase.DisposeCore() | Edit this page View Source Serialize(Stream) Serialize Declaration protected override sealed void Serialize(Stream stream) Parameters Type Name Description Stream stream Stream Overrides DisposableStreamSerializerRecordBase.Serialize(Stream) | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides DisposableStreamSerializerRecordBase.SerializeAsync(Stream, CancellationToken) Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> wan24.StreamSerializerExtensions.IStreamSerializerVersion wan24.StreamSerializerExtensions.IStreamSerializer wan24.ObjectValidation.IObjectValidatable IValidatableObject IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.Values.html": {
    "href": "api/wan24.RPC.Processing.Values.html",
    "title": "Namespace wan24.RPC.Processing.Values | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Processing.Values Classes RpcEnumerableValue<T> RPC enumerable parameter RpcStreamValue RPC stream parameter/return value"
  },
  "api/wan24.RPC.Processing.html": {
    "href": "api/wan24.RPC.Processing.html",
    "title": "Namespace wan24.RPC.Processing | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Processing Classes RpcContext RPC context RpcEvent RPC event RpcProcessor RPC processor RpcProcessor.Call RPC call RpcProcessor.CallQueue RPC call queue RpcProcessor.IncomingQueue Incoming message queue RpcProcessor.IncomingStream Incoming stream RpcProcessor.OutgoingQueue Outgoing message queue RpcProcessor.OutgoingQueue.QueuedMessage Queued outgoing message RpcProcessor.OutgoingStream Outgoing stream RpcProcessor.Request RPC request (context) RpcProcessor.RequestQueue RPC request queue RpcProcessorOptions RPC processor options RpcProcessorTable RPC processor table RpcStream RPC stream (asynchronous operation ONLY!) Interfaces IRpcProcessorInternals Interface for a RPC processor which exports its internals Delegates RpcContext.Unauthorized_Delegate Unauthorized handler delegate RpcEvent.EventHandler_Delegate Delegate for an event handler"
  },
  "api/wan24.RPC.Sdk.RpcSdkBase-1.html": {
    "href": "api/wan24.RPC.Sdk.RpcSdkBase-1.html",
    "title": "Class RpcSdkBase<T> | wan24-RPC",
    "keywords": "Class RpcSdkBase<T> Base class for a RPC SDK Inheritance object DisposableBase RpcSdkBase<T> RpcSdkBase RpcSdkBaseExt<T> Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable Inherited Members DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Sdk Assembly: wan24RPC.dll Syntax public abstract class RpcSdkBase<T> : DisposableBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable where T : RpcProcessor Type Parameters Name Description T RPC processor type Constructors | Edit this page View Source RpcSdkBase() Constructor Declaration protected RpcSdkBase() | Edit this page View Source RpcSdkBase(in T) Constructor Declaration protected RpcSdkBase(in T processor) Parameters Type Name Description T processor RPC processor (will be disposed) Fields | Edit this page View Source Cancellation Cancellation Declaration protected readonly CancellationTokenSource Cancellation Field Value Type Description CancellationTokenSource | Edit this page View Source DisposeProcessor If to dispose the Processor when disposing Declaration protected bool DisposeProcessor Field Value Type Description bool Properties | Edit this page View Source Processor RPC processor (will be disposed) Declaration protected virtual T? Processor { get; set; } Property Value Type Description T Methods | Edit this page View Source CallValueAsync(string?, string, Type, TimeSpan, CancellationToken, params object?[]) Call a RPC API method at the peer and wait for the return value (may throw after the remote execution) Declaration protected virtual Task<object?> CallValueAsync(string? api, string method, Type returnValueType, TimeSpan timeout = default, CancellationToken cancellationToken = default, params object?[] parameters) Parameters Type Name Description string api API name string method Method name Type returnValueType Return value type TimeSpan timeout Timeout CancellationToken cancellationToken Cancellation token object[] parameters Parameters (won't be diposed) Returns Type Description Task<object> Return value (should be disposed, if possible) | Edit this page View Source CallVoidAsync(string?, string, TimeSpan, CancellationToken, params object?[]) Call a RPC API method at the peer and wait for feedback (may throw after the remote execution) Declaration protected virtual Task CallVoidAsync(string? api, string method, TimeSpan timeout = default, CancellationToken cancellationToken = default, params object?[] parameters) Parameters Type Name Description string api API name string method Method name TimeSpan timeout Timeout CancellationToken cancellationToken Cancellation token object[] parameters Parameters (won't be diposed) Returns Type Description Task | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableBase.DisposeCore() | Edit this page View Source EnsureInitialized() Ensure being initialized Declaration protected virtual void EnsureInitialized() | Edit this page View Source HandleProcessorDisposing(IDisposableObject, EventArgs) Handle a disposing RPC processor Declaration protected virtual void HandleProcessorDisposing(IDisposableObject sender, EventArgs e) Parameters Type Name Description IDisposableObject sender Sender EventArgs e Arguments | Edit this page View Source RaiseEventAsync(string, EventArgs?, bool, TimeSpan, CancellationToken) Raise an event at the peer (if waiting may throw after the remote execution) Declaration protected virtual Task RaiseEventAsync(string name, EventArgs? e = null, bool wait = false, TimeSpan timeout = default, CancellationToken cancellationToken = default) Parameters Type Name Description string name Event name EventArgs e Event arguments (won't be diposed) bool wait Wait for remote event handlers to finish? TimeSpan timeout Timeout CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source RegisterEvent(in string, in EventHandler_Delegate) Register a remote event handler Declaration protected virtual RpcEvent RegisterEvent(in string name, in RpcEvent.EventHandler_Delegate handler) Parameters Type Name Description string name Event name RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event | Edit this page View Source RegisterEvent<tReturn>(in string, in EventHandler_Delegate) Register a remote event handler Declaration protected virtual RpcEvent RegisterEvent<tReturn>(in string name, in RpcEvent.EventHandler_Delegate handler) where tReturn : EventArgs Parameters Type Name Description string name Event name RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event Type Parameters Name Description tReturn Event arguments type Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable"
  },
  "api/wan24.RPC.Sdk.RpcSdkBase.html": {
    "href": "api/wan24.RPC.Sdk.RpcSdkBase.html",
    "title": "Class RpcSdkBase | wan24-RPC",
    "keywords": "Class RpcSdkBase Base class for a RPC SDK Inheritance object DisposableBase RpcSdkBase<RpcProcessor> RpcSdkBase Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable Inherited Members RpcSdkBase<RpcProcessor>.Cancellation RpcSdkBase<RpcProcessor>.DisposeProcessor RpcSdkBase<RpcProcessor>.Processor RpcSdkBase<RpcProcessor>.CallValueAsync(string, string, Type, TimeSpan, CancellationToken, params object[]) RpcSdkBase<RpcProcessor>.CallVoidAsync(string, string, TimeSpan, CancellationToken, params object[]) RpcSdkBase<RpcProcessor>.RegisterEvent<tReturn>(in string, in RpcEvent.EventHandler_Delegate) RpcSdkBase<RpcProcessor>.RegisterEvent(in string, in RpcEvent.EventHandler_Delegate) RpcSdkBase<RpcProcessor>.RaiseEventAsync(string, EventArgs, bool, TimeSpan, CancellationToken) RpcSdkBase<RpcProcessor>.EnsureInitialized() RpcSdkBase<RpcProcessor>.HandleProcessorDisposing(IDisposableObject, EventArgs) RpcSdkBase<RpcProcessor>.Dispose(bool) RpcSdkBase<RpcProcessor>.DisposeCore() DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Sdk Assembly: wan24RPC.dll Syntax public abstract class RpcSdkBase : RpcSdkBase<RpcProcessor>, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable Constructors | Edit this page View Source RpcSdkBase() Constructor Declaration protected RpcSdkBase() | Edit this page View Source RpcSdkBase(in RpcProcessor) Constructor Declaration protected RpcSdkBase(in RpcProcessor processor) Parameters Type Name Description RpcProcessor processor RPC processor (will be disposed) Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable"
  },
  "api/wan24.RPC.Sdk.RpcSdkBaseExt-1.html": {
    "href": "api/wan24.RPC.Sdk.RpcSdkBaseExt-1.html",
    "title": "Class RpcSdkBaseExt<T> | wan24-RPC",
    "keywords": "Class RpcSdkBaseExt<T> Base class for a RPC SDK which uses a RPC processor that exports its internals using IRpcProcessorInternals Inheritance object DisposableBase RpcSdkBase<T> RpcSdkBaseExt<T> Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable Inherited Members RpcSdkBase<T>.Cancellation RpcSdkBase<T>.DisposeProcessor RpcSdkBase<T>.Processor RpcSdkBase<T>.CallValueAsync(string, string, Type, TimeSpan, CancellationToken, params object[]) RpcSdkBase<T>.CallVoidAsync(string, string, TimeSpan, CancellationToken, params object[]) RpcSdkBase<T>.RegisterEvent<tReturn>(in string, in RpcEvent.EventHandler_Delegate) RpcSdkBase<T>.RegisterEvent(in string, in RpcEvent.EventHandler_Delegate) RpcSdkBase<T>.RaiseEventAsync(string, EventArgs, bool, TimeSpan, CancellationToken) RpcSdkBase<T>.EnsureInitialized() RpcSdkBase<T>.HandleProcessorDisposing(IDisposableObject, EventArgs) RpcSdkBase<T>.Dispose(bool) RpcSdkBase<T>.DisposeCore() DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Sdk Assembly: wan24RPC.dll Syntax public abstract class RpcSdkBaseExt<T> : RpcSdkBase<T>, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable where T : RpcProcessor, IRpcProcessorInternals Type Parameters Name Description T RPC processor type Constructors | Edit this page View Source RpcSdkBaseExt() Constructor Declaration protected RpcSdkBaseExt() | Edit this page View Source RpcSdkBaseExt(in T) Constructor Declaration protected RpcSdkBaseExt(in T processor) Parameters Type Name Description T processor RPC processor (will be disposed) Methods | Edit this page View Source CreateOutgoingStreamAsync(RpcStreamParameter, TimeSpan, CancellationToken) Create an outgoing stream Declaration protected virtual Task<RpcStreamValue> CreateOutgoingStreamAsync(RpcStreamParameter streamParameter, TimeSpan timeout = default, CancellationToken cancellationToken = default) Parameters Type Name Description RpcStreamParameter streamParameter Parameter TimeSpan timeout Timeout CancellationToken cancellationToken Cancellation token Returns Type Description Task<RpcStreamValue> Stream value to send to the peer | Edit this page View Source CreateStreamParameter(in Stream, in bool) Create a RPC stream parameter Declaration protected virtual RpcStreamParameter CreateStreamParameter(in Stream stream, in bool disposeStream = false) Parameters Type Name Description Stream stream Stream bool disposeStream Dispose the stream after use? Returns Type Description RpcStreamParameter Parameter | Edit this page View Source SendMessageAsync(IRpcMessage, int, TimeSpan, CancellationToken) Send a RPC message to the peer Declaration protected virtual Task SendMessageAsync(IRpcMessage message, int priority, TimeSpan timeout = default, CancellationToken cancellationToken = default) Parameters Type Name Description IRpcMessage message Message int priority Priority (higher value will be processed faster) TimeSpan timeout Timeout CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source SendMessageAsync(IRpcMessage, TimeSpan, CancellationToken) Send a RPC message to the peer Declaration protected virtual Task SendMessageAsync(IRpcMessage message, TimeSpan timeout = default, CancellationToken cancellationToken = default) Parameters Type Name Description IRpcMessage message Message TimeSpan timeout Timeout CancellationToken cancellationToken Cancellation token Returns Type Description Task Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable"
  },
  "api/wan24.RPC.Sdk.html": {
    "href": "api/wan24.RPC.Sdk.html",
    "title": "Namespace wan24.RPC.Sdk | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Sdk Classes RpcSdkBase Base class for a RPC SDK RpcSdkBaseExt<T> Base class for a RPC SDK which uses a RPC processor that exports its internals using IRpcProcessorInternals RpcSdkBase<T> Base class for a RPC SDK"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | wan24-RPC",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "wan24-RPC | wan24-RPC",
    "keywords": "wan24-RPC This library contains some RPC helper which enables an app to use any bi-directional RPC stream on the fly. It supports Stream channels Enumeration channels Events Cancellation Binary and JSON serialization API versioning Compression Server AND client RPC (bi-directional) Authorization I try to keep the API of this library as abstract as possible, but giving a fully working environment. I've decided to concentrate on streams, which seem to be the best center for an abstraction logic. While the RPC stream is the central element, all other things (processor, SDK) are optional and just suggestions that are built on each other to let you make the decision how far you want or need to go, finally, and to offer everything to go for rapid app development. NOTE: This library requires a .NET server AND client. No other languages are supported at present. NOTE: The server side implementation requires components which are not part of this library. How to get it This library is available as NuGet package. Usage Creating a RPC API A RPC API is any type which exports public methods. You should use the (Disposable)RpcApiBase base type, 'cause it uses the NoRpcAttribute on methods which should not be remote callable. A short overview over the helpers that you may want to use: Helper Description RpcApiBase RPC API base type DisposableRpcApiBase Disposable RPC API base type RpcAuthorizationAttributeBase Base type for an authorization attribute for APIs or methods RpcAuthorizedAttribute Attribute for single API methods which don't require an authorization (if the API itself requires it) RpcAliasAttribute Attribute for APIs or methods which should be exported using a different name NoRpcAttribute Attribute for public methods or parameters which shouldn't be accessed from the peer NoRpcDisposeAttribute Attribute for RPC methods which return a disposable value which should NOT be disposed after sending it to the peer, or for API classes which should NOT be disposed, if disconnected NoRpcEnumerableAttribute Attribute for RPC method return value or parameters which are enumerables, but shouldn't be handled as enumerables during RPC call processing NoRpcCompressionAttribute Attribute for RPC method stream return value or parameters which shouldn't use compression ('cause they may be compressed already) RpcVersionAttribute Attribute for API or SDK methods which restrict the supported peer API version (evaluated by the RPC processor) Per default the API class and method names are used for addressing a RPC call. However, it's possible to add API classes and methods using customized names. If you use the pre-defined RPC service logic, wan24.Core.DiHelper is being used for dependency injection, so you may use keyed services also. RPC stream extensions Any blocking bi-directional stream can be used as RPC communication stream: // Reading any RPC message RpcMessageBase message = await stream.ReadRpcMessageAsync(); // Writing any RPC message await stream.WriteRpcMessageAsync(message); RpcMessageBase is just a base type, which is being used by SerializerRpcMessageBase (supports variable serializer) Those base types are used by ID Type Description 0 RequestMessage RPC request 1 ResponseMessage RPC response 2 ErrorResponseMessage RPC error response 3 CancellationMessage RPC cancellation 4 EventMessage RPC event and must be used as base type for your own implementations. Each RPC message type has an ID, which may be sent to the peer before the serialized message body. Your custom RPC message type needs to be registered: RpcMessages.Register<YourRpcMessage>(1 << 8); NOTE: The first 8 bit of the message type ID are reserved, so your custom message type ID must start from 256+. RPC message serialization These are the built in RPC message serializers: ID Type Description 0 BinarySerializer Binary serialization using Stream-Serializer-Extensions 1 JsonSerializer JSON serialization using wan24.Core.JsonHelper 2 MixedSerializer Variable serializer which chooses between binary and JSON serialization per object (prefers binary) The MixedSerializer is the default. Binary serialization will produce less overhead, but each object needs to implement the IStreamSerializer interface. To register a custom serializer: RpcSerializer.Register(1 << 8, yourSerializer); NOTE: The first 8 bits of the serializer ID are reserved, so your custom serializer ID must start from 256+. You can set the default RPC message serializer to use in the static SerializerRpcMessageBase.DefaultSerializer property. Using the RPC processor The RPC processor is used to evaluate a RPC call to registered RPC API classes and methods: RpcProcessor processor = new(new(typeof(YourRpcApi))); await using(processor) { await processor.StartAsync(); while(peer.IsConnected) { // Receive a request message, first ... // Then evaluate it processor.Evaluate(message, yourReturnValueHandler); // The return value will be managed from the RPC processor automatic } } NOTE: One RPC processor instance is required for each RPC peer connection! WARNING: The number of processing evaluations is limited (using the RPC processor options). Any limit exceeding call will cause an exception at the peer! Using the RPC SDK The RpcSdkBase is a base class for creating a SDK which uses a RPC stream: public class YourSdk : RpcSdkBase { public YourSdk() : base() { } public async Task ConnectAsync() { // Connect to the RPC server ... // Then set the RPC stream RPC = rpcStream; } public Task<AnyType> YourApiMethodAsync(AnyType2 parameter, CancellationToken ct = default) => SendRpcCallAsync<AnyType>(nameof(YourApiMethodAsync), ct, parameter); } The SDK will manage a RPC processor, if clientside RPC calls are enabled. SDK usage: YourSdk sdk = new(); await using(sdk) { // Configure the SDK connection ... // Then connect await sdk.ConnectAsync(); // Then call API methods AnyType result; try { result = await sdk.YourApiMethodAsync(value); } catch(RpcRemoteException ex) { // Handle the remote execution error // (InnerException has the remote exception type, if possible) } ... } TIP: For keeping consistence between the client and server RPC API and SDK implementations you can use a shared interface and implement an API method for pre-checking the API version, and if a client update is required, first. Enumerable parameters and return values Enumerables will be transfered asynchronous (streamed) and managed by the RPC processor automatic, if the type at the receiving side implements IList. A parameter or return value may be an IEnumerable<T> or IAsyncEnumerable<T>. NOTE: To disable that behavior you can use the NoRpcEnumerableAttribute for your RPC API or SDK method or RPC API parameter. For SDK method parameters wrap the value with NoRpcEnumerable. TIP: Use IAsyncEnumerable<T> where possible! WARNING: The number of processing enumerables is limited (using the RPC processor options). Any limit exceeding call will cause an exception at the peer! Stream parameters and return values Streams will be transfered asynchronous and managed by the RPC processor automatic. While synchronous stream usage is possible, all synchronous stream methods are mapped to asynchronous methods (you should avoid using them!). NOTE: If compression is enabled, streams will be transfered compressed per default. If you don't want that, you can use the NoRpcCompressionAttribute for your RPC API or SDK method or RPC API parameter. For SDK method parameters wrap a value with UncompressedRpcStream. WARNING: The number of processing streams is limited (using the RPC processor options). Any limit exceeding call will cause an exception at the peer! Events A RpcProcessor and a RpcSdkBase offer a simple solution for events using EventMessage and RpcEvent. In a processor or SDK you can register receivable events like this: RegisterEvent(new(nameof(YourEvent), typeof(YourEventData), RaiseYourEventAsync)); Example receivable event definition: public delegate void YourEvent_Delegate(object sender, YourEventData e); public event YourEvent_Delegate? YourEvent; private async Task RaiseYourEventAsync(RpcEvent rpcEvent, EventData? e) { await Task.Yield(); if(e is not YourEventData data) // Exception will be handled by the processor or SDK throw new InvalidProgramException(\"Missing/invalid event data\"); YourEvent?.Invoke(this, data); } NOTE: Since event handling is a synchronous operation, it's not possible to write something back to the event data and respond it to the RPC peers event sending context. To send any event to the peer: anyObject.AnyEvent += (sender, e) => SendEvent(nameof(AnyObjectType.AnyEvent), new AnyEventData(sender, e)); The event message processing will be handled by the RPC processor automatic. NOTE: The SendEvent method doesn't return a task, but will send the event asynchronous in background. It's part of the processor and the SDK base types and may be called in any other context, also. TIP: You can enable event throttling by defining an event throttler instance in the RPC processor options. WARNING: You should remove event listeners in order to enable the GC to clan up the object reference, if a processor or a SDK instance isn't in use anymore! Cancellation If a SDK method timed out, the SDK will send a RpcCancellationMessage to the peer, which will then cancel the RPC method execution, if possible. For this the RPC API method needs to have a CancellationToken type parameter. API versioning You need to implement a version check into your SDK by yourself. It's required to use an unsigned integer number as version number. Using the RpcVersionAttribute you can restrict the supported API version and also forward a RPC processor to another API method for the used SDK version: public async Task<int> ApiVersionAsync(RpcProcessor processor, int peerSdkVersion, CancellationToken ct) { // Check the version number ... // Then use it processor.CurrentApiVersion = peerSdkVersion; // Maybe return the latest API version to signal an available optional update return YourApi.VERSION; } [RpcVersion(fromVersion: 1, toVersion: 3, newerMethodName: \"YourApiMethodV2Async\")] public async Task YourApiMethodAsync(AnyType parameter, CancellationToken ct) { // Used with peer versions 1, 2 and 3 } [RpcVersion(4)] public async Task<ReturnType> YourApiMethodV2Async(AnyType parameter, OtherType other, CancellationToken ct) { // Used from peer versions 4+ } To enable API version restrictions your API needs to set the CurrentApiVersion value to the RPC processor which manages the connection. Any RPC call to an API method which has a RpcVersionAttribute before the CurrentApiVersion value was set will cause an error at the client side. Since communicated objects are being serialized, and they may be changed, too, you could use the serializer versioning for IStreamSerializer implementations (see the documentation of the Stream-Serializer-Extensions NuGet package). The serializer versioning is fully independent from the API versioning. Anyway, if the serializer version of a communicated type increases, you should also increase the API version number to be safe, if the updated serialization requires a peer software update (which is the case when the new serialization doesn't support the previous object structure). A serializer version increment is required, if the new type revision is incompatible with the previous type revision. An API version increment is required on any incompatibility: Incompatible types Method signature changes Method removals For any other change incrementing a version number is optional and depends on the context of the change, and if the change is downward compatible. Authorization Use the RpcAuthorizationAttributeBase type for implementing authorization for your RPC APIs and methods: [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method)] public class YourAuthorizationAttribute : RpcAuthorizationAttributeBase { public override async Task<bool> IsAuthorizedAsync(RpcContext context) { // Determine if the context is authorized and return TRUE to continue, // or FALSE to disconnect the peer } } This attribute can be applied to RPC API classes and methods and will be evaluated by the RPC processor before executing any API method. Any unauthorized access will disconnect the peer: [YourAuthorization]// Optional for all API methods public class YourRpcApi : RpcApiBase { [YourAuthorization]// Optional at the API method level public async Task YourApiMethod() { ... } ... } Using the RpcAuthorizedAttribute you can disable authorization for single methods of an API which requires authorization for all exported API methods. CAUTION: If you mix RpcAuthorizedAttribute with any RpcAuthorizationAttributeBase attributes, no authorization will be required, finally!"
  }
}