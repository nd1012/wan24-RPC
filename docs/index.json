{
  "api/index.html": {
    "href": "api/index.html",
    "title": "API reference | wan24-RPC",
    "keywords": "API reference Choose a type from the left to start browsing."
  },
  "api/wan24.RPC.Api.Attributes.AttributeExtensions.html": {
    "href": "api/wan24.RPC.Api.Attributes.AttributeExtensions.html",
    "title": "Class AttributeExtensions | wan24-RPC",
    "keywords": "Class AttributeExtensions Attribute extensions Inheritance object AttributeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax public static class AttributeExtensions Methods | Edit this page View Source IsAuthorizedAsync(IEnumerable<RpcAuthorizationAttributeBase>, RpcContext, bool) Determine if a RPC context is authorized Declaration public static Task<bool> IsAuthorizedAsync(this IEnumerable<RpcAuthorizationAttributeBase> attributes, RpcContext context, bool throwOnUnauthorized = true) Parameters Type Name Description IEnumerable<RpcAuthorizationAttributeBase> attributes Authorization attributes RpcContext context RPC context to authorize bool throwOnUnauthorized Throw an exception if unauthorized? Returns Type Description Task<bool> If authorized Exceptions Type Condition UnauthorizedAccessException Not authorized"
  },
  "api/wan24.RPC.Api.Attributes.NoRpcAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.NoRpcAttribute.html",
    "title": "Class NoRpcAttribute | wan24-RPC",
    "keywords": "Class NoRpcAttribute Attribute for A type which is not allowed to be deserialized A public non-RPC method of an API type A no-RPC servable RPC API method parameter (opt-out) Inheritance object Attribute NoRpcAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Parameter)] public class NoRpcAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source NoRpcAttribute() Attribute for A type which is not allowed to be deserialized A public non-RPC method of an API type A no-RPC servable RPC API method parameter (opt-out) Declaration public NoRpcAttribute() Remarks Constructor"
  },
  "api/wan24.RPC.Api.Attributes.NoRpcDisposeAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.NoRpcDisposeAttribute.html",
    "title": "Class NoRpcDisposeAttribute | wan24-RPC",
    "keywords": "Class NoRpcDisposeAttribute Attribute for A disposable RPC API method parameter which shouldn't be disposed after the method returned regular A disposable RPC API method return value which shouldn't be disposed after the response was sent to the peer A disposable RPC API type which shouldn't be disposed when the RPC processor is disposing Inheritance object Attribute NoRpcDisposeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Parameter)] public class NoRpcDisposeAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source NoRpcDisposeAttribute() Attribute for A disposable RPC API method parameter which shouldn't be disposed after the method returned regular A disposable RPC API method return value which shouldn't be disposed after the response was sent to the peer A disposable RPC API type which shouldn't be disposed when the RPC processor is disposing Declaration public NoRpcDisposeAttribute() Remarks Constructor"
  },
  "api/wan24.RPC.Api.Attributes.NoRpcEnumerableAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.NoRpcEnumerableAttribute.html",
    "title": "Class NoRpcEnumerableAttribute | wan24-RPC",
    "keywords": "Class NoRpcEnumerableAttribute Attribute for an enumerable RPC API method return value which shouldn't be RPC enumerated (will be transported as an array instead) Inheritance object Attribute NoRpcEnumerableAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class NoRpcEnumerableAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source NoRpcEnumerableAttribute() Attribute for an enumerable RPC API method return value which shouldn't be RPC enumerated (will be transported as an array instead) Declaration public NoRpcEnumerableAttribute() Remarks Constructor"
  },
  "api/wan24.RPC.Api.Attributes.RpcAliasAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcAliasAttribute.html",
    "title": "Class RpcAliasAttribute | wan24-RPC",
    "keywords": "Class RpcAliasAttribute Attribute for a RPC API (method) which uses an alias name Inheritance object Attribute RpcAliasAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method)] public class RpcAliasAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source RpcAliasAttribute(string) Attribute for a RPC API (method) which uses an alias name Declaration public RpcAliasAttribute(string alias) Parameters Type Name Description string alias Alias name Remarks Constructor Properties | Edit this page View Source Alias Alias name Declaration public virtual string Alias { get; } Property Value Type Description string"
  },
  "api/wan24.RPC.Api.Attributes.RpcAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcAttribute.html",
    "title": "Class RpcAttribute | wan24-RPC",
    "keywords": "Class RpcAttribute Attribute for a RPC type which is allowed to be deserialized (opt-in) Inheritance object Attribute RpcAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class RpcAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source RpcAttribute() Attribute for a RPC type which is allowed to be deserialized (opt-in) Declaration public RpcAttribute() Remarks Constructor"
  },
  "api/wan24.RPC.Api.Attributes.RpcAttributeBase.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcAttributeBase.html",
    "title": "Class RpcAttributeBase | wan24-RPC",
    "keywords": "Class RpcAttributeBase Base class for an extended RPC attribute Inheritance object Attribute RpcAttributeBase Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax public abstract class RpcAttributeBase : Attribute Constructors | Edit this page View Source RpcAttributeBase() Base class for an extended RPC attribute Declaration protected RpcAttributeBase() Methods | Edit this page View Source HandleAssignedApi(RpcApiInfo) Handle an assigned API Declaration public virtual void HandleAssignedApi(RpcApiInfo api) Parameters Type Name Description RpcApiInfo api API | Edit this page View Source HandleAssignedApiMethod(RpcApiMethodInfo) Handle an assigned API method Declaration public virtual void HandleAssignedApiMethod(RpcApiMethodInfo method) Parameters Type Name Description RpcApiMethodInfo method Method | Edit this page View Source HandleAssignedApiMethodParameter(RpcApiMethodParameterInfo) Handle an assigned API method parameter Declaration public virtual void HandleAssignedApiMethodParameter(RpcApiMethodParameterInfo parameter) Parameters Type Name Description RpcApiMethodParameterInfo parameter Parameter"
  },
  "api/wan24.RPC.Api.Attributes.RpcAuthorizationAttributeBase.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcAuthorizationAttributeBase.html",
    "title": "Class RpcAuthorizationAttributeBase | wan24-RPC",
    "keywords": "Class RpcAuthorizationAttributeBase Base type for a RPC API and/or method authorization attribue Inheritance object Attribute RpcAuthorizationAttributeBase Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax public abstract class RpcAuthorizationAttributeBase : Attribute Remarks Constructor Constructors | Edit this page View Source RpcAuthorizationAttributeBase() Base type for a RPC API and/or method authorization attribue Declaration protected RpcAuthorizationAttributeBase() Remarks Constructor Methods | Edit this page View Source IsContextAuthorizedAsync(RpcContext) Determine if a context is authorized Declaration public abstract Task<bool> IsContextAuthorizedAsync(RpcContext context) Parameters Type Name Description RpcContext context Context Returns Type Description Task<bool> If authorized (if false, the peer will be disconnected)"
  },
  "api/wan24.RPC.Api.Attributes.RpcAuthorizedAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcAuthorizedAttribute.html",
    "title": "Class RpcAuthorizedAttribute | wan24-RPC",
    "keywords": "Class RpcAuthorizedAttribute Attribute for RPC API methods which don't require any authorization Inheritance object Attribute RpcAuthorizedAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Method)] public sealed class RpcAuthorizedAttribute : Attribute Constructors | Edit this page View Source RpcAuthorizedAttribute() Attribute for RPC API methods which don't require any authorization Declaration public RpcAuthorizedAttribute()"
  },
  "api/wan24.RPC.Api.Attributes.RpcCancellationAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcCancellationAttribute.html",
    "title": "Class RpcCancellationAttribute | wan24-RPC",
    "keywords": "Class RpcCancellationAttribute Attribute for a RPC API method cancellation parameter or return value configuration Inheritance object Attribute RpcCancellationAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Method|AttributeTargets.Parameter)] public class RpcCancellationAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source RpcCancellationAttribute() Attribute for a RPC API method cancellation parameter or return value configuration Declaration public RpcCancellationAttribute() Remarks Constructor Properties | Edit this page View Source DisposeRpcCancellation If to dispose the RPC cancellation from the RPC processor Declaration public bool DisposeRpcCancellation { get; set; } Property Value Type Description bool"
  },
  "api/wan24.RPC.Api.Attributes.RpcDisconnectOnErrorAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcDisconnectOnErrorAttribute.html",
    "title": "Class RpcDisconnectOnErrorAttribute | wan24-RPC",
    "keywords": "Class RpcDisconnectOnErrorAttribute Attribute for APIs or API methods which need the RPC processor to disconnect on any API method execution error Inheritance object Attribute RpcDisconnectOnErrorAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method)] public class RpcDisconnectOnErrorAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source RpcDisconnectOnErrorAttribute() Attribute for APIs or API methods which need the RPC processor to disconnect on any API method execution error Declaration public RpcDisconnectOnErrorAttribute() Remarks Constructor"
  },
  "api/wan24.RPC.Api.Attributes.RpcDisposeOnErrorAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcDisposeOnErrorAttribute.html",
    "title": "Class RpcDisposeOnErrorAttribute | wan24-RPC",
    "keywords": "Class RpcDisposeOnErrorAttribute Attribute for A disposable RPC API method parameter which should be disposed on error A disposable RPC API method return value which should be disposed on error Inheritance object Attribute RpcDisposeOnErrorAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Method|AttributeTargets.Parameter)] public class RpcDisposeOnErrorAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source RpcDisposeOnErrorAttribute() Attribute for A disposable RPC API method parameter which should be disposed on error A disposable RPC API method return value which should be disposed on error Declaration public RpcDisposeOnErrorAttribute() Remarks Constructor"
  },
  "api/wan24.RPC.Api.Attributes.RpcRemoteScopeKeyAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcRemoteScopeKeyAttribute.html",
    "title": "Class RpcRemoteScopeKeyAttribute | wan24-RPC",
    "keywords": "Class RpcRemoteScopeKeyAttribute RPC remote scope key attribute Inheritance object Attribute RpcRemoteScopeKeyAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Parameter)] public class RpcRemoteScopeKeyAttribute : Attribute Constructors | Edit this page View Source RpcRemoteScopeKeyAttribute(string) RPC remote scope key attribute Declaration public RpcRemoteScopeKeyAttribute(string key) Parameters Type Name Description string key Key Properties | Edit this page View Source Key Key Declaration public string Key { get; } Property Value Type Description string | Edit this page View Source ThrowOnMissingScope Throw an exception when the scope wasn't found? Declaration public bool ThrowOnMissingScope { get; set; } Property Value Type Description bool"
  },
  "api/wan24.RPC.Api.Attributes.RpcScopeKeyAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcScopeKeyAttribute.html",
    "title": "Class RpcScopeKeyAttribute | wan24-RPC",
    "keywords": "Class RpcScopeKeyAttribute RPC scope key attribute Inheritance object Attribute RpcScopeKeyAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Parameter)] public class RpcScopeKeyAttribute : Attribute Constructors | Edit this page View Source RpcScopeKeyAttribute(string) RPC scope key attribute Declaration public RpcScopeKeyAttribute(string key) Parameters Type Name Description string key Key Properties | Edit this page View Source Key Key Declaration public string Key { get; } Property Value Type Description string | Edit this page View Source ThrowOnMissingScope Throw an exception when the scope wasn't found? Declaration public bool ThrowOnMissingScope { get; set; } Property Value Type Description bool"
  },
  "api/wan24.RPC.Api.Attributes.RpcStreamAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcStreamAttribute.html",
    "title": "Class RpcStreamAttribute | wan24-RPC",
    "keywords": "Class RpcStreamAttribute Attribute for a RPC API method stream parameter or return value transport configuration Inheritance object Attribute RpcStreamAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Method|AttributeTargets.Parameter)] public class RpcStreamAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source RpcStreamAttribute() Attribute for a RPC API method stream parameter or return value transport configuration Declaration public RpcStreamAttribute() Remarks Constructor Properties | Edit this page View Source Compression If to use compression Declaration public bool Compression { get; set; } Property Value Type Description bool | Edit this page View Source CompressionAlgorithm Used compression algorithm Declaration public string? CompressionAlgorithm { get; set; } Property Value Type Description string | Edit this page View Source CompressionFlags Used compression flags Declaration public CompressionFlags? CompressionFlags { get; set; } Property Value Type Description CompressionFlags? | Edit this page View Source CompressionLevel Used comression level Declaration public CompressionLevel? CompressionLevel { get; set; } Property Value Type Description CompressionLevel? | Edit this page View Source DisposeRpcStream If to dispose the RPC stream from the RPC processor Declaration public bool DisposeRpcStream { get; set; } Property Value Type Description bool Methods | Edit this page View Source ApplyTo(CompressionOptions?) Apply the configuration to wan24.Compression.CompressionOptions Declaration public virtual CompressionOptions? ApplyTo(CompressionOptions? options) Parameters Type Name Description CompressionOptions options Options Returns Type Description CompressionOptions Options (may be a new instance or even null, if compression was disabled)"
  },
  "api/wan24.RPC.Api.Attributes.RpcVersionAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcVersionAttribute.html",
    "title": "Class RpcVersionAttribute | wan24-RPC",
    "keywords": "Class RpcVersionAttribute Attribute for an API version restricted RPC API method Inheritance object Attribute RpcVersionAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class RpcVersionAttribute : Attribute Constructors | Edit this page View Source RpcVersionAttribute(int) Constructor Declaration public RpcVersionAttribute(int fromVersion) Parameters Type Name Description int fromVersion From version including | Edit this page View Source RpcVersionAttribute(int, int, string?) Constructor Declaration public RpcVersionAttribute(int fromVersion, int toVersion, string? newerMethodName = null) Parameters Type Name Description int fromVersion From version including int toVersion To version including string newerMethodName Newer method name (forwards the RPC processor to another RPC API method for newer API versions) Properties | Edit this page View Source FromVersion From version including Declaration public int FromVersion { get; } Property Value Type Description int | Edit this page View Source NewerMethodName Newer RPC API method name to use (must not use less RPC parameters!) Declaration public string? NewerMethodName { get; } Property Value Type Description string | Edit this page View Source ToVersion To version including Declaration public int? ToVersion { get; } Property Value Type Description int? Methods | Edit this page View Source GetNewerMethodName(in int, in RpcApiMethodInfo) Get the newer RPC API method name to use, if incompatible Declaration public virtual string? GetNewerMethodName(in int version, in RpcApiMethodInfo currentMethod) Parameters Type Name Description int version API version RpcApiMethodInfo currentMethod Current RPC API method used Returns Type Description string The current or newer RPC API method name to use, or null, if the method can't be served with the peers API version | Edit this page View Source IsCompatibleWithApiVersion(in int) Determine if an API version is compatible Declaration public virtual bool IsCompatibleWithApiVersion(in int version) Parameters Type Name Description int version API version Returns Type Description bool If compatible | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString()"
  },
  "api/wan24.RPC.Api.Attributes.html": {
    "href": "api/wan24.RPC.Api.Attributes.html",
    "title": "Namespace wan24.RPC.Api.Attributes | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Api.Attributes Classes AttributeExtensions Attribute extensions NoRpcAttribute Attribute for A type which is not allowed to be deserialized A public non-RPC method of an API type A no-RPC servable RPC API method parameter (opt-out) NoRpcDisposeAttribute Attribute for A disposable RPC API method parameter which shouldn't be disposed after the method returned regular A disposable RPC API method return value which shouldn't be disposed after the response was sent to the peer A disposable RPC API type which shouldn't be disposed when the RPC processor is disposing NoRpcEnumerableAttribute Attribute for an enumerable RPC API method return value which shouldn't be RPC enumerated (will be transported as an array instead) RpcAliasAttribute Attribute for a RPC API (method) which uses an alias name RpcAttribute Attribute for a RPC type which is allowed to be deserialized (opt-in) RpcAttributeBase Base class for an extended RPC attribute RpcAuthorizationAttributeBase Base type for a RPC API and/or method authorization attribue RpcAuthorizedAttribute Attribute for RPC API methods which don't require any authorization RpcCancellationAttribute Attribute for a RPC API method cancellation parameter or return value configuration RpcDisconnectOnErrorAttribute Attribute for APIs or API methods which need the RPC processor to disconnect on any API method execution error RpcDisposeOnErrorAttribute Attribute for A disposable RPC API method parameter which should be disposed on error A disposable RPC API method return value which should be disposed on error RpcRemoteScopeKeyAttribute RPC remote scope key attribute RpcScopeKeyAttribute RPC scope key attribute RpcStreamAttribute Attribute for a RPC API method stream parameter or return value transport configuration RpcVersionAttribute Attribute for an API version restricted RPC API method"
  },
  "api/wan24.RPC.Api.DisposableRpcApiBase.html": {
    "href": "api/wan24.RPC.Api.DisposableRpcApiBase.html",
    "title": "Class DisposableRpcApiBase | wan24-RPC",
    "keywords": "Class DisposableRpcApiBase Base type for a disposable RPC API Inheritance object DisposableBase DisposableRpcApiBase Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable Inherited Members DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.Dispose(bool) DisposableBase.DisposeCore() DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api Assembly: wan24RPC.dll Syntax public abstract class DisposableRpcApiBase : DisposableBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable Constructors | Edit this page View Source DisposableRpcApiBase() Constructor Declaration protected DisposableRpcApiBase() | Edit this page View Source DisposableRpcApiBase(in bool, in bool) Constructor Declaration protected DisposableRpcApiBase(in bool asyncDisposing, in bool allowFinalizer = false) Parameters Type Name Description bool asyncDisposing Asynchronous disposing? bool allowFinalizer Don't count running the finalizer as an error? Methods | Edit this page View Source Dispose() Declaration [NoRpc] public void Dispose() | Edit this page View Source DisposeAsync() Declaration [NoRpc] public ValueTask DisposeAsync() Returns Type Description ValueTask | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration [NoRpc] public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration [NoRpc] public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Edit this page View Source RegisterForDispose<T>(in T) Register an object for disposing when this object is being disposed Declaration [NoRpc] public override void RegisterForDispose<T>(in T disposable) Parameters Type Name Description T disposable Disposable (will be disposed) Type Parameters Name Description T Object type Overrides wan24.Core.DisposableBase.RegisterForDispose<T>(in T) | Edit this page View Source ToString() Returns a string that represents the current object. Declaration [NoRpc] public override string? ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable"
  },
  "api/wan24.RPC.Api.IWantRpcProcessorInfo.html": {
    "href": "api/wan24.RPC.Api.IWantRpcProcessorInfo.html",
    "title": "Interface IWantRpcProcessorInfo | wan24-RPC",
    "keywords": "Interface IWantRpcProcessorInfo Interface for a RPC API type which wants to get hosting RPC processor informations after construction Namespace: wan24.RPC.Api Assembly: wan24RPC.dll Syntax public interface IWantRpcProcessorInfo Properties | Edit this page View Source Processor RPC processor Declaration RpcProcessor? Processor { get; set; } Property Value Type Description RpcProcessor | Edit this page View Source ProcessorCancellation RPC processor cancellation token Declaration CancellationToken ProcessorCancellation { get; set; } Property Value Type Description CancellationToken"
  },
  "api/wan24.RPC.Api.Reflection.ReflectionExtensions.html": {
    "href": "api/wan24.RPC.Api.Reflection.ReflectionExtensions.html",
    "title": "Class ReflectionExtensions | wan24-RPC",
    "keywords": "Class ReflectionExtensions Reflection extensions Inheritance object ReflectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Reflection Assembly: wan24RPC.dll Syntax public static class ReflectionExtensions Methods | Edit this page View Source FindApi(IReadOnlyDictionary<string, RpcApiInfo>, string) Find an API by its name Declaration public static RpcApiInfo? FindApi(this IReadOnlyDictionary<string, RpcApiInfo> apis, string name) Parameters Type Name Description IReadOnlyDictionary<string, RpcApiInfo> apis APIs string name Name Returns Type Description RpcApiInfo API | Edit this page View Source FindApiMethod(IReadOnlyDictionary<string, RpcApiInfo>, in string) Find an API method by its name Declaration public static RpcApiMethodInfo? FindApiMethod(this IReadOnlyDictionary<string, RpcApiInfo> apis, in string name) Parameters Type Name Description IReadOnlyDictionary<string, RpcApiInfo> apis APIs string name Name Returns Type Description RpcApiMethodInfo API method | Edit this page View Source IsEnumerable(Type, in bool, bool) Determine if a type is an IEnumerable<T> or IAsyncEnumerable<T> Declaration public static bool IsEnumerable(this Type type, in bool strict = false, bool asyncOnly = false) Parameters Type Name Description Type type Type bool strict If the type must be strictly an IEnumerable<T> or IAsyncEnumerable<T> (may be the generic type definition also) bool asyncOnly IAsyncEnumerable<T> only? Returns Type Description bool If the type is an enumerable"
  },
  "api/wan24.RPC.Api.Reflection.RpcApiInfo.html": {
    "href": "api/wan24.RPC.Api.Reflection.RpcApiInfo.html",
    "title": "Class RpcApiInfo | wan24-RPC",
    "keywords": "Class RpcApiInfo RPC API info Inheritance object DisposableBase RpcApiInfo Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable Inherited Members DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api.Reflection Assembly: wan24RPC.dll Syntax public class RpcApiInfo : DisposableBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable Constructors | Edit this page View Source RpcApiInfo() Constructor Declaration protected RpcApiInfo() | Edit this page View Source RpcApiInfo(in object) Constructor Declaration public RpcApiInfo(in object api) Parameters Type Name Description object api API instance | Edit this page View Source RpcApiInfo(in Type) Constructor Declaration public RpcApiInfo(in Type type) Parameters Type Name Description Type type API type Properties | Edit this page View Source Alias Alias Declaration public RpcAliasAttribute? Alias { get; protected set; } Property Value Type Description RpcAliasAttribute | Edit this page View Source Attributes Extended RPC attributes Declaration public FrozenSet<RpcAttributeBase> Attributes { get; protected set; } Property Value Type Description FrozenSet<RpcAttributeBase> | Edit this page View Source Authorization Authorization Declaration public FrozenSet<RpcAuthorizationAttributeBase> Authorization { get; protected set; } Property Value Type Description FrozenSet<RpcAuthorizationAttributeBase> | Edit this page View Source Authorize If authorized for every context Declaration public bool Authorize { get; protected set; } Property Value Type Description bool | Edit this page View Source DisconnectOnError If to disconnect on any API method execution error Declaration public bool DisconnectOnError { get; protected set; } Property Value Type Description bool | Edit this page View Source DisposeInstance If to dispose the Instance after use Declaration public bool DisposeInstance { get; protected set; } Property Value Type Description bool | Edit this page View Source Instance API instance Declaration public object Instance { get; protected set; } Property Value Type Description object | Edit this page View Source Methods Methods Declaration public FrozenDictionary<string, RpcApiMethodInfo> Methods { get; protected set; } Property Value Type Description FrozenDictionary<string, RpcApiMethodInfo> | Edit this page View Source Name Name Declaration public virtual string Name { get; } Property Value Type Description string | Edit this page View Source NamePrefix Name prefix Declaration public string? NamePrefix { get; set; } Property Value Type Description string | Edit this page View Source Type API type Declaration public Type Type { get; protected set; } Property Value Type Description Type | Edit this page View Source Version Version Declaration public RpcVersionAttribute? Version { get; protected set; } Property Value Type Description RpcVersionAttribute Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableBase.DisposeCore() | Edit this page View Source FindMethod(string) Find a method by its name Declaration public RpcApiMethodInfo? FindMethod(string name) Parameters Type Name Description string name Name Returns Type Description RpcApiMethodInfo Method | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable"
  },
  "api/wan24.RPC.Api.Reflection.RpcApiMethodInfo.html": {
    "href": "api/wan24.RPC.Api.Reflection.RpcApiMethodInfo.html",
    "title": "Class RpcApiMethodInfo | wan24-RPC",
    "keywords": "Class RpcApiMethodInfo RPC API method info Inheritance object RpcApiMethodInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api.Reflection Assembly: wan24RPC.dll Syntax public class RpcApiMethodInfo Constructors | Edit this page View Source RpcApiMethodInfo() Constructor Declaration protected RpcApiMethodInfo() | Edit this page View Source RpcApiMethodInfo(RpcApiInfo, MethodInfo) Constructor Declaration public RpcApiMethodInfo(RpcApiInfo api, MethodInfo method) Parameters Type Name Description RpcApiInfo api API MethodInfo method Method Properties | Edit this page View Source API API Declaration public RpcApiInfo API { get; protected set; } Property Value Type Description RpcApiInfo | Edit this page View Source Alias Alias Declaration public RpcAliasAttribute? Alias { get; protected set; } Property Value Type Description RpcAliasAttribute | Edit this page View Source Attributes Extended RPC attributes Declaration public FrozenSet<RpcAttributeBase> Attributes { get; protected set; } Property Value Type Description FrozenSet<RpcAttributeBase> | Edit this page View Source Authorization Authorization Declaration public FrozenSet<RpcAuthorizationAttributeBase> Authorization { get; protected set; } Property Value Type Description FrozenSet<RpcAuthorizationAttributeBase> | Edit this page View Source Authorize If authorized for every context Declaration public bool Authorize { get; protected set; } Property Value Type Description bool | Edit this page View Source Cancellation Cancellation configuration Declaration public RpcCancellationAttribute? Cancellation { get; protected set; } Property Value Type Description RpcCancellationAttribute | Edit this page View Source DisconnectOnError If to disconnect on execution error Declaration public bool DisconnectOnError { get; protected set; } Property Value Type Description bool | Edit this page View Source DisposeReturnValue If to dispose the return value after sending Declaration public bool DisposeReturnValue { get; protected set; } Property Value Type Description bool | Edit this page View Source DisposeReturnValueOnError If to dispose the return value on error Declaration public bool DisposeReturnValueOnError { get; protected set; } Property Value Type Description bool | Edit this page View Source EnumerateReturnValue If to enumerate the return value, if applicable Declaration public bool EnumerateReturnValue { get; protected set; } Property Value Type Description bool | Edit this page View Source Method Method Declaration public MethodInfo Method { get; protected set; } Property Value Type Description MethodInfo | Edit this page View Source Name Name Declaration public virtual string Name { get; } Property Value Type Description string | Edit this page View Source Parameters Parameters Declaration public FrozenDictionary<string, RpcApiMethodParameterInfo> Parameters { get; protected set; } Property Value Type Description FrozenDictionary<string, RpcApiMethodParameterInfo> | Edit this page View Source RpcParameters RPC parameters Declaration public FrozenSet<RpcApiMethodParameterInfo> RpcParameters { get; protected set; } Property Value Type Description FrozenSet<RpcApiMethodParameterInfo> | Edit this page View Source Stream Stream configuration Declaration public RpcStreamAttribute? Stream { get; protected set; } Property Value Type Description RpcStreamAttribute | Edit this page View Source Version Version Declaration public RpcVersionAttribute? Version { get; protected set; } Property Value Type Description RpcVersionAttribute Methods | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString()"
  },
  "api/wan24.RPC.Api.Reflection.RpcApiMethodParameterInfo.html": {
    "href": "api/wan24.RPC.Api.Reflection.RpcApiMethodParameterInfo.html",
    "title": "Class RpcApiMethodParameterInfo | wan24-RPC",
    "keywords": "Class RpcApiMethodParameterInfo RPC API method parameter info Inheritance object RpcApiMethodParameterInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Reflection Assembly: wan24RPC.dll Syntax public class RpcApiMethodParameterInfo Constructors | Edit this page View Source RpcApiMethodParameterInfo() Constructor Declaration protected RpcApiMethodParameterInfo() | Edit this page View Source RpcApiMethodParameterInfo(in RpcApiMethodInfo, in ParameterInfo, in int, in NullabilityInfoContext) Constructor Declaration public RpcApiMethodParameterInfo(in RpcApiMethodInfo method, in ParameterInfo pi, in int index, in NullabilityInfoContext nic) Parameters Type Name Description RpcApiMethodInfo method Method ParameterInfo pi Parameter int index Index NullabilityInfoContext nic Nullability info context Properties | Edit this page View Source API API Declaration public RpcApiInfo API { get; } Property Value Type Description RpcApiInfo | Edit this page View Source Attributes Extended RPC attributes Declaration public FrozenSet<RpcAttributeBase> Attributes { get; protected set; } Property Value Type Description FrozenSet<RpcAttributeBase> | Edit this page View Source Cancellation Cancellation configuration Declaration public RpcCancellationAttribute? Cancellation { get; protected set; } Property Value Type Description RpcCancellationAttribute | Edit this page View Source DisposeParameterValue If to dispose the parameter value after processing Declaration public bool DisposeParameterValue { get; protected set; } Property Value Type Description bool | Edit this page View Source DisposeParameterValueOnError If to dispose the parameter value on error Declaration public bool DisposeParameterValueOnError { get; protected set; } Property Value Type Description bool | Edit this page View Source Enumerable If the parameter value may be transported as RPC enumerable Declaration public bool Enumerable { get; protected set; } Property Value Type Description bool | Edit this page View Source Index Index Declaration public int Index { get; protected set; } Property Value Type Description int | Edit this page View Source Method Method Declaration public RpcApiMethodInfo Method { get; protected set; } Property Value Type Description RpcApiMethodInfo | Edit this page View Source Nullable If the parameter value is nullable Declaration public bool Nullable { get; protected set; } Property Value Type Description bool | Edit this page View Source Parameter Parameter Declaration public ParameterInfo Parameter { get; protected set; } Property Value Type Description ParameterInfo | Edit this page View Source RPC If the parameter is available via RPC Declaration public bool RPC { get; protected set; } Property Value Type Description bool | Edit this page View Source RemoteScope Remote scope key settings Declaration public RpcRemoteScopeKeyAttribute? RemoteScope { get; protected set; } Property Value Type Description RpcRemoteScopeKeyAttribute | Edit this page View Source Scope Scope key settings Declaration public RpcScopeKeyAttribute? Scope { get; protected set; } Property Value Type Description RpcScopeKeyAttribute | Edit this page View Source Stream Stream configuration Declaration public RpcStreamAttribute? Stream { get; protected set; } Property Value Type Description RpcStreamAttribute"
  },
  "api/wan24.RPC.Api.Reflection.html": {
    "href": "api/wan24.RPC.Api.Reflection.html",
    "title": "Namespace wan24.RPC.Api.Reflection | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Api.Reflection Classes ReflectionExtensions Reflection extensions RpcApiInfo RPC API info RpcApiMethodInfo RPC API method info RpcApiMethodParameterInfo RPC API method parameter info"
  },
  "api/wan24.RPC.Api.RpcApiBase.html": {
    "href": "api/wan24.RPC.Api.RpcApiBase.html",
    "title": "Class RpcApiBase | wan24-RPC",
    "keywords": "Class RpcApiBase Base type for a RPC API Inheritance object RpcApiBase Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api Assembly: wan24RPC.dll Syntax public abstract class RpcApiBase Remarks Constructor Constructors | Edit this page View Source RpcApiBase() Base type for a RPC API Declaration protected RpcApiBase() Remarks Constructor Methods | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration [NoRpc] public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration [NoRpc] public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Edit this page View Source ToString() Returns a string that represents the current object. Declaration [NoRpc] public override string? ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString()"
  },
  "api/wan24.RPC.Api.html": {
    "href": "api/wan24.RPC.Api.html",
    "title": "Namespace wan24.RPC.Api | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Api Classes DisposableRpcApiBase Base type for a disposable RPC API RpcApiBase Base type for a RPC API Interfaces IWantRpcProcessorInfo Interface for a RPC API type which wants to get hosting RPC processor informations after construction"
  },
  "api/wan24.RPC.Processing.Exceptions.RpcRemoteException.html": {
    "href": "api/wan24.RPC.Processing.Exceptions.RpcRemoteException.html",
    "title": "Class RpcRemoteException | wan24-RPC",
    "keywords": "Class RpcRemoteException RPC remote exception (InnerException should serve the remote exception type) Inheritance object Exception RpcRemoteException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing.Exceptions Assembly: wan24RPC.dll Syntax [Serializable] public class RpcRemoteException : Exception, ISerializable Constructors | Edit this page View Source RpcRemoteException() Constructor Declaration public RpcRemoteException() | Edit this page View Source RpcRemoteException(string?) Constructor Declaration public RpcRemoteException(string? message) Parameters Type Name Description string message Message | Edit this page View Source RpcRemoteException(string?, Exception?) Constructor Declaration public RpcRemoteException(string? message, Exception? inner) Parameters Type Name Description string message Message Exception inner Inner exception Properties | Edit this page View Source RemoteExceptionType Remote exception type name Declaration public required string RemoteExceptionType { get; init; } Property Value Type Description string Implements ISerializable"
  },
  "api/wan24.RPC.Processing.Exceptions.RpcScopeNotFoundException.html": {
    "href": "api/wan24.RPC.Processing.Exceptions.RpcScopeNotFoundException.html",
    "title": "Class RpcScopeNotFoundException | wan24-RPC",
    "keywords": "Class RpcScopeNotFoundException Thrown if a message for an unknown scope was received Inheritance object Exception RpcScopeNotFoundException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing.Exceptions Assembly: wan24RPC.dll Syntax public class RpcScopeNotFoundException : Exception, ISerializable Constructors | Edit this page View Source RpcScopeNotFoundException() Constructor Declaration public RpcScopeNotFoundException() | Edit this page View Source RpcScopeNotFoundException(string?) Constructor Declaration public RpcScopeNotFoundException(string? message) Parameters Type Name Description string message Message | Edit this page View Source RpcScopeNotFoundException(string?, Exception?) Constructor Declaration public RpcScopeNotFoundException(string? message, Exception? inner) Parameters Type Name Description string message Message Exception inner Inner exception Properties | Edit this page View Source ScopeMessage Scope message Declaration public required IRpcScopeMessage ScopeMessage { get; init; } Property Value Type Description IRpcScopeMessage Implements ISerializable"
  },
  "api/wan24.RPC.Processing.Exceptions.TooManyRpcCancellationsException.html": {
    "href": "api/wan24.RPC.Processing.Exceptions.TooManyRpcCancellationsException.html",
    "title": "Class TooManyRpcCancellationsException | wan24-RPC",
    "keywords": "Class TooManyRpcCancellationsException Thrown on too many RPC cancellations (MaxStreamContentLength) Inheritance object Exception SystemException OutOfMemoryException TooManyRpcCancellationsException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing.Exceptions Assembly: wan24RPC.dll Syntax [Serializable] public class TooManyRpcCancellationsException : OutOfMemoryException, ISerializable Constructors | Edit this page View Source TooManyRpcCancellationsException() Constructor Declaration public TooManyRpcCancellationsException() | Edit this page View Source TooManyRpcCancellationsException(string?) Constructor Declaration public TooManyRpcCancellationsException(string? message) Parameters Type Name Description string message Message | Edit this page View Source TooManyRpcCancellationsException(string?, Exception?) Constructor Declaration public TooManyRpcCancellationsException(string? message, Exception? inner) Parameters Type Name Description string message Message Exception inner Inner exception Implements ISerializable"
  },
  "api/wan24.RPC.Processing.Exceptions.TooManyRpcMessagesException.html": {
    "href": "api/wan24.RPC.Processing.Exceptions.TooManyRpcMessagesException.html",
    "title": "Class TooManyRpcMessagesException | wan24-RPC",
    "keywords": "Class TooManyRpcMessagesException Thrown on too many incoming RPC messages while keep alive is being used (IncomingMessageQueue) Inheritance object Exception SystemException OutOfMemoryException TooManyRpcMessagesException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing.Exceptions Assembly: wan24RPC.dll Syntax [Serializable] public class TooManyRpcMessagesException : OutOfMemoryException, ISerializable Constructors | Edit this page View Source TooManyRpcMessagesException() Constructor Declaration public TooManyRpcMessagesException() | Edit this page View Source TooManyRpcMessagesException(string?) Constructor Declaration public TooManyRpcMessagesException(string? message) Parameters Type Name Description string message Message | Edit this page View Source TooManyRpcMessagesException(string?, Exception?) Constructor Declaration public TooManyRpcMessagesException(string? message, Exception? inner) Parameters Type Name Description string message Message Exception inner Inner exception Implements ISerializable"
  },
  "api/wan24.RPC.Processing.Exceptions.TooManyRpcRequestsException.html": {
    "href": "api/wan24.RPC.Processing.Exceptions.TooManyRpcRequestsException.html",
    "title": "Class TooManyRpcRequestsException | wan24-RPC",
    "keywords": "Class TooManyRpcRequestsException Thrown on too many RPC calls (CallQueue) Inheritance object Exception SystemException OutOfMemoryException TooManyRpcRequestsException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing.Exceptions Assembly: wan24RPC.dll Syntax [Serializable] public class TooManyRpcRequestsException : OutOfMemoryException, ISerializable Constructors | Edit this page View Source TooManyRpcRequestsException() Constructor Declaration public TooManyRpcRequestsException() | Edit this page View Source TooManyRpcRequestsException(string?) Constructor Declaration public TooManyRpcRequestsException(string? message) Parameters Type Name Description string message Message | Edit this page View Source TooManyRpcRequestsException(string?, Exception?) Constructor Declaration public TooManyRpcRequestsException(string? message, Exception? inner) Parameters Type Name Description string message Message Exception inner Inner exception Implements ISerializable"
  },
  "api/wan24.RPC.Processing.Exceptions.TooManyRpcStreamsException.html": {
    "href": "api/wan24.RPC.Processing.Exceptions.TooManyRpcStreamsException.html",
    "title": "Class TooManyRpcStreamsException | wan24-RPC",
    "keywords": "Class TooManyRpcStreamsException Thrown on too many RPC streams (MaxStreamContentLength) Inheritance object Exception SystemException OutOfMemoryException TooManyRpcStreamsException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing.Exceptions Assembly: wan24RPC.dll Syntax [Serializable] public class TooManyRpcStreamsException : OutOfMemoryException, ISerializable Constructors | Edit this page View Source TooManyRpcStreamsException() Constructor Declaration public TooManyRpcStreamsException() | Edit this page View Source TooManyRpcStreamsException(string?) Constructor Declaration public TooManyRpcStreamsException(string? message) Parameters Type Name Description string message Message | Edit this page View Source TooManyRpcStreamsException(string?, Exception?) Constructor Declaration public TooManyRpcStreamsException(string? message, Exception? inner) Parameters Type Name Description string message Message Exception inner Inner exception Implements ISerializable"
  },
  "api/wan24.RPC.Processing.Exceptions.html": {
    "href": "api/wan24.RPC.Processing.Exceptions.html",
    "title": "Namespace wan24.RPC.Processing.Exceptions | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Processing.Exceptions Classes RpcRemoteException RPC remote exception (InnerException should serve the remote exception type) RpcScopeNotFoundException Thrown if a message for an unknown scope was received TooManyRpcCancellationsException Thrown on too many RPC cancellations (MaxStreamContentLength) TooManyRpcMessagesException Thrown on too many incoming RPC messages while keep alive is being used (IncomingMessageQueue) TooManyRpcRequestsException Thrown on too many RPC calls (CallQueue) TooManyRpcStreamsException Thrown on too many RPC streams (MaxStreamContentLength)"
  },
  "api/wan24.RPC.Processing.IRpcProcessorInternals.html": {
    "href": "api/wan24.RPC.Processing.IRpcProcessorInternals.html",
    "title": "Interface IRpcProcessorInternals | wan24-RPC",
    "keywords": "Interface IRpcProcessorInternals Interface for a RPC processor which exports its internals Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public interface IRpcProcessorInternals Methods | Edit this page View Source SendMessageAsync(IRpcMessage, int, CancellationToken) Send a RPC message to the peer Declaration Task SendMessageAsync(IRpcMessage message, int priority, CancellationToken cancellationToken = default) Parameters Type Name Description IRpcMessage message Message int priority Priority (higher value will be processed faster) CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source SendMessageAsync(IRpcMessage, CancellationToken) Send a RPC message to the peer Declaration Task SendMessageAsync(IRpcMessage message, CancellationToken cancellationToken = default) Parameters Type Name Description IRpcMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task"
  },
  "api/wan24.RPC.Processing.IRpcScopeInternals.html": {
    "href": "api/wan24.RPC.Processing.IRpcScopeInternals.html",
    "title": "Interface IRpcScopeInternals | wan24-RPC",
    "keywords": "Interface IRpcScopeInternals Interface for a RPC scope which exports its internals Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public interface IRpcScopeInternals Methods | Edit this page View Source SendMessageAsync(IRpcMessage, int, CancellationToken) Send a RPC message to the peer Declaration Task SendMessageAsync(IRpcMessage message, int priority, CancellationToken cancellationToken = default) Parameters Type Name Description IRpcMessage message Message int priority Priority (higher value will be processed faster) CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source SendMessageAsync(IRpcMessage, CancellationToken) Send a RPC message to the peer Declaration Task SendMessageAsync(IRpcMessage message, CancellationToken cancellationToken = default) Parameters Type Name Description IRpcMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task"
  },
  "api/wan24.RPC.Processing.Messages.CancelMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.CancelMessage.html",
    "title": "Class CancelMessage | wan24-RPC",
    "keywords": "Class CancelMessage RPC cancel message (cancels a RPC call) Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase CancelMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcMessage IStreamSerializer Inherited Members RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) RpcMessageBase.SerializeAsync(Stream, CancellationToken) RpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public class CancelMessage : RpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source CancelMessage() RPC cancel message (cancels a RPC call) Declaration public CancelMessage() Remarks Constructor | Edit this page View Source CancelMessage(in RequestMessage) Constructor Declaration public CancelMessage(in RequestMessage request) Parameters Type Name Description RequestMessage request RPC request to cancel Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 3 Field Value Type Description int Properties | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.ErrorResponseMessage.JsonError.html": {
    "href": "api/wan24.RPC.Processing.Messages.ErrorResponseMessage.JsonError.html",
    "title": "Class ErrorResponseMessage.JsonError | wan24-RPC",
    "keywords": "Class ErrorResponseMessage.JsonError JSON error object Inheritance object ErrorResponseMessage.JsonError Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public class ErrorResponseMessage.JsonError Constructors | Edit this page View Source JsonError(Exception) JSON error object Declaration public JsonError(Exception ex) Parameters Type Name Description Exception ex Exception Properties | Edit this page View Source Message Message Declaration public string? Message { get; } Property Value Type Description string | Edit this page View Source Type Exception type Declaration public string Type { get; } Property Value Type Description string"
  },
  "api/wan24.RPC.Processing.Messages.ErrorResponseMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.ErrorResponseMessage.html",
    "title": "Class ErrorResponseMessage | wan24-RPC",
    "keywords": "Class ErrorResponseMessage RPC error response message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase ErrorResponseMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcMessage IStreamSerializer Inherited Members RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public class ErrorResponseMessage : RpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source ErrorResponseMessage() RPC error response message Declaration public ErrorResponseMessage() Remarks Constructor Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 2 Field Value Type Description int | Edit this page View Source _JError JSON error Declaration protected ErrorResponseMessage.JsonError? _JError Field Value Type Description ErrorResponseMessage.JsonError Properties | Edit this page View Source Error Error Declaration [JsonIgnore] public required Exception Error { get; set; } Property Value Type Description Exception | Edit this page View Source JError JSON error Declaration public ErrorResponseMessage.JsonError JError { get; set; } Property Value Type Description ErrorResponseMessage.JsonError | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.EventMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.EventMessage.html",
    "title": "Class EventMessage | wan24-RPC",
    "keywords": "Class EventMessage RPC event message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase SerializerRpcMessageBase EventMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcRequest IRpcMessage IStreamSerializer Inherited Members SerializerRpcMessageBase.DefaultSerializer SerializerRpcMessageBase.Serializer SerializerRpcMessageBase.SerializeObjectAsync(Stream, object, CancellationToken) SerializerRpcMessageBase.SerializeObjectListAsync(Stream, object[], CancellationToken) SerializerRpcMessageBase.DeserializeObjectAsync(Stream, Type, CancellationToken) SerializerRpcMessageBase.DeserializeObjectListAsync(Stream, Type[], CancellationToken) SerializerRpcMessageBase.GetSerializer() RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public class EventMessage : SerializerRpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcRequest, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source EventMessage() RPC event message Declaration public EventMessage() Remarks Constructor Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 4 Field Value Type Description int | Edit this page View Source _Arguments Serialized arguments Declaration protected byte[]? _Arguments Field Value Type Description byte[] Properties | Edit this page View Source Arguments Event arguments (will be disposed at the receiver side) Declaration public EventArgs? Arguments { get; set; } Property Value Type Description EventArgs | Edit this page View Source HasSerializedArguments If there are serialized event arguments that need to be deserialized Declaration public bool HasSerializedArguments { get; } Property Value Type Description bool | Edit this page View Source Name Event name Declaration [MinLength(1)] [MaxLength(255)] public required string Name { get; set; } Property Value Type Description string | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type | Edit this page View Source Waiting If the sender is waiting for the event handlers to finish Declaration public bool Waiting { get; set; } Property Value Type Description bool Methods | Edit this page View Source DeserializeArgumentsAsync(Type, CancellationToken) Deserialize the arguments Declaration public virtual Task DeserializeArgumentsAsync(Type type, CancellationToken cancellationToken = default) Parameters Type Name Description Type type Arguments type (must be am EventArgs) CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source DisposeArgumentsAsync() Dispose the arguments Declaration public virtual Task DisposeArgumentsAsync() Returns Type Description Task | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcRequest IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.IRpcMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.IRpcMessage.html",
    "title": "Interface IRpcMessage | wan24-RPC",
    "keywords": "Interface IRpcMessage Interface for a RPC message Inherited Members IStreamSerializer.Serialize(Stream) IStreamSerializer.SerializeAsync(Stream, CancellationToken) IStreamSerializer.Deserialize(Stream, int) IStreamSerializer.DeserializeAsync(Stream, int, CancellationToken) Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public interface IRpcMessage : IStreamSerializer Properties | Edit this page View Source Created Created time Declaration DateTime Created { get; } Property Value Type Description DateTime | Edit this page View Source Id Message ID Declaration long? Id { get; } Property Value Type Description long? | Edit this page View Source Meta Meta data (keys are limited to 255 characters; values are limited to 4KB string length) Declaration IReadOnlyDictionary<string, string> Meta { get; } Property Value Type Description IReadOnlyDictionary<string, string> | Edit this page View Source Type Message Type ID Declaration int Type { get; } Property Value Type Description int"
  },
  "api/wan24.RPC.Processing.Messages.IRpcRequest.html": {
    "href": "api/wan24.RPC.Processing.Messages.IRpcRequest.html",
    "title": "Interface IRpcRequest | wan24-RPC",
    "keywords": "Interface IRpcRequest Interface for a RPC request message (which can be used with a RpcProcessor.Request or a RpcProcessor.Call) Inherited Members IRpcMessage.Type IRpcMessage.Id IRpcMessage.Created IRpcMessage.Meta IStreamSerializer.Serialize(Stream) IStreamSerializer.SerializeAsync(Stream, CancellationToken) IStreamSerializer.Deserialize(Stream, int) IStreamSerializer.DeserializeAsync(Stream, int, CancellationToken) Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public interface IRpcRequest : IRpcMessage, IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.PingMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.PingMessage.html",
    "title": "Class PingMessage | wan24-RPC",
    "keywords": "Class PingMessage Ping message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase PingMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcRequest IRpcMessage IStreamSerializer Inherited Members RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) RpcMessageBase.SerializeAsync(Stream, CancellationToken) RpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public class PingMessage : RpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcRequest, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source PingMessage() Ping message Declaration public PingMessage() Remarks Constructor Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 5 Field Value Type Description int Properties | Edit this page View Source RequireId If an Id is required Declaration public override bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcRequest IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.PongMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.PongMessage.html",
    "title": "Class PongMessage | wan24-RPC",
    "keywords": "Class PongMessage Pong message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase PongMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcMessage IStreamSerializer Inherited Members RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) RpcMessageBase.SerializeAsync(Stream, CancellationToken) RpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public class PongMessage : RpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source PongMessage() Pong message Declaration public PongMessage() Remarks Constructor | Edit this page View Source PongMessage(in PingMessage) Constructor Declaration public PongMessage(in PingMessage ping) Parameters Type Name Description PingMessage ping Ping message Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 6 Field Value Type Description int Properties | Edit this page View Source RequireId If an Id is required Declaration public override bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.RequestMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.RequestMessage.html",
    "title": "Class RequestMessage | wan24-RPC",
    "keywords": "Class RequestMessage RPC request message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase SerializerRpcMessageBase RequestMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcRequest IRpcMessage IStreamSerializer Inherited Members SerializerRpcMessageBase.DefaultSerializer SerializerRpcMessageBase.Serializer SerializerRpcMessageBase.SerializeObjectAsync(Stream, object, CancellationToken) SerializerRpcMessageBase.SerializeObjectListAsync(Stream, object[], CancellationToken) SerializerRpcMessageBase.DeserializeObjectAsync(Stream, Type, CancellationToken) SerializerRpcMessageBase.DeserializeObjectListAsync(Stream, Type[], CancellationToken) SerializerRpcMessageBase.GetSerializer() RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public class RequestMessage : SerializerRpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcRequest, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source RequestMessage() RPC request message Declaration public RequestMessage() Remarks Constructor Fields | Edit this page View Source ParametersDisposed If the parameters are disposed Declaration protected bool ParametersDisposed Field Value Type Description bool | Edit this page View Source SyncObject An object for thread synchronization Declaration protected readonly object SyncObject Field Value Type Description object | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 0 Field Value Type Description int | Edit this page View Source _Parameters Serialized parameters Declaration protected byte[]? _Parameters Field Value Type Description byte[] Properties | Edit this page View Source Api API name Declaration [MinLength(1)] [MaxLength(255)] public string? Api { get; set; } Property Value Type Description string | Edit this page View Source Method API method name Declaration [MinLength(1)] [MaxLength(255)] public required string Method { get; set; } Property Value Type Description string | Edit this page View Source Parameters API method parameters Declaration [CountLimit(255)] public object?[]? Parameters { get; set; } Property Value Type Description object[] | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type | Edit this page View Source WantsReturnValue If a return value is expected Declaration public virtual bool WantsReturnValue { get; set; } Property Value Type Description bool Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source DeserializeParametersAsync(RpcApiMethodInfo, CancellationToken) Deserialize parameters for a RPC method call Declaration public virtual Task DeserializeParametersAsync(RpcApiMethodInfo method, CancellationToken cancellationToken = default) Parameters Type Name Description RpcApiMethodInfo method RPC API method CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcRequest IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.ResponseMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.ResponseMessage.html",
    "title": "Class ResponseMessage | wan24-RPC",
    "keywords": "Class ResponseMessage RPC response message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase SerializerRpcMessageBase ResponseMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcMessage IStreamSerializer Inherited Members SerializerRpcMessageBase.DefaultSerializer SerializerRpcMessageBase.Serializer SerializerRpcMessageBase.SerializeObjectAsync(Stream, object, CancellationToken) SerializerRpcMessageBase.SerializeObjectListAsync(Stream, object[], CancellationToken) SerializerRpcMessageBase.DeserializeObjectAsync(Stream, Type, CancellationToken) SerializerRpcMessageBase.DeserializeObjectListAsync(Stream, Type[], CancellationToken) SerializerRpcMessageBase.GetSerializer() RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public class ResponseMessage : SerializerRpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source ResponseMessage() RPC response message Declaration public ResponseMessage() Remarks Constructor Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 1 Field Value Type Description int | Edit this page View Source _ReturnValue Serialized return value Declaration protected byte[]? _ReturnValue Field Value Type Description byte[] Properties | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source ReturnValue Return value Declaration public object? ReturnValue { get; set; } Property Value Type Description object | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source DeserializeReturnValueAsync(Type, CancellationToken) Deserialize the return value Declaration public virtual Task DeserializeReturnValueAsync(Type type, CancellationToken cancellationToken = default) Parameters Type Name Description Type type Expected return value type CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source DisposeReturnValueAsync() Dispose the return value Declaration public virtual Task DisposeReturnValueAsync() Returns Type Description Task | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.RpcMessageBase.html": {
    "href": "api/wan24.RPC.Processing.Messages.RpcMessageBase.html",
    "title": "Class RpcMessageBase | wan24-RPC",
    "keywords": "Class RpcMessageBase Base type for a RPC message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase CancelMessage ErrorResponseMessage PingMessage PongMessage ScopeMessageBase SerializerRpcMessageBase Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcMessage IStreamSerializer Inherited Members StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public abstract class RpcMessageBase : StreamSerializerBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source RpcMessageBase() Base type for a RPC message Declaration protected RpcMessageBase() Remarks Constructor Fields | Edit this page View Source VERSION Object version number Declaration public const int VERSION = 1 Field Value Type Description int Properties | Edit this page View Source Created Created time Declaration [JsonIgnore] public DateTime Created { get; } Property Value Type Description DateTime | Edit this page View Source HlObjectVersion Higher level object version Declaration [JsonIgnore] public virtual int HlObjectVersion { get; } Property Value Type Description int | Edit this page View Source Id Message ID Declaration [RequiredIf(\"RequireId\", new object?[] { true })] public long? Id { get; set; } Property Value Type Description long? | Edit this page View Source Meta Meta data (keys are limited to 255 characters; values are limited to 4KB string length) Declaration [CountLimit(255)] [ItemStringLength(255, ItemValidationTargets.Key)] [ItemStringLength(4095, ItemValidationTargets.Item)] public IReadOnlyDictionary<string, string> Meta { get; set; } Property Value Type Description IReadOnlyDictionary<string, string> | Edit this page View Source MinHlObjectVersion Minimum supported higher level object version (see SerializedHlObjectVersion) Declaration protected virtual int? MinHlObjectVersion { get; } Property Value Type Description int? | Edit this page View Source PeerRpcVersion Peers RPC protocol version (from the RpcVersion for serializing the peers readable object structure) Declaration [JsonIgnore] public required int PeerRpcVersion { get; init; } Property Value Type Description int | Edit this page View Source RequireId If an Id is required Declaration [JsonIgnore] public virtual bool RequireId { get; } Property Value Type Description bool | Edit this page View Source SerializedHlObjectVersion Deserialized higher level object version Declaration protected int? SerializedHlObjectVersion { get; } Property Value Type Description int? | Edit this page View Source Type Message Type ID Declaration [JsonIgnore] public abstract int Type { get; } Property Value Type Description int Methods | Edit this page View Source Deserialize(Stream, int) Deserialize Declaration protected override sealed void Deserialize(Stream stream, int version) Parameters Type Name Description Stream stream Stream int version Serializer version Overrides StreamSerializerBase.Deserialize(Stream, int) | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides StreamSerializerBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source Serialize(Stream) Serialize Declaration protected override sealed void Serialize(Stream stream) Parameters Type Name Description Stream stream Stream Overrides StreamSerializerBase.Serialize(Stream) | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides StreamSerializerBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.RpcMessages.html": {
    "href": "api/wan24.RPC.Processing.Messages.RpcMessages.html",
    "title": "Class RpcMessages | wan24-RPC",
    "keywords": "Class RpcMessages Registered RPC message types Inheritance object RpcMessages Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public static class RpcMessages Methods | Edit this page View Source Get(in int) Get a RPC message type Declaration public static Type? Get(in int id) Parameters Type Name Description int id RPC message type ID Returns Type Description Type RPC message type | Edit this page View Source Register<T>(in int) Register a RPC message type Declaration public static void Register<T>(in int id) where T : IRpcMessage, new() Parameters Type Name Description int id RPC message type ID Type Parameters Name Description T RPC message type"
  },
  "api/wan24.RPC.Processing.Messages.Scopes.IRpcRemoteScopeMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.Scopes.IRpcRemoteScopeMessage.html",
    "title": "Interface IRpcRemoteScopeMessage | wan24-RPC",
    "keywords": "Interface IRpcRemoteScopeMessage Interface for a RPC remote scope message Inherited Members IRpcScopeMessage.FailOnScopeNotFound IRpcScopeMessage.WarnOnScopeNotFound IRpcScopeMessage.ScopeId IRpcMessage.Type IRpcMessage.Id IRpcMessage.Created IRpcMessage.Meta IStreamSerializer.Serialize(Stream) IStreamSerializer.SerializeAsync(Stream, CancellationToken) IStreamSerializer.Deserialize(Stream, int) IStreamSerializer.DeserializeAsync(Stream, int, CancellationToken) Namespace: wan24.RPC.Processing.Messages.Scopes Assembly: wan24RPC.dll Syntax public interface IRpcRemoteScopeMessage : IRpcScopeMessage, IRpcMessage, IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.Scopes.IRpcScopeDiscardedMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.Scopes.IRpcScopeDiscardedMessage.html",
    "title": "Interface IRpcScopeDiscardedMessage | wan24-RPC",
    "keywords": "Interface IRpcScopeDiscardedMessage Interface for a RPC scope discarded message Inherited Members IRpcScopeMessage.FailOnScopeNotFound IRpcScopeMessage.WarnOnScopeNotFound IRpcScopeMessage.ScopeId IRpcMessage.Type IRpcMessage.Id IRpcMessage.Created IRpcMessage.Meta IStreamSerializer.Serialize(Stream) IStreamSerializer.SerializeAsync(Stream, CancellationToken) IStreamSerializer.Deserialize(Stream, int) IStreamSerializer.DeserializeAsync(Stream, int, CancellationToken) Namespace: wan24.RPC.Processing.Messages.Scopes Assembly: wan24RPC.dll Syntax public interface IRpcScopeDiscardedMessage : IRpcScopeMessage, IRpcMessage, IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.Scopes.IRpcScopeEventMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.Scopes.IRpcScopeEventMessage.html",
    "title": "Interface IRpcScopeEventMessage | wan24-RPC",
    "keywords": "Interface IRpcScopeEventMessage Interface for a RPC scope event message Inherited Members IRpcScopeMessage.FailOnScopeNotFound IRpcScopeMessage.WarnOnScopeNotFound IRpcScopeMessage.ScopeId IRpcMessage.Type IRpcMessage.Id IRpcMessage.Created IRpcMessage.Meta IStreamSerializer.Serialize(Stream) IStreamSerializer.SerializeAsync(Stream, CancellationToken) IStreamSerializer.Deserialize(Stream, int) IStreamSerializer.DeserializeAsync(Stream, int, CancellationToken) Namespace: wan24.RPC.Processing.Messages.Scopes Assembly: wan24RPC.dll Syntax public interface IRpcScopeEventMessage : IRpcScopeMessage, IRpcRequest, IRpcMessage, IStreamSerializer Properties | Edit this page View Source Arguments Event arguments (will be disposed at the receiver side) Declaration EventArgs? Arguments { get; } Property Value Type Description EventArgs | Edit this page View Source Name Event name Declaration string Name { get; } Property Value Type Description string | Edit this page View Source Waiting If the sender is waiting for the event handlers to finish Declaration bool Waiting { get; } Property Value Type Description bool Methods | Edit this page View Source DeserializeArgumentsAsync(Type, CancellationToken) Deserialize the arguments Declaration Task DeserializeArgumentsAsync(Type type, CancellationToken cancellationToken = default) Parameters Type Name Description Type type Arguments type (must be am EventArgs) CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source DisposeArgumentsAsync() Dispose the arguments Declaration Task DisposeArgumentsAsync() Returns Type Description Task"
  },
  "api/wan24.RPC.Processing.Messages.Scopes.IRpcScopeMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.Scopes.IRpcScopeMessage.html",
    "title": "Interface IRpcScopeMessage | wan24-RPC",
    "keywords": "Interface IRpcScopeMessage RPC message for a scope Inherited Members IRpcMessage.Type IRpcMessage.Id IRpcMessage.Created IRpcMessage.Meta IStreamSerializer.Serialize(Stream) IStreamSerializer.SerializeAsync(Stream, CancellationToken) IStreamSerializer.Deserialize(Stream, int) IStreamSerializer.DeserializeAsync(Stream, int, CancellationToken) Namespace: wan24.RPC.Processing.Messages.Scopes Assembly: wan24RPC.dll Syntax public interface IRpcScopeMessage : IRpcMessage, IStreamSerializer Properties | Edit this page View Source FailOnScopeNotFound If to fail the RPC processor if a message for an unknown scope was received Declaration bool FailOnScopeNotFound { get; } Property Value Type Description bool | Edit this page View Source ScopeId Scope ID Declaration long ScopeId { get; } Property Value Type Description long | Edit this page View Source WarnOnScopeNotFound If to warn if a message for an unknown scope was received Declaration bool WarnOnScopeNotFound { get; } Property Value Type Description bool"
  },
  "api/wan24.RPC.Processing.Messages.Scopes.RemoteScopeDiscardedMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.Scopes.RemoteScopeDiscardedMessage.html",
    "title": "Class RemoteScopeDiscardedMessage | wan24-RPC",
    "keywords": "Class RemoteScopeDiscardedMessage RPC remote scope was discarded (informational message to the scope master) Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase ScopeMessageBase RemoteScopeDiscardedMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcScopeMessage IRpcMessage IStreamSerializer Inherited Members ScopeMessageBase.FailOnScopeNotFound ScopeMessageBase.WarnOnScopeNotFound ScopeMessageBase.ScopeId ScopeMessageBase.SerializeAsync(Stream, CancellationToken) ScopeMessageBase.DeserializeAsync(Stream, int, CancellationToken) RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Scopes Assembly: wan24RPC.dll Syntax public class RemoteScopeDiscardedMessage : ScopeMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcScopeMessage, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source RemoteScopeDiscardedMessage() RPC remote scope was discarded (informational message to the scope master) Declaration public RemoteScopeDiscardedMessage() Remarks Constructor | Edit this page View Source RemoteScopeDiscardedMessage(in RpcRemoteScopeBase) Constructor Declaration public RemoteScopeDiscardedMessage(in RpcProcessor.RpcRemoteScopeBase scope) Parameters Type Name Description RpcProcessor.RpcRemoteScopeBase scope Discarded remote RPC scope Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 8 Field Value Type Description int Properties | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcScopeMessage IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.Scopes.RemoteScopeErrorMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.Scopes.RemoteScopeErrorMessage.html",
    "title": "Class RemoteScopeErrorMessage | wan24-RPC",
    "keywords": "Class RemoteScopeErrorMessage RPC scope error message for the scope master Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase ScopeMessageBase RemoteScopeErrorMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcScopeMessage IRpcMessage IStreamSerializer Inherited Members ScopeMessageBase.FailOnScopeNotFound ScopeMessageBase.WarnOnScopeNotFound ScopeMessageBase.ScopeId RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Scopes Assembly: wan24RPC.dll Syntax public class RemoteScopeErrorMessage : ScopeMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcScopeMessage, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source RemoteScopeErrorMessage() RPC scope error message for the scope master Declaration public RemoteScopeErrorMessage() Remarks Constructor | Edit this page View Source RemoteScopeErrorMessage(in RpcRemoteScopeBase) Constructor Declaration public RemoteScopeErrorMessage(in RpcProcessor.RpcRemoteScopeBase scope) Parameters Type Name Description RpcProcessor.RpcRemoteScopeBase scope Scope Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 12 Field Value Type Description int | Edit this page View Source _JError JSON error Declaration protected ErrorResponseMessage.JsonError? _JError Field Value Type Description ErrorResponseMessage.JsonError Properties | Edit this page View Source Error Error Declaration [JsonIgnore] public required Exception Error { get; set; } Property Value Type Description Exception | Edit this page View Source JError JSON error Declaration public ErrorResponseMessage.JsonError JError { get; set; } Property Value Type Description ErrorResponseMessage.JsonError | Edit this page View Source RequireId If an Id is required Declaration public override bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides ScopeMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides ScopeMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcScopeMessage IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.Scopes.RemoteScopeEventMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.Scopes.RemoteScopeEventMessage.html",
    "title": "Class RemoteScopeEventMessage | wan24-RPC",
    "keywords": "Class RemoteScopeEventMessage RPC scope event message for the scope master Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase ScopeMessageBase SerializerScopeMessageBase RemoteScopeEventMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcScopeEventMessage IRpcScopeMessage IRpcRequest IRpcMessage IStreamSerializer Inherited Members SerializerScopeMessageBase.DefaultSerializer SerializerScopeMessageBase.Serializer SerializerScopeMessageBase.SerializeObjectAsync(Stream, object, CancellationToken) SerializerScopeMessageBase.SerializeObjectListAsync(Stream, object[], CancellationToken) SerializerScopeMessageBase.DeserializeObjectAsync(Stream, Type, CancellationToken) SerializerScopeMessageBase.DeserializeObjectListAsync(Stream, Type[], CancellationToken) SerializerScopeMessageBase.GetSerializer() ScopeMessageBase.FailOnScopeNotFound ScopeMessageBase.WarnOnScopeNotFound ScopeMessageBase.ScopeId RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Scopes Assembly: wan24RPC.dll Syntax public class RemoteScopeEventMessage : SerializerScopeMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcScopeEventMessage, IRpcScopeMessage, IRpcRequest, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source RemoteScopeEventMessage() RPC scope event message for the scope master Declaration public RemoteScopeEventMessage() Remarks Constructor | Edit this page View Source RemoteScopeEventMessage(in RpcRemoteScopeBase) Constructor Declaration public RemoteScopeEventMessage(in RpcProcessor.RpcRemoteScopeBase scope) Parameters Type Name Description RpcProcessor.RpcRemoteScopeBase scope Scope Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 14 Field Value Type Description int | Edit this page View Source _Arguments Serialized arguments Declaration protected byte[]? _Arguments Field Value Type Description byte[] Properties | Edit this page View Source Arguments Event arguments (will be disposed at the receiver side) Declaration public EventArgs? Arguments { get; set; } Property Value Type Description EventArgs | Edit this page View Source Name Event name Declaration [MinLength(1)] [MaxLength(255)] public required string Name { get; set; } Property Value Type Description string | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type | Edit this page View Source Waiting If the sender is waiting for the event handlers to finish Declaration public bool Waiting { get; set; } Property Value Type Description bool Methods | Edit this page View Source DeserializeArgumentsAsync(Type, CancellationToken) Deserialize the arguments Declaration public virtual Task DeserializeArgumentsAsync(Type type, CancellationToken cancellationToken = default) Parameters Type Name Description Type type Arguments type (must be am EventArgs) CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerScopeMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source DisposeArgumentsAsync() Dispose the arguments Declaration public virtual Task DisposeArgumentsAsync() Returns Type Description Task | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerScopeMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcScopeEventMessage IRpcScopeMessage IRpcRequest IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.Scopes.RemoteScopeTriggerMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.Scopes.RemoteScopeTriggerMessage.html",
    "title": "Class RemoteScopeTriggerMessage | wan24-RPC",
    "keywords": "Class RemoteScopeTriggerMessage Trigger a RPC scope at the master Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase ScopeMessageBase RemoteScopeTriggerMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcScopeMessage IRpcMessage IStreamSerializer Inherited Members ScopeMessageBase.FailOnScopeNotFound ScopeMessageBase.WarnOnScopeNotFound ScopeMessageBase.ScopeId ScopeMessageBase.SerializeAsync(Stream, CancellationToken) ScopeMessageBase.DeserializeAsync(Stream, int, CancellationToken) RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Scopes Assembly: wan24RPC.dll Syntax public class RemoteScopeTriggerMessage : ScopeMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcScopeMessage, IRpcMessage, IStreamSerializer Constructors | Edit this page View Source RemoteScopeTriggerMessage() Trigger a RPC scope at the master Declaration public RemoteScopeTriggerMessage() | Edit this page View Source RemoteScopeTriggerMessage(in RpcRemoteScopeBase) Constructor Declaration public RemoteScopeTriggerMessage(in RpcProcessor.RpcRemoteScopeBase scope) Parameters Type Name Description RpcProcessor.RpcRemoteScopeBase scope Triggered remote RPC scope Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 10 Field Value Type Description int Properties | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcScopeMessage IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.Scopes.ScopeDiscardedMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.Scopes.ScopeDiscardedMessage.html",
    "title": "Class ScopeDiscardedMessage | wan24-RPC",
    "keywords": "Class ScopeDiscardedMessage RPC scope was discarded (informational message to the scope consumer) Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase ScopeMessageBase ScopeDiscardedMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcRemoteScopeMessage IRpcScopeMessage IRpcMessage IStreamSerializer Inherited Members ScopeMessageBase.FailOnScopeNotFound ScopeMessageBase.WarnOnScopeNotFound ScopeMessageBase.ScopeId ScopeMessageBase.SerializeAsync(Stream, CancellationToken) ScopeMessageBase.DeserializeAsync(Stream, int, CancellationToken) RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Scopes Assembly: wan24RPC.dll Syntax public class ScopeDiscardedMessage : ScopeMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcRemoteScopeMessage, IRpcScopeMessage, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source ScopeDiscardedMessage() RPC scope was discarded (informational message to the scope consumer) Declaration public ScopeDiscardedMessage() Remarks Constructor | Edit this page View Source ScopeDiscardedMessage(in RpcScopeBase) Constructor Declaration public ScopeDiscardedMessage(in RpcProcessor.RpcScopeBase scope) Parameters Type Name Description RpcProcessor.RpcScopeBase scope Discarded RPC scope Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 7 Field Value Type Description int Properties | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcRemoteScopeMessage IRpcScopeMessage IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.Scopes.ScopeErrorMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.Scopes.ScopeErrorMessage.html",
    "title": "Class ScopeErrorMessage | wan24-RPC",
    "keywords": "Class ScopeErrorMessage RPC scope error message for the consumer Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase ScopeMessageBase ScopeErrorMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcRemoteScopeMessage IRpcScopeMessage IRpcMessage IStreamSerializer Inherited Members ScopeMessageBase.FailOnScopeNotFound ScopeMessageBase.WarnOnScopeNotFound ScopeMessageBase.ScopeId RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Scopes Assembly: wan24RPC.dll Syntax public class ScopeErrorMessage : ScopeMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcRemoteScopeMessage, IRpcScopeMessage, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source ScopeErrorMessage() RPC scope error message for the consumer Declaration public ScopeErrorMessage() Remarks Constructor | Edit this page View Source ScopeErrorMessage(in RpcScopeBase) Constructor Declaration public ScopeErrorMessage(in RpcProcessor.RpcScopeBase scope) Parameters Type Name Description RpcProcessor.RpcScopeBase scope Scope Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 11 Field Value Type Description int | Edit this page View Source _JError JSON error Declaration protected ErrorResponseMessage.JsonError? _JError Field Value Type Description ErrorResponseMessage.JsonError Properties | Edit this page View Source Error Error Declaration [JsonIgnore] public required Exception Error { get; set; } Property Value Type Description Exception | Edit this page View Source JError JSON error Declaration public ErrorResponseMessage.JsonError JError { get; set; } Property Value Type Description ErrorResponseMessage.JsonError | Edit this page View Source RequireId If an Id is required Declaration public override bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides ScopeMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides ScopeMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcRemoteScopeMessage IRpcScopeMessage IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.Scopes.ScopeEventMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.Scopes.ScopeEventMessage.html",
    "title": "Class ScopeEventMessage | wan24-RPC",
    "keywords": "Class ScopeEventMessage RPC scope event message for the consumer Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase ScopeMessageBase SerializerScopeMessageBase ScopeEventMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcScopeEventMessage IRpcRequest IRpcRemoteScopeMessage IRpcScopeMessage IRpcMessage IStreamSerializer Inherited Members SerializerScopeMessageBase.DefaultSerializer SerializerScopeMessageBase.Serializer SerializerScopeMessageBase.SerializeObjectAsync(Stream, object, CancellationToken) SerializerScopeMessageBase.SerializeObjectListAsync(Stream, object[], CancellationToken) SerializerScopeMessageBase.DeserializeObjectAsync(Stream, Type, CancellationToken) SerializerScopeMessageBase.DeserializeObjectListAsync(Stream, Type[], CancellationToken) SerializerScopeMessageBase.GetSerializer() ScopeMessageBase.FailOnScopeNotFound ScopeMessageBase.WarnOnScopeNotFound ScopeMessageBase.ScopeId RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Scopes Assembly: wan24RPC.dll Syntax public class ScopeEventMessage : SerializerScopeMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcScopeEventMessage, IRpcRequest, IRpcRemoteScopeMessage, IRpcScopeMessage, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source ScopeEventMessage() RPC scope event message for the consumer Declaration public ScopeEventMessage() Remarks Constructor | Edit this page View Source ScopeEventMessage(in RpcScopeBase) Constructor Declaration public ScopeEventMessage(in RpcProcessor.RpcScopeBase scope) Parameters Type Name Description RpcProcessor.RpcScopeBase scope Scope Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 13 Field Value Type Description int | Edit this page View Source _Arguments Serialized arguments Declaration protected byte[]? _Arguments Field Value Type Description byte[] Properties | Edit this page View Source Arguments Event arguments (will be disposed at the receiver side) Declaration public EventArgs? Arguments { get; set; } Property Value Type Description EventArgs | Edit this page View Source Name Event name Declaration [MinLength(1)] [MaxLength(255)] public required string Name { get; set; } Property Value Type Description string | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type | Edit this page View Source Waiting If the sender is waiting for the event handlers to finish Declaration public bool Waiting { get; set; } Property Value Type Description bool Methods | Edit this page View Source DeserializeArgumentsAsync(Type, CancellationToken) Deserialize the arguments Declaration public virtual Task DeserializeArgumentsAsync(Type type, CancellationToken cancellationToken = default) Parameters Type Name Description Type type Arguments type (must be am EventArgs) CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerScopeMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source DisposeArgumentsAsync() Dispose the arguments Declaration public virtual Task DisposeArgumentsAsync() Returns Type Description Task | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerScopeMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcScopeEventMessage IRpcRequest IRpcRemoteScopeMessage IRpcScopeMessage IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.Scopes.ScopeMessageBase.html": {
    "href": "api/wan24.RPC.Processing.Messages.Scopes.ScopeMessageBase.html",
    "title": "Class ScopeMessageBase | wan24-RPC",
    "keywords": "Class ScopeMessageBase Base class for a RPC scope message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase ScopeMessageBase RemoteScopeDiscardedMessage RemoteScopeErrorMessage RemoteScopeTriggerMessage ScopeDiscardedMessage ScopeErrorMessage ScopeTriggerMessage SerializerScopeMessageBase Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcScopeMessage IRpcMessage IStreamSerializer Inherited Members RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.Type RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.RequireId RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Scopes Assembly: wan24RPC.dll Syntax public abstract class ScopeMessageBase : RpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcScopeMessage, IRpcMessage, IStreamSerializer Properties | Edit this page View Source FailOnScopeNotFound If to fail the RPC processor if a message for an unknown scope was received Declaration public virtual bool FailOnScopeNotFound { get; } Property Value Type Description bool | Edit this page View Source ScopeId Scope ID Declaration [Range(1, 9.223372036854776E+18)] public required long ScopeId { get; set; } Property Value Type Description long | Edit this page View Source WarnOnScopeNotFound If to warn if a message for an unknown scope was received Declaration public virtual bool WarnOnScopeNotFound { get; } Property Value Type Description bool Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcScopeMessage IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.Scopes.ScopeTriggerMessage.html": {
    "href": "api/wan24.RPC.Processing.Messages.Scopes.ScopeTriggerMessage.html",
    "title": "Class ScopeTriggerMessage | wan24-RPC",
    "keywords": "Class ScopeTriggerMessage Trigger a RPC scope at the consumer Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase ScopeMessageBase ScopeTriggerMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcRemoteScopeMessage IRpcScopeMessage IRpcMessage IStreamSerializer Inherited Members ScopeMessageBase.FailOnScopeNotFound ScopeMessageBase.WarnOnScopeNotFound ScopeMessageBase.ScopeId ScopeMessageBase.SerializeAsync(Stream, CancellationToken) ScopeMessageBase.DeserializeAsync(Stream, int, CancellationToken) RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Scopes Assembly: wan24RPC.dll Syntax public class ScopeTriggerMessage : ScopeMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcRemoteScopeMessage, IRpcScopeMessage, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source ScopeTriggerMessage() Trigger a RPC scope at the consumer Declaration public ScopeTriggerMessage() Remarks Constructor | Edit this page View Source ScopeTriggerMessage(in RpcScopeBase) Constructor Declaration public ScopeTriggerMessage(in RpcProcessor.RpcScopeBase scope) Parameters Type Name Description RpcProcessor.RpcScopeBase scope Triggered RPC scope Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 9 Field Value Type Description int Properties | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcRemoteScopeMessage IRpcScopeMessage IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.Scopes.SerializerScopeMessageBase.html": {
    "href": "api/wan24.RPC.Processing.Messages.Scopes.SerializerScopeMessageBase.html",
    "title": "Class SerializerScopeMessageBase | wan24-RPC",
    "keywords": "Class SerializerScopeMessageBase Base type for a variable serializer RPC scope message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase ScopeMessageBase SerializerScopeMessageBase RemoteScopeEventMessage ScopeEventMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcScopeMessage IRpcMessage IStreamSerializer Inherited Members ScopeMessageBase.FailOnScopeNotFound ScopeMessageBase.WarnOnScopeNotFound ScopeMessageBase.ScopeId RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.Type RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.RequireId RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Scopes Assembly: wan24RPC.dll Syntax public abstract class SerializerScopeMessageBase : ScopeMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcScopeMessage, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source SerializerScopeMessageBase() Base type for a variable serializer RPC scope message Declaration protected SerializerScopeMessageBase() Remarks Constructor Properties | Edit this page View Source DefaultSerializer Default serializer ID Declaration public static int DefaultSerializer { get; set; } Property Value Type Description int | Edit this page View Source Serializer Serializer ID Declaration [JsonIgnore] public int Serializer { get; set; } Property Value Type Description int Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides ScopeMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source DeserializeObjectAsync(Stream, Type, CancellationToken) Deserialize an object Declaration protected Task<object?> DeserializeObjectAsync(Stream stream, Type type, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream Type type Object type CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Object | Edit this page View Source DeserializeObjectListAsync(Stream, Type[], CancellationToken) Deserialize an object list Declaration protected Task<object?[]?> DeserializeObjectListAsync(Stream stream, Type[] types, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream Type[] types Types CancellationToken cancellationToken Cancellation token Returns Type Description Task<object[]> Object list | Edit this page View Source GetSerializer() Get the serializer Declaration protected RpcSerializer GetSerializer() Returns Type Description RpcSerializer Serializer | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides ScopeMessageBase.SerializeAsync(Stream, CancellationToken) | Edit this page View Source SerializeObjectAsync(Stream, object?, CancellationToken) Serialize an object Declaration protected Task SerializeObjectAsync(Stream stream, object? obj, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream object obj Object CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source SerializeObjectListAsync(Stream, object?[]?, CancellationToken) Serialize an object list Declaration protected Task SerializeObjectListAsync(Stream stream, object?[]? objList, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream object[] objList Object list CancellationToken cancellationToken Cancellation token Returns Type Description Task Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcScopeMessage IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.Scopes.html": {
    "href": "api/wan24.RPC.Processing.Messages.Scopes.html",
    "title": "Namespace wan24.RPC.Processing.Messages.Scopes | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Processing.Messages.Scopes Classes RemoteScopeDiscardedMessage RPC remote scope was discarded (informational message to the scope master) RemoteScopeErrorMessage RPC scope error message for the scope master RemoteScopeEventMessage RPC scope event message for the scope master RemoteScopeTriggerMessage Trigger a RPC scope at the master ScopeDiscardedMessage RPC scope was discarded (informational message to the scope consumer) ScopeErrorMessage RPC scope error message for the consumer ScopeEventMessage RPC scope event message for the consumer ScopeMessageBase Base class for a RPC scope message ScopeTriggerMessage Trigger a RPC scope at the consumer SerializerScopeMessageBase Base type for a variable serializer RPC scope message Interfaces IRpcRemoteScopeMessage Interface for a RPC remote scope message IRpcScopeDiscardedMessage Interface for a RPC scope discarded message IRpcScopeEventMessage Interface for a RPC scope event message IRpcScopeMessage RPC message for a scope"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.BinarySerializer.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.BinarySerializer.html",
    "title": "Class BinarySerializer | wan24-RPC",
    "keywords": "Class BinarySerializer Binary RPC serializer Inheritance object BinarySerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public static class BinarySerializer Fields | Edit this page View Source SERIALIZER Serializer ID Declaration public const int SERIALIZER = 0 Field Value Type Description int Methods | Edit this page View Source CanSerialize(Type?) Determine if a type can be serialized Declaration public static bool CanSerialize(Type? type) Parameters Type Name Description Type type Type Returns Type Description bool If the type can be serialized | Edit this page View Source ObjectDeserializerAsync(Stream, Type, CancellationToken) Object deserializer Declaration public static Task<object?> ObjectDeserializerAsync(Stream stream, Type type, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream Type type Object type CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Object | Edit this page View Source ObjectListDeserializerAsync(Stream, Type[], CancellationToken) Object list deserializer Declaration public static Task<object?[]?> ObjectListDeserializerAsync(Stream stream, Type[] types, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream Type[] types Object types CancellationToken cancellationToken Cancellation token Returns Type Description Task<object[]> Object list | Edit this page View Source ObjectListSerializerAsync(object?[]?, Stream, CancellationToken) Object list serializer Declaration public static Task ObjectListSerializerAsync(object?[]? objList, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object[] objList Object list Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source ObjectSerializerAsync(object?, Stream, CancellationToken) Object serializer Declaration public static Task ObjectSerializerAsync(object? obj, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object obj Object Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.JsonSerializer.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.JsonSerializer.html",
    "title": "Class JsonSerializer | wan24-RPC",
    "keywords": "Class JsonSerializer JSON RPC serializer Inheritance object JsonSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public static class JsonSerializer Fields | Edit this page View Source SERIALIZER Serializer ID Declaration public const int SERIALIZER = 1 Field Value Type Description int Methods | Edit this page View Source CanSerialize(Type?) Determine if a type can be serialized Declaration public static bool CanSerialize(Type? type) Parameters Type Name Description Type type Type Returns Type Description bool If the type can be serialized | Edit this page View Source ObjectDeserializerAsync(Stream, Type, CancellationToken) Object deserializer Declaration public static Task<object?> ObjectDeserializerAsync(Stream stream, Type type, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream Type type Object type CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Object | Edit this page View Source ObjectListDeserializerAsync(Stream, Type[], CancellationToken) Object list deserializer Declaration public static Task<object?[]?> ObjectListDeserializerAsync(Stream stream, Type[] types, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream Type[] types Object types CancellationToken cancellationToken Cancellation token Returns Type Description Task<object[]> Object list | Edit this page View Source ObjectListSerializerAsync(object?[]?, Stream, CancellationToken) Object list serializer Declaration public static Task ObjectListSerializerAsync(object?[]? objList, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object[] objList Object list Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source ObjectSerializerAsync(object?, Stream, CancellationToken) Object serializer Declaration public static Task ObjectSerializerAsync(object? obj, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object obj Object Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.MixedSerializer.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.MixedSerializer.html",
    "title": "Class MixedSerializer | wan24-RPC",
    "keywords": "Class MixedSerializer Mixed RPC serializer (chooses between binary and JSON serialization, prefers binary) Inheritance object MixedSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public static class MixedSerializer Fields | Edit this page View Source SERIALIZER Serializer ID Declaration public const int SERIALIZER = 2 Field Value Type Description int Methods | Edit this page View Source CanSerialize(Type?) Determine if a type can be serialized Declaration public static bool CanSerialize(Type? type) Parameters Type Name Description Type type Type Returns Type Description bool If the type can be serialized | Edit this page View Source ObjectDeserializerAsync(Stream, Type, CancellationToken) Object deserializer Declaration public static Task<object?> ObjectDeserializerAsync(Stream stream, Type type, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream Type type Object type CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Object | Edit this page View Source ObjectListDeserializerAsync(Stream, Type[], CancellationToken) Object list deserializer Declaration public static Task<object?[]?> ObjectListDeserializerAsync(Stream stream, Type[] types, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream Type[] types Object types CancellationToken cancellationToken Cancellation token Returns Type Description Task<object[]> Object list | Edit this page View Source ObjectListSerializerAsync(object?[]?, Stream, CancellationToken) Object list serializer Declaration public static Task ObjectListSerializerAsync(object?[]? objList, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object[] objList Object list Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source ObjectSerializerAsync(object?, Stream, CancellationToken) Object serializer Declaration public static Task ObjectSerializerAsync(object? obj, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object obj Object Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.CanSerialize_Delegate.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.CanSerialize_Delegate.html",
    "title": "Delegate RpcSerializer.CanSerialize_Delegate | wan24-RPC",
    "keywords": "Delegate RpcSerializer.CanSerialize_Delegate Delegate for a RPC serializer method to determine if a type can be serialized Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public delegate bool RpcSerializer.CanSerialize_Delegate(Type? type) Parameters Type Name Description Type type Type Returns Type Description bool If the type can be serialized"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.ObjectDeserializer_Delegate.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.ObjectDeserializer_Delegate.html",
    "title": "Delegate RpcSerializer.ObjectDeserializer_Delegate | wan24-RPC",
    "keywords": "Delegate RpcSerializer.ObjectDeserializer_Delegate Delegate for an object deserializer Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public delegate Task<object?> RpcSerializer.ObjectDeserializer_Delegate(Stream stream, Type type, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream Type type Object type CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Object"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.ObjectListDeserializer_Delegate.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.ObjectListDeserializer_Delegate.html",
    "title": "Delegate RpcSerializer.ObjectListDeserializer_Delegate | wan24-RPC",
    "keywords": "Delegate RpcSerializer.ObjectListDeserializer_Delegate Delegate for an object list deserializer Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public delegate Task<object?[]?> RpcSerializer.ObjectListDeserializer_Delegate(Stream stream, Type[] types, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream Type[] types Object types CancellationToken cancellationToken Cancellation token Returns Type Description Task<object[]> Object list"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.ObjectListSerializer_Delegate.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.ObjectListSerializer_Delegate.html",
    "title": "Delegate RpcSerializer.ObjectListSerializer_Delegate | wan24-RPC",
    "keywords": "Delegate RpcSerializer.ObjectListSerializer_Delegate Delegate for an object list serializer Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public delegate Task RpcSerializer.ObjectListSerializer_Delegate(object?[]? objList, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object[] objList Object list Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Delegate for an object list serializer"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.ObjectSerializer_Delegate.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.ObjectSerializer_Delegate.html",
    "title": "Delegate RpcSerializer.ObjectSerializer_Delegate | wan24-RPC",
    "keywords": "Delegate RpcSerializer.ObjectSerializer_Delegate Delegate for an object serializer Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public delegate Task RpcSerializer.ObjectSerializer_Delegate(object? obj, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object obj Object Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Delegate for an object serializer"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.TypeValidationEventArgs.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.TypeValidationEventArgs.html",
    "title": "Class RpcSerializer.TypeValidationEventArgs | wan24-RPC",
    "keywords": "Class RpcSerializer.TypeValidationEventArgs Arguments for the OnTypeValidation event Inheritance object EventArgs RpcSerializer.TypeValidationEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public class RpcSerializer.TypeValidationEventArgs : EventArgs Remarks Constructor Constructors | Edit this page View Source TypeValidationEventArgs(in Type, in Type) Arguments for the OnTypeValidation event Declaration public TypeValidationEventArgs(in Type expected, in Type serialized) Parameters Type Name Description Type expected Expected type Type serialized Serialized type Remarks Constructor Properties | Edit this page View Source Expected Expected type Declaration public Type Expected { get; } Property Value Type Description Type | Edit this page View Source IsValid If the serialized type is valid Declaration public bool IsValid { get; set; } Property Value Type Description bool | Edit this page View Source Serialized Serialized type Declaration public Type Serialized { get; } Property Value Type Description Type"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.TypeValidation_Delegate.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.TypeValidation_Delegate.html",
    "title": "Delegate RpcSerializer.TypeValidation_Delegate | wan24-RPC",
    "keywords": "Delegate RpcSerializer.TypeValidation_Delegate Delegate for a OnTypeValidation event handler Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public delegate void RpcSerializer.TypeValidation_Delegate(RpcSerializer.TypeValidationEventArgs e) Parameters Type Name Description RpcSerializer.TypeValidationEventArgs e Arguments"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.RpcSerializer.html",
    "title": "Class RpcSerializer | wan24-RPC",
    "keywords": "Class RpcSerializer RPC serializer Inheritance object RpcSerializer Implements IEquatable<RpcSerializer> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public sealed record RpcSerializer : IEquatable<RpcSerializer> Remarks Constructor Constructors | Edit this page View Source RpcSerializer() RPC serializer Declaration public RpcSerializer() Remarks Constructor Properties | Edit this page View Source CanSerialize Determine if a type can be serialized Declaration public required RpcSerializer.CanSerialize_Delegate CanSerialize { get; init; } Property Value Type Description RpcSerializer.CanSerialize_Delegate | Edit this page View Source DefaultOptIn Opt-in deserializable types? Declaration public static bool DefaultOptIn { get; set; } Property Value Type Description bool | Edit this page View Source ObjectDeserializer Object deserializer Declaration public required RpcSerializer.ObjectDeserializer_Delegate ObjectDeserializer { get; init; } Property Value Type Description RpcSerializer.ObjectDeserializer_Delegate | Edit this page View Source ObjectListDeserializer Object list deserializer Declaration public required RpcSerializer.ObjectListDeserializer_Delegate ObjectListDeserializer { get; init; } Property Value Type Description RpcSerializer.ObjectListDeserializer_Delegate | Edit this page View Source ObjectListSerializer Object list serializer Declaration public required RpcSerializer.ObjectListSerializer_Delegate ObjectListSerializer { get; init; } Property Value Type Description RpcSerializer.ObjectListSerializer_Delegate | Edit this page View Source ObjectSerializer Object serializer Declaration public required RpcSerializer.ObjectSerializer_Delegate ObjectSerializer { get; init; } Property Value Type Description RpcSerializer.ObjectSerializer_Delegate | Edit this page View Source OptIn Opt-in deserializable types? Declaration public bool? OptIn { get; init; } Property Value Type Description bool? Methods | Edit this page View Source Get(in int) Get a serializer Declaration public static RpcSerializer? Get(in int id) Parameters Type Name Description int id ID Returns Type Description RpcSerializer Serializer | Edit this page View Source GetIsOptIn() Get if opt-in is required for deserializable types Declaration public bool GetIsOptIn() Returns Type Description bool If opt-in is required | Edit this page View Source RaiseOnTypeValidation(in Type, in Type) Raise the OnTypeValidation event Declaration public static bool RaiseOnTypeValidation(in Type expected, in Type serialized) Parameters Type Name Description Type expected Expected type Type serialized Serialized type Returns Type Description bool | Edit this page View Source Register(in int, in RpcSerializer) Register a serializer Declaration public static void Register(in int id, in RpcSerializer serializer) Parameters Type Name Description int id ID RpcSerializer serializer Serializer | Edit this page View Source Remove(in int) Remove a serializer Declaration public static void Remove(in int id) Parameters Type Name Description int id ID Events | Edit this page View Source OnTypeValidation Raise on type validation, if the serialized type doesn't match the expected type Declaration public static event RpcSerializer.TypeValidation_Delegate? OnTypeValidation Event Type Type Description RpcSerializer.TypeValidation_Delegate Implements IEquatable<T>"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.SerializerExtensions.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.SerializerExtensions.html",
    "title": "Class SerializerExtensions | wan24-RPC",
    "keywords": "Class SerializerExtensions Stream extensions Inheritance object SerializerExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages.Serialization Assembly: wan24RPC.dll Syntax public static class SerializerExtensions Methods | Edit this page View Source ReadRpcMessageAsync(Stream, int?, Type?, bool, CancellationToken) Read a RPC message Declaration public static ValueTask<IRpcMessage> ReadRpcMessageAsync(this Stream stream, int? serializerVersion = null, Type? expectedType = null, bool strictType = false, CancellationToken cancellationToken = default) Parameters Type Name Description Stream stream Stream int? serializerVersion Serializer version Type expectedType Expected RPC message type bool strictType Expect strictly the given RPC message type CancellationToken cancellationToken Cancellation token Returns Type Description ValueTask<IRpcMessage> RPC message | Edit this page View Source ReadRpcMessageAsync<T>(Stream, int?, bool, CancellationToken) Read a RPC message Declaration public static ValueTask<T> ReadRpcMessageAsync<T>(this Stream stream, int? serializerVersion = null, bool strictType = false, CancellationToken cancellationToken = default) where T : IRpcMessage, new() Parameters Type Name Description Stream stream Stream int? serializerVersion Serializer version bool strictType Expect strictly the given RPC message type CancellationToken cancellationToken Cancellation token Returns Type Description ValueTask<T> RPC message Type Parameters Name Description T Expected RPC message type | Edit this page View Source WriteRpcMessageAsync(Stream, IRpcMessage, CancellationToken) Write a RPC message Declaration public static ValueTask WriteRpcMessageAsync(this Stream stream, IRpcMessage message, CancellationToken cancellationToken = default) Parameters Type Name Description Stream stream Stream IRpcMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description ValueTask"
  },
  "api/wan24.RPC.Processing.Messages.Serialization.html": {
    "href": "api/wan24.RPC.Processing.Messages.Serialization.html",
    "title": "Namespace wan24.RPC.Processing.Messages.Serialization | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Processing.Messages.Serialization Classes BinarySerializer Binary RPC serializer JsonSerializer JSON RPC serializer MixedSerializer Mixed RPC serializer (chooses between binary and JSON serialization, prefers binary) RpcSerializer RPC serializer RpcSerializer.TypeValidationEventArgs Arguments for the OnTypeValidation event SerializerExtensions Stream extensions Delegates RpcSerializer.CanSerialize_Delegate Delegate for a RPC serializer method to determine if a type can be serialized RpcSerializer.ObjectDeserializer_Delegate Delegate for an object deserializer RpcSerializer.ObjectListDeserializer_Delegate Delegate for an object list deserializer RpcSerializer.ObjectListSerializer_Delegate Delegate for an object list serializer RpcSerializer.ObjectSerializer_Delegate Delegate for an object serializer RpcSerializer.TypeValidation_Delegate Delegate for a OnTypeValidation event handler"
  },
  "api/wan24.RPC.Processing.Messages.SerializerRpcMessageBase.html": {
    "href": "api/wan24.RPC.Processing.Messages.SerializerRpcMessageBase.html",
    "title": "Class SerializerRpcMessageBase | wan24-RPC",
    "keywords": "Class SerializerRpcMessageBase Base type for a variable serializer RPC message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase SerializerRpcMessageBase EventMessage RequestMessage ResponseMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IRpcMessage IStreamSerializer Inherited Members RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.Type RpcMessageBase.PeerRpcVersion RpcMessageBase.Id RpcMessageBase.RequireId RpcMessageBase.Created RpcMessageBase.Meta RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Messages Assembly: wan24RPC.dll Syntax public abstract class SerializerRpcMessageBase : RpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IRpcMessage, IStreamSerializer Remarks Constructor Constructors | Edit this page View Source SerializerRpcMessageBase() Base type for a variable serializer RPC message Declaration protected SerializerRpcMessageBase() Remarks Constructor Properties | Edit this page View Source DefaultSerializer Default serializer ID Declaration public static int DefaultSerializer { get; set; } Property Value Type Description int | Edit this page View Source Serializer Serializer ID Declaration [JsonIgnore] public int Serializer { get; set; } Property Value Type Description int Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source DeserializeObjectAsync(Stream, Type, CancellationToken) Deserialize an object Declaration protected Task<object?> DeserializeObjectAsync(Stream stream, Type type, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream Type type Object type CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Object | Edit this page View Source DeserializeObjectListAsync(Stream, Type[], CancellationToken) Deserialize an object list Declaration protected Task<object?[]?> DeserializeObjectListAsync(Stream stream, Type[] types, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream Type[] types Types CancellationToken cancellationToken Cancellation token Returns Type Description Task<object[]> Object list | Edit this page View Source GetSerializer() Get the serializer Declaration protected RpcSerializer GetSerializer() Returns Type Description RpcSerializer Serializer | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcMessageBase.SerializeAsync(Stream, CancellationToken) | Edit this page View Source SerializeObjectAsync(Stream, object?, CancellationToken) Serialize an object Declaration protected Task SerializeObjectAsync(Stream stream, object? obj, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream object obj Object CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source SerializeObjectListAsync(Stream, object?[]?, CancellationToken) Serialize an object list Declaration protected Task SerializeObjectListAsync(Stream stream, object?[]? objList, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream object[] objList Object list CancellationToken cancellationToken Cancellation token Returns Type Description Task Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion IRpcMessage wan24.StreamSerializerExtensions.IStreamSerializer"
  },
  "api/wan24.RPC.Processing.Messages.html": {
    "href": "api/wan24.RPC.Processing.Messages.html",
    "title": "Namespace wan24.RPC.Processing.Messages | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Processing.Messages Classes CancelMessage RPC cancel message (cancels a RPC call) ErrorResponseMessage RPC error response message ErrorResponseMessage.JsonError JSON error object EventMessage RPC event message PingMessage Ping message PongMessage Pong message RequestMessage RPC request message ResponseMessage RPC response message RpcMessageBase Base type for a RPC message RpcMessages Registered RPC message types SerializerRpcMessageBase Base type for a variable serializer RPC message Interfaces IRpcMessage Interface for a RPC message IRpcRequest Interface for a RPC request message (which can be used with a RpcProcessor.Request or a RpcProcessor.Call)"
  },
  "api/wan24.RPC.Processing.Options.KeepAliveOptions.html": {
    "href": "api/wan24.RPC.Processing.Options.KeepAliveOptions.html",
    "title": "Class KeepAliveOptions | wan24-RPC",
    "keywords": "Class KeepAliveOptions RPC keep alive options Inheritance object KeepAliveOptions Implements IEquatable<KeepAliveOptions> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Options Assembly: wan24RPC.dll Syntax public record KeepAliveOptions : IEquatable<KeepAliveOptions> Constructors | Edit this page View Source KeepAliveOptions() RPC keep alive options Declaration public KeepAliveOptions() Properties | Edit this page View Source PeerTimeout Peer heartbeat timeout (hard timeout; only effective when Timeout was set to a value != Zero) Declaration public TimeSpan PeerTimeout { get; init; } Property Value Type Description TimeSpan | Edit this page View Source Timeout Heartbeat timeout (soft timeout) Declaration public required TimeSpan Timeout { get; init; } Property Value Type Description TimeSpan Implements IEquatable<T>"
  },
  "api/wan24.RPC.Processing.Options.MessagePriorityOptions.html": {
    "href": "api/wan24.RPC.Processing.Options.MessagePriorityOptions.html",
    "title": "Class MessagePriorityOptions | wan24-RPC",
    "keywords": "Class MessagePriorityOptions RPC message priority options Inheritance object MessagePriorityOptions Implements IEquatable<MessagePriorityOptions> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Options Assembly: wan24RPC.dll Syntax public record MessagePriorityOptions : IEquatable<MessagePriorityOptions> Constructors | Edit this page View Source MessagePriorityOptions() RPC message priority options Declaration public MessagePriorityOptions() Properties | Edit this page View Source Chunk Stream chunk message priority Declaration public int Chunk { get; init; } Property Value Type Description int | Edit this page View Source Event Event message priority Declaration public int Event { get; init; } Property Value Type Description int | Edit this page View Source Rpc RPC message (call/request/response/error) priority Declaration public int Rpc { get; init; } Property Value Type Description int Implements IEquatable<T>"
  },
  "api/wan24.RPC.Processing.Options.ParallelQueueOptions.html": {
    "href": "api/wan24.RPC.Processing.Options.ParallelQueueOptions.html",
    "title": "Class ParallelQueueOptions | wan24-RPC",
    "keywords": "Class ParallelQueueOptions RPC parallel queue options Inheritance object ParallelQueueOptions Implements IEquatable<ParallelQueueOptions> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Options Assembly: wan24RPC.dll Syntax public record ParallelQueueOptions : IEquatable<ParallelQueueOptions> Remarks Constructor Constructors | Edit this page View Source ParallelQueueOptions() RPC parallel queue options Declaration public ParallelQueueOptions() Remarks Constructor Properties | Edit this page View Source Capacity Capacity Declaration public required int Capacity { get; init; } Property Value Type Description int | Edit this page View Source Threads Number of threads that process queued items in parallel Declaration public required int Threads { get; init; } Property Value Type Description int Implements IEquatable<T>"
  },
  "api/wan24.RPC.Processing.Options.StreamScopeOptions.html": {
    "href": "api/wan24.RPC.Processing.Options.StreamScopeOptions.html",
    "title": "Class StreamScopeOptions | wan24-RPC",
    "keywords": "Class StreamScopeOptions RPC stream scope options Inheritance object StreamScopeOptions Implements IEquatable<StreamScopeOptions> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Options Assembly: wan24RPC.dll Syntax public record StreamScopeOptions : IEquatable<StreamScopeOptions> Constructors | Edit this page View Source StreamScopeOptions() RPC stream scope options Declaration public StreamScopeOptions() Properties | Edit this page View Source CompressionBufferSize Compression buffer size in bytes Declaration public int CompressionBufferSize { get; init; } Property Value Type Description int | Edit this page View Source DecompressionBufferSize Decompression buffer size in bytes Declaration public int DecompressionBufferSize { get; init; } Property Value Type Description int | Edit this page View Source DefaultCompression Default compression options for streams Declaration public CompressionOptions? DefaultCompression { get; init; } Property Value Type Description CompressionOptions | Edit this page View Source MaxStreamContentLength Max. stream content length in bytes Declaration public static int MaxStreamContentLength { get; set; } Property Value Type Description int Implements IEquatable<T>"
  },
  "api/wan24.RPC.Processing.Options.html": {
    "href": "api/wan24.RPC.Processing.Options.html",
    "title": "Namespace wan24.RPC.Processing.Options | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Processing.Options Classes KeepAliveOptions RPC keep alive options MessagePriorityOptions RPC message priority options ParallelQueueOptions RPC parallel queue options StreamScopeOptions RPC stream scope options"
  },
  "api/wan24.RPC.Processing.Parameters.DisposableRpcScopeParameterBase.html": {
    "href": "api/wan24.RPC.Processing.Parameters.DisposableRpcScopeParameterBase.html",
    "title": "Class DisposableRpcScopeParameterBase | wan24-RPC",
    "keywords": "Class DisposableRpcScopeParameterBase Base class for a disposable RPC scope parameter Inheritance object DisposableRecordBase DisposableRpcScopeParameterBase Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IRpcScopeParameter IEquatable<DisposableRpcScopeParameterBase> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing.Parameters Assembly: wan24RPC.dll Syntax public abstract record DisposableRpcScopeParameterBase : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IRpcScopeParameter, IEquatable<DisposableRpcScopeParameterBase> Constructors | Edit this page View Source DisposableRpcScopeParameterBase() Base class for a disposable RPC scope parameter Declaration protected DisposableRpcScopeParameterBase() Properties | Edit this page View Source DisposeScopeValue Dispose the scope value (NOT the Value!) when disposing? Declaration public bool DisposeScopeValue { get; set; } Property Value Type Description bool | Edit this page View Source DisposeScopeValueOnError If to dispose the scope value (NOT the Value!) on error Declaration public bool DisposeScopeValueOnError { get; set; } Property Value Type Description bool | Edit this page View Source InformMasterWhenDisposing Inform the scope master when disposing Declaration public bool InformMasterWhenDisposing { get; set; } Property Value Type Description bool | Edit this page View Source IsError If there was an error Declaration public bool IsError { get; protected set; } Property Value Type Description bool | Edit this page View Source Key Scope key Declaration public string? Key { get; init; } Property Value Type Description string | Edit this page View Source Processor RPC processor Declaration public RpcProcessor? Processor { get; protected set; } Property Value Type Description RpcProcessor | Edit this page View Source ReplaceExistingScope Replace an existing keyed scope (will be disposed)? Declaration public bool ReplaceExistingScope { get; set; } Property Value Type Description bool | Edit this page View Source ShouldDisposeScopeValue If the scope value (NOT the Value!) should be disposed at the current state Declaration public virtual bool ShouldDisposeScopeValue { get; } Property Value Type Description bool | Edit this page View Source StoreScope Store the scope? Declaration public bool StoreScope { get; init; } Property Value Type Description bool | Edit this page View Source Type RPC scope type (see RpcScopeTypes) Declaration public required int Type { get; init; } Property Value Type Description int | Edit this page View Source Value RPC scope value (DTO) Declaration public RpcScopeValue? Value { get; protected set; } Property Value Type Description RpcScopeValue Methods | Edit this page View Source CreateValueAsync(RpcProcessor, long, CancellationToken) Create the RPC scope value (DTO) Declaration public virtual Task<RpcScopeValue> CreateValueAsync(RpcProcessor processor, long id, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor processor RPC processor long id Scope ID CancellationToken cancellationToken Cancellation token Returns Type Description Task<RpcScopeValue> RPC scope value | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableRecordBase.DisposeCore() | Edit this page View Source DisposeScopeValueAsync() Dispose the scope value (NOT the Value!), if it should be disposed Declaration public abstract Task DisposeScopeValueAsync() Returns Type Description Task | Edit this page View Source SetIsErrorAsync() Set the IsError value to true and perform required actions Declaration public virtual Task SetIsErrorAsync() Returns Type Description Task Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IRpcScopeParameter IEquatable<T>"
  },
  "api/wan24.RPC.Processing.Parameters.IRpcScopeParameter.html": {
    "href": "api/wan24.RPC.Processing.Parameters.IRpcScopeParameter.html",
    "title": "Interface IRpcScopeParameter | wan24-RPC",
    "keywords": "Interface IRpcScopeParameter Interface for a RPC scope parameter Namespace: wan24.RPC.Processing.Parameters Assembly: wan24RPC.dll Syntax public interface IRpcScopeParameter Properties | Edit this page View Source DisposeScopeValue Dispose the scope value (NOT the Value!) when disposing? Declaration bool DisposeScopeValue { get; } Property Value Type Description bool | Edit this page View Source DisposeScopeValueOnError If to dispose the scope value (NOT the Value!) on error Declaration bool DisposeScopeValueOnError { get; } Property Value Type Description bool | Edit this page View Source InformMasterWhenDisposing Inform the scope master when disposing Declaration bool InformMasterWhenDisposing { get; } Property Value Type Description bool | Edit this page View Source IsError If there was an error Declaration bool IsError { get; } Property Value Type Description bool | Edit this page View Source Key Scope key Declaration string? Key { get; } Property Value Type Description string | Edit this page View Source Processor RPC processor Declaration RpcProcessor? Processor { get; } Property Value Type Description RpcProcessor | Edit this page View Source ReplaceExistingScope Replace an existing keyed scope (will be disposed)? Declaration bool ReplaceExistingScope { get; } Property Value Type Description bool | Edit this page View Source ShouldDisposeScopeValue If the scope value (NOT the Value!) should be disposed at the current state Declaration bool ShouldDisposeScopeValue { get; } Property Value Type Description bool | Edit this page View Source StoreScope Store the scope? Declaration bool StoreScope { get; } Property Value Type Description bool | Edit this page View Source Type RPC scope type (see RpcScopeTypes) Declaration int Type { get; } Property Value Type Description int | Edit this page View Source Value RPC scope value (DTO) Declaration RpcScopeValue? Value { get; } Property Value Type Description RpcScopeValue Methods | Edit this page View Source CreateValueAsync(RpcProcessor, long, CancellationToken) Create the RPC scope value (DTO) Declaration Task<RpcScopeValue> CreateValueAsync(RpcProcessor processor, long id, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor processor RPC processor long id Scope ID CancellationToken cancellationToken Cancellation token Returns Type Description Task<RpcScopeValue> RPC scope value | Edit this page View Source DisposeScopeValueAsync() Dispose the scope value (NOT the Value!), if it should be disposed Declaration Task DisposeScopeValueAsync() Returns Type Description Task | Edit this page View Source SetIsErrorAsync() Set the IsError value to true and perform required actions Declaration Task SetIsErrorAsync() Returns Type Description Task"
  },
  "api/wan24.RPC.Processing.Parameters.RpcScopeParameterBase.html": {
    "href": "api/wan24.RPC.Processing.Parameters.RpcScopeParameterBase.html",
    "title": "Class RpcScopeParameterBase | wan24-RPC",
    "keywords": "Class RpcScopeParameterBase Base class for a RPC scope parameter Inheritance object RpcScopeParameterBase Implements IRpcScopeParameter IEquatable<RpcScopeParameterBase> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Parameters Assembly: wan24RPC.dll Syntax public abstract record RpcScopeParameterBase : IRpcScopeParameter, IEquatable<RpcScopeParameterBase> Constructors | Edit this page View Source RpcScopeParameterBase() Base class for a RPC scope parameter Declaration protected RpcScopeParameterBase() Properties | Edit this page View Source DisposeScopeValue Dispose the scope value (NOT the Value!) when disposing? Declaration public bool DisposeScopeValue { get; set; } Property Value Type Description bool | Edit this page View Source DisposeScopeValueOnError If to dispose the scope value (NOT the Value!) on error Declaration public bool DisposeScopeValueOnError { get; set; } Property Value Type Description bool | Edit this page View Source InformMasterWhenDisposing Inform the scope master when disposing Declaration public bool InformMasterWhenDisposing { get; set; } Property Value Type Description bool | Edit this page View Source IsError If there was an error Declaration public bool IsError { get; protected set; } Property Value Type Description bool | Edit this page View Source Key Scope key Declaration public string? Key { get; init; } Property Value Type Description string | Edit this page View Source Processor RPC processor Declaration public RpcProcessor? Processor { get; protected set; } Property Value Type Description RpcProcessor | Edit this page View Source ReplaceExistingScope Replace an existing keyed scope (will be disposed)? Declaration public bool ReplaceExistingScope { get; set; } Property Value Type Description bool | Edit this page View Source ShouldDisposeScopeValue If the scope value (NOT the Value!) should be disposed at the current state Declaration public virtual bool ShouldDisposeScopeValue { get; } Property Value Type Description bool | Edit this page View Source StoreScope Store the scope? Declaration public bool StoreScope { get; init; } Property Value Type Description bool | Edit this page View Source Type RPC scope type (see RpcScopeTypes) Declaration public required int Type { get; init; } Property Value Type Description int | Edit this page View Source Value RPC scope value (DTO) Declaration public RpcScopeValue? Value { get; protected set; } Property Value Type Description RpcScopeValue Methods | Edit this page View Source CreateValueAsync(RpcProcessor, long, CancellationToken) Create the RPC scope value (DTO) Declaration public virtual Task<RpcScopeValue> CreateValueAsync(RpcProcessor processor, long id, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor processor RPC processor long id Scope ID CancellationToken cancellationToken Cancellation token Returns Type Description Task<RpcScopeValue> RPC scope value | Edit this page View Source DisposeScopeValueAsync() Dispose the scope value (NOT the Value!), if it should be disposed Declaration public abstract Task DisposeScopeValueAsync() Returns Type Description Task | Edit this page View Source SetIsErrorAsync() Set the IsError value to true and perform required actions Declaration public virtual Task SetIsErrorAsync() Returns Type Description Task Implements IRpcScopeParameter IEquatable<T>"
  },
  "api/wan24.RPC.Processing.Parameters.html": {
    "href": "api/wan24.RPC.Processing.Parameters.html",
    "title": "Namespace wan24.RPC.Processing.Parameters | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Processing.Parameters Classes DisposableRpcScopeParameterBase Base class for a disposable RPC scope parameter RpcScopeParameterBase Base class for a RPC scope parameter Interfaces IRpcScopeParameter Interface for a RPC scope parameter"
  },
  "api/wan24.RPC.Processing.RpcContext.Unauthorized_Delegate.html": {
    "href": "api/wan24.RPC.Processing.RpcContext.Unauthorized_Delegate.html",
    "title": "Delegate RpcContext.Unauthorized_Delegate | wan24-RPC",
    "keywords": "Delegate RpcContext.Unauthorized_Delegate Unauthorized handler delegate Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public delegate Task RpcContext.Unauthorized_Delegate(RpcContext context, RpcAuthorizationAttributeBase authZ) Parameters Type Name Description RpcContext context RPC context RpcAuthorizationAttributeBase authZ Authorization attribute Returns Type Description Task Unauthorized handler delegate"
  },
  "api/wan24.RPC.Processing.RpcContext.html": {
    "href": "api/wan24.RPC.Processing.RpcContext.html",
    "title": "Class RpcContext | wan24-RPC",
    "keywords": "Class RpcContext RPC context Inheritance object DisposableRecordBase RpcContext Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcContext> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public record RpcContext : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcContext> Remarks Constructor Constructors | Edit this page View Source RpcContext() RPC context Declaration public RpcContext() Remarks Constructor Properties | Edit this page View Source API RPC API Declaration public RpcApiInfo API { get; } Property Value Type Description RpcApiInfo | Edit this page View Source Cancellation Cancellation Declaration public CancellationToken Cancellation { get; init; } Property Value Type Description CancellationToken | Edit this page View Source Created Created time Declaration public DateTime Created { get; init; } Property Value Type Description DateTime | Edit this page View Source Done Done time Declaration public DateTime Done { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Message RPC request Declaration public required RequestMessage Message { get; init; } Property Value Type Description RequestMessage | Edit this page View Source Method RPC API method Declaration public required RpcApiMethodInfo Method { get; init; } Property Value Type Description RpcApiMethodInfo | Edit this page View Source Processor RPC processor Declaration public required RpcProcessor Processor { get; init; } Property Value Type Description RpcProcessor | Edit this page View Source Services Service provider (will be disposed) Declaration public required ScopedDiHelper Services { get; init; } Property Value Type Description ScopedDiHelper | Edit this page View Source UnauthorizedHandler Unauthorized context handler Declaration public static RpcContext.Unauthorized_Delegate? UnauthorizedHandler { get; set; } Property Value Type Description RpcContext.Unauthorized_Delegate Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableRecordBase.DisposeCore() | Edit this page View Source SetDone() Set done Declaration public virtual void SetDone() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcEvent.EventHandler_Delegate.html": {
    "href": "api/wan24.RPC.Processing.RpcEvent.EventHandler_Delegate.html",
    "title": "Delegate RpcEvent.EventHandler_Delegate | wan24-RPC",
    "keywords": "Delegate RpcEvent.EventHandler_Delegate Delegate for an event handler Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public delegate Task RpcEvent.EventHandler_Delegate(RpcEvent eventInfo, EventMessage message, CancellationToken cancellationToken) Parameters Type Name Description RpcEvent eventInfo Event informations EventMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task Delegate for an event handler"
  },
  "api/wan24.RPC.Processing.RpcEvent.html": {
    "href": "api/wan24.RPC.Processing.RpcEvent.html",
    "title": "Class RpcEvent | wan24-RPC",
    "keywords": "Class RpcEvent RPC event Inheritance object RpcEvent Implements IEquatable<RpcEvent> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public record RpcEvent : IEquatable<RpcEvent> Fields | Edit this page View Source SyncObject An object for thread synchronization Declaration protected readonly object SyncObject Field Value Type Description object Properties | Edit this page View Source Arguments Event arguments type (must be a EventArgs) Declaration public Type? Arguments { get; init; } Property Value Type Description Type | Edit this page View Source FirstRaised First raised time Declaration public DateTime FirstRaised { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Handler Event handler Declaration public required RpcEvent.EventHandler_Delegate Handler { get; init; } Property Value Type Description RpcEvent.EventHandler_Delegate | Edit this page View Source LastRaised Last raised time Declaration public DateTime LastRaised { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Name Event name Declaration public required string Name { get; init; } Property Value Type Description string | Edit this page View Source Processor Processor Declaration public required RpcProcessor Processor { get; init; } Property Value Type Description RpcProcessor | Edit this page View Source RaiseCount Number of times the event was raised Declaration public long RaiseCount { get; protected set; } Property Value Type Description long Methods | Edit this page View Source RaiseEventAsync(EventMessage, CancellationToken) Raise the event Declaration public virtual Task RaiseEventAsync(EventMessage message, CancellationToken cancellationToken) Parameters Type Name Description EventMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task Implements IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessor.Call.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.Call.html",
    "title": "Class RpcProcessor.Call | wan24-RPC",
    "keywords": "Class RpcProcessor.Call RPC call (context) Inheritance object DisposableRecordBase RpcProcessor.Call Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcProcessor.Call> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax protected record RpcProcessor.Call : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcProcessor.Call> Remarks Constructor Constructors | Edit this page View Source Call() RPC call (context) Declaration public Call() Remarks Constructor Properties | Edit this page View Source Cancellation Cancellation (will be disposed) Declaration public CancellationTokenSource Cancellation { get; } Property Value Type Description CancellationTokenSource | Edit this page View Source Completion Completion Declaration public TaskCompletionSource<object?> Completion { get; } Property Value Type Description TaskCompletionSource<object> | Edit this page View Source Context Context Declaration public RpcContext? Context { get; set; } Property Value Type Description RpcContext | Edit this page View Source Created Created time Declaration public DateTime Created { get; } Property Value Type Description DateTime | Edit this page View Source DidReturn If the called API method returned without error Declaration public bool DidReturn { get; set; } Property Value Type Description bool | Edit this page View Source Done Done time Declaration public DateTime Done { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Id Message ID Declaration public long Id { get; } Property Value Type Description long | Edit this page View Source IsDone If done Declaration public bool IsDone { get; } Property Value Type Description bool | Edit this page View Source Message Message Declaration public required IRpcRequest Message { get; init; } Property Value Type Description IRpcRequest | Edit this page View Source ParameterScopes Remote scopes from parameters Declaration public HashSet<RpcProcessor.RpcRemoteScopeBase> ParameterScopes { get; } Property Value Type Description HashSet<RpcProcessor.RpcRemoteScopeBase> | Edit this page View Source Processor RPC Processor Declaration public required RpcProcessor Processor { get; init; } Property Value Type Description RpcProcessor | Edit this page View Source ReturnScope Scope return value Declaration public RpcProcessor.RpcScopeBase? ReturnScope { get; set; } Property Value Type Description RpcProcessor.RpcScopeBase | Edit this page View Source Runtime Runtime Declaration public TimeSpan Runtime { get; } Property Value Type Description TimeSpan | Edit this page View Source WasProcessing If the call was processing (the targeted API method has been called) Declaration public bool WasProcessing { get; set; } Property Value Type Description bool Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableRecordBase.DisposeCore() | Edit this page View Source SetDone() Set done Declaration public virtual void SetDone() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessor.CallQueue.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.CallQueue.html",
    "title": "Class RpcProcessor.CallQueue | wan24-RPC",
    "keywords": "Class RpcProcessor.CallQueue RPC call queue Inheritance object DisposableBase HostedServiceBase QueueWorker ParallelQueueWorker ParallelItemQueueWorkerBase<RpcProcessor.Call> RpcProcessor.CallQueue Implements IWillDispose IExportUserActions IParallelQueueWorker IItemQueueWorker<RpcProcessor.Call> IQueueWorker IServiceWorkerStatus IServiceWorker IHostedService IDisposableObject IDisposable IAsyncDisposable IStatusProvider IProducerConsumerCollection<QueueWorker.Task_Delegate> IEnumerable<QueueWorker.Task_Delegate> ICollection IEnumerable Inherited Members ParallelItemQueueWorkerBase<RpcProcessor.Call>.EnqueueAsync(RpcProcessor.Call, CancellationToken) ParallelItemQueueWorkerBase<RpcProcessor.Call>.TryEnqueue(RpcProcessor.Call) ParallelItemQueueWorkerBase<RpcProcessor.Call>.EnqueueRangeAsync(IEnumerable<RpcProcessor.Call>, CancellationToken) ParallelItemQueueWorkerBase<RpcProcessor.Call>.EnqueueRangeAsync(IAsyncEnumerable<RpcProcessor.Call>, CancellationToken) ParallelQueueWorker.Busy ParallelQueueWorker.Processing ParallelQueueWorker.WorkerSync ParallelQueueWorker.ProcessCount ParallelQueueWorker.WaitBoring(TimeSpan) ParallelQueueWorker.WaitBoringAsync(TimeSpan) ParallelQueueWorker.WaitBoring(CancellationToken) ParallelQueueWorker.WaitBoringAsync(CancellationToken) ParallelQueueWorker.AfterStopAsync(CancellationToken) ParallelQueueWorker.WorkerAsync() ParallelQueueWorker.Process(QueueWorker.Task_Delegate, CancellationToken) ParallelQueueWorker.Dispose(bool) ParallelQueueWorker.DisposeCore() ParallelQueueWorker.Threads ParallelQueueWorker.State QueueWorker.Queue QueueWorker.EnqueueAsync(QueueWorker.Task_Delegate, CancellationToken) QueueWorker.TryEnqueue(QueueWorker.Task_Delegate, CancellationToken) QueueWorker.EnqueueRangeAsync(IEnumerable<QueueWorker.Task_Delegate>, CancellationToken) QueueWorker.EnqueueRangeAsync(IAsyncEnumerable<QueueWorker.Task_Delegate>, CancellationToken) QueueWorker.TryAdd(QueueWorker.Task_Delegate) QueueWorker.TryTake(out QueueWorker.Task_Delegate) QueueWorker.CopyTo(QueueWorker.Task_Delegate[], int) QueueWorker.ToArray() QueueWorker.GetEnumerator() QueueWorker.CopyTo(Array, int) QueueWorker.GUID QueueWorker.Queued QueueWorker.Count QueueWorker.IsSynchronized QueueWorker.SyncRoot HostedServiceBase.Sync HostedServiceBase.RunEvent HostedServiceBase.PauseEvent HostedServiceBase.StopTask HostedServiceBase.Cancellation HostedServiceBase.ServiceTask HostedServiceBase._LastException HostedServiceBase.StartAsync(CancellationToken) HostedServiceBase.StopAsync(CancellationToken) HostedServiceBase.PauseAsync(CancellationToken) HostedServiceBase.ResumeAsync(CancellationToken) HostedServiceBase.ToString() HostedServiceBase.BeforeStartAsync(CancellationToken) HostedServiceBase.StartingAsync(CancellationToken) HostedServiceBase.AfterStartAsync(CancellationToken) HostedServiceBase.BeforeStopAsync(CancellationToken) HostedServiceBase.StoppingAsync(CancellationToken) HostedServiceBase.BeforePauseAsync(CancellationToken) HostedServiceBase.PausingAsync(CancellationToken) HostedServiceBase.AfterPauseAsync(CancellationToken) HostedServiceBase.BeforeResumeAsync(CancellationToken) HostedServiceBase.ResumingAsync(CancellationToken) HostedServiceBase.AfterResumeAsync(CancellationToken) HostedServiceBase.RunServiceAsync() HostedServiceBase.EnsureNotCanceled(in bool) HostedServiceBase.EnsureRunning(in bool) HostedServiceBase.RaiseOnException() HostedServiceBase.CanPause HostedServiceBase.IsRunning HostedServiceBase.IsPaused HostedServiceBase.Started HostedServiceBase.Paused HostedServiceBase.Stopped HostedServiceBase.IsStopping HostedServiceBase.LastException HostedServiceBase.StoppedExceptional HostedServiceBase.Name HostedServiceBase.ErrorSource HostedServiceBase.CancelToken HostedServiceBase.OnException DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax protected class RpcProcessor.CallQueue : ParallelItemQueueWorkerBase<RpcProcessor.Call>, IWillDispose, IExportUserActions, IParallelQueueWorker, IItemQueueWorker<RpcProcessor.Call>, IQueueWorker, IServiceWorkerStatus, IServiceWorker, IHostedService, IDisposableObject, IDisposable, IAsyncDisposable, IStatusProvider, IProducerConsumerCollection<QueueWorker.Task_Delegate>, IEnumerable<QueueWorker.Task_Delegate>, ICollection, IEnumerable Remarks Constructor Constructors | Edit this page View Source CallQueue(in RpcProcessor) RPC call queue Declaration public CallQueue(in RpcProcessor processor) Parameters Type Name Description RpcProcessor processor RPC processor Remarks Constructor Properties | Edit this page View Source Logger Logger Declaration public virtual ILogger? Logger { get; } Property Value Type Description ILogger | Edit this page View Source Processor RPC processor Declaration public RpcProcessor Processor { get; } Property Value Type Description RpcProcessor Methods | Edit this page View Source AuthorizeContextAsync(Call, RequestMessage, RpcApiMethodInfo, RpcContext) Authorize the RPC context (should set a Completion exception on error) Declaration protected virtual Task<bool> AuthorizeContextAsync(RpcProcessor.Call item, RequestMessage request, RpcApiMethodInfo method, RpcContext context) Parameters Type Name Description RpcProcessor.Call item RPC call RequestMessage request RPC request message RpcApiMethodInfo method RPC API method RpcContext context Context Returns Type Description Task<bool> If authorized | Edit this page View Source FindApiMethodAsync(Call, RequestMessage) Find the API method to use (should set a Completion exception on error) Declaration protected virtual Task<RpcApiMethodInfo?> FindApiMethodAsync(RpcProcessor.Call item, RequestMessage request) Parameters Type Name Description RpcProcessor.Call item RPC call RequestMessage request RPC request message Returns Type Description Task<RpcApiMethodInfo> API method (validated to be callable using the RPC request informations) | Edit this page View Source GetFinalParameterValueAsync(Call, RequestMessage, RpcContext, RpcApiMethodParameterInfo, int, object?) Get the final parameter value for the API method call Declaration protected virtual Task<object?> GetFinalParameterValueAsync(RpcProcessor.Call item, RequestMessage request, RpcContext context, RpcApiMethodParameterInfo parameter, int index, object? value) Parameters Type Name Description RpcProcessor.Call item RPC call RequestMessage request RPC request message RpcContext context Context RpcApiMethodParameterInfo parameter API method parameter int index Zero based index of the RPC call parameter (or -1, if it's not a RPC servable parameter) object value Current parameter value Returns Type Description Task<object> Parameter value to use | Edit this page View Source GetFinalReturnValueAsync(Call, RequestMessage, RpcContext, RpcApiMethodInfo, object?) Get the final return value of a method request which will be sent back to the peer Declaration protected virtual Task<object?> GetFinalReturnValueAsync(RpcProcessor.Call item, RequestMessage request, RpcContext context, RpcApiMethodInfo method, object? returnValue) Parameters Type Name Description RpcProcessor.Call item RPC call RequestMessage request RPC request message RpcContext context Context RpcApiMethodInfo method API method object returnValue Return value Returns Type Description Task<object> Final return value | Edit this page View Source GetParameterValueAsync(Call, RequestMessage, RpcContext, RpcApiMethodParameterInfo, int) Get a parameter value for the API method call Declaration protected virtual Task<object?> GetParameterValueAsync(RpcProcessor.Call item, RequestMessage request, RpcContext context, RpcApiMethodParameterInfo parameter, int index) Parameters Type Name Description RpcProcessor.Call item RPC call RequestMessage request RPC request message RpcContext context Context RpcApiMethodParameterInfo parameter API method parameter int index Zero based index of the RPC call parameter (or -1, if it's not a RPC servable parameter) Returns Type Description Task<object> Parameter value to use | Edit this page View Source ProcessItem(Call, CancellationToken) Process one item Declaration protected override Task ProcessItem(RpcProcessor.Call item, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor.Call item Item to process CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides ParallelItemQueueWorkerBase<RpcProcessor.Call>.ProcessItem(RpcProcessor.Call, CancellationToken) Implements wan24.Core.IWillDispose wan24.Core.IExportUserActions wan24.Core.IParallelQueueWorker wan24.Core.IItemQueueWorker<T> wan24.Core.IQueueWorker wan24.Core.IServiceWorkerStatus wan24.Core.IServiceWorker IHostedService wan24.Core.IDisposableObject IDisposable IAsyncDisposable wan24.Core.IStatusProvider IProducerConsumerCollection<T> IEnumerable<T> ICollection IEnumerable"
  },
  "api/wan24.RPC.Processing.RpcProcessor.IncomingQueue.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.IncomingQueue.html",
    "title": "Class RpcProcessor.IncomingQueue | wan24-RPC",
    "keywords": "Class RpcProcessor.IncomingQueue Incoming message queue Inheritance object DisposableBase HostedServiceBase QueueWorker ParallelQueueWorker ParallelItemQueueWorkerBase<IRpcMessage> RpcProcessor.IncomingQueue Implements IWillDispose IExportUserActions IParallelQueueWorker IItemQueueWorker<IRpcMessage> IQueueWorker IServiceWorkerStatus IServiceWorker IHostedService IDisposableObject IDisposable IAsyncDisposable IStatusProvider IProducerConsumerCollection<QueueWorker.Task_Delegate> IEnumerable<QueueWorker.Task_Delegate> ICollection IEnumerable Inherited Members ParallelItemQueueWorkerBase<IRpcMessage>.EnqueueAsync(IRpcMessage, CancellationToken) ParallelItemQueueWorkerBase<IRpcMessage>.TryEnqueue(IRpcMessage) ParallelItemQueueWorkerBase<IRpcMessage>.EnqueueRangeAsync(IEnumerable<IRpcMessage>, CancellationToken) ParallelItemQueueWorkerBase<IRpcMessage>.EnqueueRangeAsync(IAsyncEnumerable<IRpcMessage>, CancellationToken) ParallelQueueWorker.Busy ParallelQueueWorker.Processing ParallelQueueWorker.WorkerSync ParallelQueueWorker.ProcessCount ParallelQueueWorker.WaitBoring(TimeSpan) ParallelQueueWorker.WaitBoringAsync(TimeSpan) ParallelQueueWorker.WaitBoring(CancellationToken) ParallelQueueWorker.WaitBoringAsync(CancellationToken) ParallelQueueWorker.AfterStopAsync(CancellationToken) ParallelQueueWorker.WorkerAsync() ParallelQueueWorker.Process(QueueWorker.Task_Delegate, CancellationToken) ParallelQueueWorker.Threads ParallelQueueWorker.State QueueWorker.Queue QueueWorker.EnqueueAsync(QueueWorker.Task_Delegate, CancellationToken) QueueWorker.TryEnqueue(QueueWorker.Task_Delegate, CancellationToken) QueueWorker.EnqueueRangeAsync(IEnumerable<QueueWorker.Task_Delegate>, CancellationToken) QueueWorker.EnqueueRangeAsync(IAsyncEnumerable<QueueWorker.Task_Delegate>, CancellationToken) QueueWorker.TryAdd(QueueWorker.Task_Delegate) QueueWorker.TryTake(out QueueWorker.Task_Delegate) QueueWorker.CopyTo(QueueWorker.Task_Delegate[], int) QueueWorker.ToArray() QueueWorker.GetEnumerator() QueueWorker.CopyTo(Array, int) QueueWorker.GUID QueueWorker.Queued QueueWorker.Count QueueWorker.IsSynchronized QueueWorker.SyncRoot HostedServiceBase.Sync HostedServiceBase.RunEvent HostedServiceBase.PauseEvent HostedServiceBase.StopTask HostedServiceBase.Cancellation HostedServiceBase.ServiceTask HostedServiceBase._LastException HostedServiceBase.StartAsync(CancellationToken) HostedServiceBase.StopAsync(CancellationToken) HostedServiceBase.PauseAsync(CancellationToken) HostedServiceBase.ResumeAsync(CancellationToken) HostedServiceBase.ToString() HostedServiceBase.BeforeStartAsync(CancellationToken) HostedServiceBase.StartingAsync(CancellationToken) HostedServiceBase.AfterStartAsync(CancellationToken) HostedServiceBase.BeforeStopAsync(CancellationToken) HostedServiceBase.StoppingAsync(CancellationToken) HostedServiceBase.BeforePauseAsync(CancellationToken) HostedServiceBase.PausingAsync(CancellationToken) HostedServiceBase.AfterPauseAsync(CancellationToken) HostedServiceBase.BeforeResumeAsync(CancellationToken) HostedServiceBase.ResumingAsync(CancellationToken) HostedServiceBase.AfterResumeAsync(CancellationToken) HostedServiceBase.RunServiceAsync() HostedServiceBase.EnsureNotCanceled(in bool) HostedServiceBase.EnsureRunning(in bool) HostedServiceBase.RaiseOnException() HostedServiceBase.CanPause HostedServiceBase.IsRunning HostedServiceBase.IsPaused HostedServiceBase.Started HostedServiceBase.Paused HostedServiceBase.Stopped HostedServiceBase.IsStopping HostedServiceBase.LastException HostedServiceBase.StoppedExceptional HostedServiceBase.Name HostedServiceBase.ErrorSource HostedServiceBase.CancelToken HostedServiceBase.OnException DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax protected class RpcProcessor.IncomingQueue : ParallelItemQueueWorkerBase<IRpcMessage>, IWillDispose, IExportUserActions, IParallelQueueWorker, IItemQueueWorker<IRpcMessage>, IQueueWorker, IServiceWorkerStatus, IServiceWorker, IHostedService, IDisposableObject, IDisposable, IAsyncDisposable, IStatusProvider, IProducerConsumerCollection<QueueWorker.Task_Delegate>, IEnumerable<QueueWorker.Task_Delegate>, ICollection, IEnumerable Constructors | Edit this page View Source IncomingQueue(in RpcProcessor) Incoming message queue Declaration public IncomingQueue(in RpcProcessor processor) Parameters Type Name Description RpcProcessor processor RPC processor Fields | Edit this page View Source SpaceEvent Space event (raised when having space for another incoming message) Declaration protected readonly ResetEvent SpaceEvent Field Value Type Description ResetEvent Properties | Edit this page View Source HasSpace If the queue has space Declaration public bool HasSpace { get; } Property Value Type Description bool | Edit this page View Source Processor RPC processor Declaration public RpcProcessor Processor { get; } Property Value Type Description RpcProcessor Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides ParallelQueueWorker.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.ParallelQueueWorker.DisposeCore() | Edit this page View Source ProcessItem(IRpcMessage, CancellationToken) Process one item Declaration protected override Task ProcessItem(IRpcMessage item, CancellationToken cancellationToken) Parameters Type Name Description IRpcMessage item Item to process CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides ParallelItemQueueWorkerBase<IRpcMessage>.ProcessItem(IRpcMessage, CancellationToken) | Edit this page View Source ResetSpaceEventAsync(CancellationToken) Reset the space event Declaration public virtual Task ResetSpaceEventAsync(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source WaitSpaceAsync() Wait for space Declaration public virtual Task WaitSpaceAsync() Returns Type Description Task Implements wan24.Core.IWillDispose wan24.Core.IExportUserActions wan24.Core.IParallelQueueWorker wan24.Core.IItemQueueWorker<T> wan24.Core.IQueueWorker wan24.Core.IServiceWorkerStatus wan24.Core.IServiceWorker IHostedService wan24.Core.IDisposableObject IDisposable IAsyncDisposable wan24.Core.IStatusProvider IProducerConsumerCollection<T> IEnumerable<T> ICollection IEnumerable"
  },
  "api/wan24.RPC.Processing.RpcProcessor.OutgoingQueue.QueuedMessage.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.OutgoingQueue.QueuedMessage.html",
    "title": "Class RpcProcessor.OutgoingQueue.QueuedMessage | wan24-RPC",
    "keywords": "Class RpcProcessor.OutgoingQueue.QueuedMessage Queued outgoing message Inheritance object RpcProcessor.OutgoingQueue.QueuedMessage Implements IEquatable<RpcProcessor.OutgoingQueue.QueuedMessage> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public record RpcProcessor.OutgoingQueue.QueuedMessage : IEquatable<RpcProcessor.OutgoingQueue.QueuedMessage> Remarks Constructor Constructors | Edit this page View Source QueuedMessage() Queued outgoing message Declaration public QueuedMessage() Remarks Constructor Properties | Edit this page View Source CancelToken Cancellation Declaration public required CancellationToken CancelToken { get; init; } Property Value Type Description CancellationToken | Edit this page View Source Completion Completion Declaration public TaskCompletionSource Completion { get; } Property Value Type Description TaskCompletionSource | Edit this page View Source Done Done time Declaration public DateTime Done { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Enqueued Enqueued time Declaration public DateTime Enqueued { get; } Property Value Type Description DateTime | Edit this page View Source IsDone If the message has been processed Declaration public bool IsDone { get; } Property Value Type Description bool | Edit this page View Source Message Message Declaration public required IRpcMessage Message { get; init; } Property Value Type Description IRpcMessage | Edit this page View Source Priority Priority (higher value will be processed faster) Declaration public required int Priority { get; init; } Property Value Type Description int Methods | Edit this page View Source SetDone() Set Done Declaration public virtual void SetDone() Implements IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessor.OutgoingQueue.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.OutgoingQueue.html",
    "title": "Class RpcProcessor.OutgoingQueue | wan24-RPC",
    "keywords": "Class RpcProcessor.OutgoingQueue Outgoing message queue Inheritance object DisposableBase HostedServiceBase PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage> PriorityItemQueueWorkerBase<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage> RpcProcessor.OutgoingQueue Implements IWillDispose IExportUserActions IPriorityItemQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage> IPriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage> IServiceWorkerStatus IServiceWorker IHostedService IDisposableObject IDisposable IAsyncDisposable IStatusProvider Inherited Members PriorityItemQueueWorkerBase<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage>.EnqueueAsync(RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) PriorityItemQueueWorkerBase<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage>.TryEnqueue(RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage) PriorityItemQueueWorkerBase<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage>.EnqueueRangeAsync(IEnumerable<RpcProcessor.OutgoingQueue.QueuedMessage>, RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) PriorityItemQueueWorkerBase<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage>.EnqueueRangeAsync(IAsyncEnumerable<RpcProcessor.OutgoingQueue.QueuedMessage>, RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) PriorityItemQueueWorkerBase<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage>.ProcessItem(RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.Queue PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.QueueSync PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.QueueEvent PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.SpaceEvent PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.EnqueueAsync(PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.Task_Delegate, RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.TryEnqueue(PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.Task_Delegate, RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.EnqueueRangeAsync(IEnumerable<PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.Task_Delegate>, RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.EnqueueRangeAsync(IAsyncEnumerable<PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.Task_Delegate>, RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.WorkerAsync() PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.Dispose(bool) PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.DisposeCore() PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.GUID PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.Capacity PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.Queued PriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>.State HostedServiceBase.Sync HostedServiceBase.RunEvent HostedServiceBase.PauseEvent HostedServiceBase.StopTask HostedServiceBase.Cancellation HostedServiceBase.ServiceTask HostedServiceBase._LastException HostedServiceBase.StartAsync(CancellationToken) HostedServiceBase.StopAsync(CancellationToken) HostedServiceBase.PauseAsync(CancellationToken) HostedServiceBase.ResumeAsync(CancellationToken) HostedServiceBase.ToString() HostedServiceBase.BeforeStartAsync(CancellationToken) HostedServiceBase.StartingAsync(CancellationToken) HostedServiceBase.AfterStartAsync(CancellationToken) HostedServiceBase.BeforeStopAsync(CancellationToken) HostedServiceBase.StoppingAsync(CancellationToken) HostedServiceBase.AfterStopAsync(CancellationToken) HostedServiceBase.BeforePauseAsync(CancellationToken) HostedServiceBase.PausingAsync(CancellationToken) HostedServiceBase.AfterPauseAsync(CancellationToken) HostedServiceBase.BeforeResumeAsync(CancellationToken) HostedServiceBase.ResumingAsync(CancellationToken) HostedServiceBase.AfterResumeAsync(CancellationToken) HostedServiceBase.RunServiceAsync() HostedServiceBase.EnsureNotCanceled(in bool) HostedServiceBase.EnsureRunning(in bool) HostedServiceBase.RaiseOnException() HostedServiceBase.CanPause HostedServiceBase.IsRunning HostedServiceBase.IsPaused HostedServiceBase.Started HostedServiceBase.Paused HostedServiceBase.Stopped HostedServiceBase.IsStopping HostedServiceBase.LastException HostedServiceBase.StoppedExceptional HostedServiceBase.Name HostedServiceBase.ErrorSource HostedServiceBase.CancelToken HostedServiceBase.OnException DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax protected class RpcProcessor.OutgoingQueue : PriorityItemQueueWorkerBase<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage>, IWillDispose, IExportUserActions, IPriorityItemQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage>, IPriorityQueueWorker<RpcProcessor.OutgoingQueue.QueuedMessage>, IServiceWorkerStatus, IServiceWorker, IHostedService, IDisposableObject, IDisposable, IAsyncDisposable, IStatusProvider Remarks Constructor Constructors | Edit this page View Source OutgoingQueue(in RpcProcessor, in IComparer<QueuedMessage>?) Outgoing message queue Declaration public OutgoingQueue(in RpcProcessor processor, in IComparer<RpcProcessor.OutgoingQueue.QueuedMessage>? comparer = null) Parameters Type Name Description RpcProcessor processor RPC processor IComparer<RpcProcessor.OutgoingQueue.QueuedMessage> comparer Message comparer Remarks Constructor Properties | Edit this page View Source Processor RPC processor Declaration public RpcProcessor Processor { get; } Property Value Type Description RpcProcessor Methods | Edit this page View Source ProcessItem(QueuedMessage, CancellationToken) Process one item Declaration protected override Task ProcessItem(RpcProcessor.OutgoingQueue.QueuedMessage item, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor.OutgoingQueue.QueuedMessage item Item to process CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides PriorityItemQueueWorkerBase<RpcProcessor.OutgoingQueue.QueuedMessage, RpcProcessor.OutgoingQueue.QueuedMessage>.ProcessItem(RpcProcessor.OutgoingQueue.QueuedMessage, CancellationToken) Implements wan24.Core.IWillDispose wan24.Core.IExportUserActions wan24.Core.IPriorityItemQueueWorker<tItem, tPriority> wan24.Core.IPriorityQueueWorker<T> wan24.Core.IServiceWorkerStatus wan24.Core.IServiceWorker IHostedService wan24.Core.IDisposableObject IDisposable IAsyncDisposable wan24.Core.IStatusProvider"
  },
  "api/wan24.RPC.Processing.RpcProcessor.RemoteEventArgs.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.RemoteEventArgs.html",
    "title": "Class RpcProcessor.RemoteEventArgs | wan24-RPC",
    "keywords": "Class RpcProcessor.RemoteEventArgs Remote event arguments Inheritance object EventArgs RpcProcessor.RemoteEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public class RpcProcessor.RemoteEventArgs : EventArgs Constructors | Edit this page View Source RemoteEventArgs(in RpcEvent?, in EventMessage) Remote event arguments Declaration public RemoteEventArgs(in RpcEvent? e, in EventMessage message) Parameters Type Name Description RpcEvent e Event handler EventMessage message Event RPC message Properties | Edit this page View Source EventHandler Event handler Declaration public RpcEvent? EventHandler { get; } Property Value Type Description RpcEvent | Edit this page View Source Message Event RPC message Declaration public EventMessage Message { get; } Property Value Type Description EventMessage"
  },
  "api/wan24.RPC.Processing.RpcProcessor.RemoteEventHandler_Delegate.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.RemoteEventHandler_Delegate.html",
    "title": "Delegate RpcProcessor.RemoteEventHandler_Delegate | wan24-RPC",
    "keywords": "Delegate RpcProcessor.RemoteEventHandler_Delegate Delegate for a remote event handler Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public delegate void RpcProcessor.RemoteEventHandler_Delegate(RpcProcessor processor, RpcProcessor.RemoteEventArgs message) Parameters Type Name Description RpcProcessor processor RPC processor RpcProcessor.RemoteEventArgs message Event message"
  },
  "api/wan24.RPC.Processing.RpcProcessor.Request.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.Request.html",
    "title": "Class RpcProcessor.Request | wan24-RPC",
    "keywords": "Class RpcProcessor.Request RPC request (context) Inheritance object DisposableRecordBase RpcProcessor.Request Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcProcessor.Request> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax protected record RpcProcessor.Request : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcProcessor.Request> Remarks Constructor Constructors | Edit this page View Source Request() RPC request (context) Declaration public Request() Remarks Constructor Properties | Edit this page View Source Cancellation Cancellation token Declaration public CancellationToken Cancellation { get; init; } Property Value Type Description CancellationToken | Edit this page View Source Created Created time Declaration public DateTime Created { get; } Property Value Type Description DateTime | Edit this page View Source Done Done time Declaration public DateTime Done { get; protected set; } Property Value Type Description DateTime | Edit this page View Source ExpectedReturnType Expected return value type Declaration public Type? ExpectedReturnType { get; init; } Property Value Type Description Type | Edit this page View Source Id Message ID Declaration public long Id { get; } Property Value Type Description long | Edit this page View Source IsDone If done Declaration public bool IsDone { get; } Property Value Type Description bool | Edit this page View Source Message Message Declaration public required IRpcRequest Message { get; init; } Property Value Type Description IRpcRequest | Edit this page View Source ParameterScopes Scope parameters Declaration public HashSet<RpcProcessor.RpcScopeBase> ParameterScopes { get; } Property Value Type Description HashSet<RpcProcessor.RpcScopeBase> | Edit this page View Source Processor RPC processor Declaration public required RpcProcessor Processor { get; init; } Property Value Type Description RpcProcessor | Edit this page View Source ProcessorCompletion Processor completion (completes the request queue processing) Declaration public TaskCompletionSource<object?> ProcessorCompletion { get; } Property Value Type Description TaskCompletionSource<object> | Edit this page View Source RequestCompletion Request completion (completes the whole request) Declaration public TaskCompletionSource<object?> RequestCompletion { get; } Property Value Type Description TaskCompletionSource<object> | Edit this page View Source ReturnScope The returned remote scope Declaration public RpcProcessor.RpcRemoteScopeBase? ReturnScope { get; set; } Property Value Type Description RpcProcessor.RpcRemoteScopeBase | Edit this page View Source Runtime Runtime Declaration public TimeSpan Runtime { get; } Property Value Type Description TimeSpan | Edit this page View Source WasProcessing If the request was processed by the peer (the request message was sent) Declaration public bool WasProcessing { get; set; } Property Value Type Description bool Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableRecordBase.DisposeCore() | Edit this page View Source HandleExceptionAsync(Exception) Handle an exception (this method should not throw) Declaration public virtual Task HandleExceptionAsync(Exception exception) Parameters Type Name Description Exception exception Exception Returns Type Description Task | Edit this page View Source SetDone() Set done Declaration public virtual void SetDone() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessor.RequestQueue.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.RequestQueue.html",
    "title": "Class RpcProcessor.RequestQueue | wan24-RPC",
    "keywords": "Class RpcProcessor.RequestQueue RPC request queue Inheritance object DisposableBase HostedServiceBase QueueWorker ParallelQueueWorker ParallelItemQueueWorkerBase<RpcProcessor.Request> RpcProcessor.RequestQueue Implements IWillDispose IExportUserActions IParallelQueueWorker IItemQueueWorker<RpcProcessor.Request> IQueueWorker IServiceWorkerStatus IServiceWorker IHostedService IDisposableObject IDisposable IAsyncDisposable IStatusProvider IProducerConsumerCollection<QueueWorker.Task_Delegate> IEnumerable<QueueWorker.Task_Delegate> ICollection IEnumerable Inherited Members ParallelItemQueueWorkerBase<RpcProcessor.Request>.EnqueueAsync(RpcProcessor.Request, CancellationToken) ParallelItemQueueWorkerBase<RpcProcessor.Request>.TryEnqueue(RpcProcessor.Request) ParallelItemQueueWorkerBase<RpcProcessor.Request>.EnqueueRangeAsync(IEnumerable<RpcProcessor.Request>, CancellationToken) ParallelItemQueueWorkerBase<RpcProcessor.Request>.EnqueueRangeAsync(IAsyncEnumerable<RpcProcessor.Request>, CancellationToken) ParallelQueueWorker.Busy ParallelQueueWorker.Processing ParallelQueueWorker.WorkerSync ParallelQueueWorker.ProcessCount ParallelQueueWorker.WaitBoring(TimeSpan) ParallelQueueWorker.WaitBoringAsync(TimeSpan) ParallelQueueWorker.WaitBoring(CancellationToken) ParallelQueueWorker.WaitBoringAsync(CancellationToken) ParallelQueueWorker.AfterStopAsync(CancellationToken) ParallelQueueWorker.WorkerAsync() ParallelQueueWorker.Process(QueueWorker.Task_Delegate, CancellationToken) ParallelQueueWorker.Dispose(bool) ParallelQueueWorker.DisposeCore() ParallelQueueWorker.Threads ParallelQueueWorker.State QueueWorker.Queue QueueWorker.EnqueueAsync(QueueWorker.Task_Delegate, CancellationToken) QueueWorker.TryEnqueue(QueueWorker.Task_Delegate, CancellationToken) QueueWorker.EnqueueRangeAsync(IEnumerable<QueueWorker.Task_Delegate>, CancellationToken) QueueWorker.EnqueueRangeAsync(IAsyncEnumerable<QueueWorker.Task_Delegate>, CancellationToken) QueueWorker.TryAdd(QueueWorker.Task_Delegate) QueueWorker.TryTake(out QueueWorker.Task_Delegate) QueueWorker.CopyTo(QueueWorker.Task_Delegate[], int) QueueWorker.ToArray() QueueWorker.GetEnumerator() QueueWorker.CopyTo(Array, int) QueueWorker.GUID QueueWorker.Queued QueueWorker.Count QueueWorker.IsSynchronized QueueWorker.SyncRoot HostedServiceBase.Sync HostedServiceBase.RunEvent HostedServiceBase.PauseEvent HostedServiceBase.StopTask HostedServiceBase.Cancellation HostedServiceBase.ServiceTask HostedServiceBase._LastException HostedServiceBase.StartAsync(CancellationToken) HostedServiceBase.StopAsync(CancellationToken) HostedServiceBase.PauseAsync(CancellationToken) HostedServiceBase.ResumeAsync(CancellationToken) HostedServiceBase.ToString() HostedServiceBase.BeforeStartAsync(CancellationToken) HostedServiceBase.StartingAsync(CancellationToken) HostedServiceBase.AfterStartAsync(CancellationToken) HostedServiceBase.BeforeStopAsync(CancellationToken) HostedServiceBase.StoppingAsync(CancellationToken) HostedServiceBase.BeforePauseAsync(CancellationToken) HostedServiceBase.PausingAsync(CancellationToken) HostedServiceBase.AfterPauseAsync(CancellationToken) HostedServiceBase.BeforeResumeAsync(CancellationToken) HostedServiceBase.ResumingAsync(CancellationToken) HostedServiceBase.AfterResumeAsync(CancellationToken) HostedServiceBase.RunServiceAsync() HostedServiceBase.EnsureNotCanceled(in bool) HostedServiceBase.EnsureRunning(in bool) HostedServiceBase.RaiseOnException() HostedServiceBase.CanPause HostedServiceBase.IsRunning HostedServiceBase.IsPaused HostedServiceBase.Started HostedServiceBase.Paused HostedServiceBase.Stopped HostedServiceBase.IsStopping HostedServiceBase.LastException HostedServiceBase.StoppedExceptional HostedServiceBase.Name HostedServiceBase.ErrorSource HostedServiceBase.CancelToken HostedServiceBase.OnException DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax protected class RpcProcessor.RequestQueue : ParallelItemQueueWorkerBase<RpcProcessor.Request>, IWillDispose, IExportUserActions, IParallelQueueWorker, IItemQueueWorker<RpcProcessor.Request>, IQueueWorker, IServiceWorkerStatus, IServiceWorker, IHostedService, IDisposableObject, IDisposable, IAsyncDisposable, IStatusProvider, IProducerConsumerCollection<QueueWorker.Task_Delegate>, IEnumerable<QueueWorker.Task_Delegate>, ICollection, IEnumerable Constructors | Edit this page View Source RequestQueue(in RpcProcessor) RPC request queue Declaration public RequestQueue(in RpcProcessor processor) Parameters Type Name Description RpcProcessor processor Properties | Edit this page View Source Logger Logger Declaration public virtual ILogger? Logger { get; } Property Value Type Description ILogger | Edit this page View Source Processor RPC processor Declaration public RpcProcessor Processor { get; } Property Value Type Description RpcProcessor Methods | Edit this page View Source GetFinalParameterValueAsync(Request, RequestMessage, int, object?, CancellationToken) Get the final parameter value Declaration protected virtual Task<object?> GetFinalParameterValueAsync(RpcProcessor.Request item, RequestMessage request, int index, object? value, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor.Request item RPC request RequestMessage request RPC request message int index Zero based parameter index object value Current parameter value CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Parameter value to use | Edit this page View Source GetFinalReturnValueAsync(Request, RequestMessage, object?, CancellationToken) Get the final return value of a method call which will be sent back to the peer Declaration protected virtual Task<object?> GetFinalReturnValueAsync(RpcProcessor.Request item, RequestMessage request, object? returnValue, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor.Request item RPC request RequestMessage request RPC request message object returnValue Return value CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Final return value | Edit this page View Source ProcessItem(Request, CancellationToken) Process one item Declaration protected override Task ProcessItem(RpcProcessor.Request item, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor.Request item Item to process CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides ParallelItemQueueWorkerBase<RpcProcessor.Request>.ProcessItem(RpcProcessor.Request, CancellationToken) Implements wan24.Core.IWillDispose wan24.Core.IExportUserActions wan24.Core.IParallelQueueWorker wan24.Core.IItemQueueWorker<T> wan24.Core.IQueueWorker wan24.Core.IServiceWorkerStatus wan24.Core.IServiceWorker IHostedService wan24.Core.IDisposableObject IDisposable IAsyncDisposable wan24.Core.IStatusProvider IProducerConsumerCollection<T> IEnumerable<T> ICollection IEnumerable"
  },
  "api/wan24.RPC.Processing.RpcProcessor.RpcRemoteScopeBase.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.RpcRemoteScopeBase.html",
    "title": "Class RpcProcessor.RpcRemoteScopeBase | wan24-RPC",
    "keywords": "Class RpcProcessor.RpcRemoteScopeBase Base class for a RPC remote scope Inheritance object DisposableRecordBase RpcProcessor.RpcScopeProcessorBase RpcProcessor.RpcRemoteScopeBase Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcProcessor.RpcScopeProcessorBase> IEquatable<RpcProcessor.RpcRemoteScopeBase> Inherited Members RpcProcessor.RpcScopeProcessorBase.processor RpcProcessor.RpcScopeProcessorBase.key RpcProcessor.RpcScopeProcessorBase.Sync RpcProcessor.RpcScopeProcessorBase._RemoteEvents RpcProcessor.RpcScopeProcessorBase.Name RpcProcessor.RpcScopeProcessorBase.Key RpcProcessor.RpcScopeProcessorBase.IsStored RpcProcessor.RpcScopeProcessorBase.IsDiscarded RpcProcessor.RpcScopeProcessorBase.Processor RpcProcessor.RpcScopeProcessorBase.Logger RpcProcessor.RpcScopeProcessorBase.CancelToken RpcProcessor.RpcScopeProcessorBase.RemoteEvents RpcProcessor.RpcScopeProcessorBase.RegisterEvent(in string, in Type, in RpcScopeEvent.EventHandler_Delegate) RpcProcessor.RpcScopeProcessorBase.RegisterEvent<T>(in string, in RpcScopeEvent.EventHandler_Delegate) RpcProcessor.RpcScopeProcessorBase.RegisterEvent(in string, in RpcScopeEvent.EventHandler_Delegate) RpcProcessor.RpcScopeProcessorBase.HandleMessageAsync(IRpcScopeMessage, CancellationToken) RpcProcessor.RpcScopeProcessorBase.SendMessageAsync(IRpcMessage, int, CancellationToken) RpcProcessor.RpcScopeProcessorBase.SendMessageAsync(IRpcMessage, CancellationToken) RpcProcessor.RpcScopeProcessorBase.AddRemoteEvent(in RpcScopeEvent) RpcProcessor.RpcScopeProcessorBase.GetRemoteEvent(in string) RpcProcessor.RpcScopeProcessorBase.RemoveRemoteEvent(in RpcScopeEvent) RpcProcessor.RpcScopeProcessorBase.RemoveRemoteEvent(in string) RpcProcessor.RpcScopeProcessorBase.CreateEvent(in string, in Type, in RpcScopeEvent.EventHandler_Delegate) RpcProcessor.RpcScopeProcessorBase.CreateEvent<T>(in string, in RpcScopeEvent.EventHandler_Delegate) RpcProcessor.RpcScopeProcessorBase.CreateEvent(in string, in RpcScopeEvent.EventHandler_Delegate) RpcProcessor.RpcScopeProcessorBase.HandleMessageIntAsync(IRpcScopeMessage, CancellationToken) RpcProcessor.RpcScopeProcessorBase.HandleEventAsync(IRpcScopeEventMessage, CancellationToken) RpcProcessor.RpcScopeProcessorBase.HandleDiscardedAsync(IRpcScopeDiscardedMessage, CancellationToken) RpcProcessor.RpcScopeProcessorBase.OnRemoteEvent RpcProcessor.RpcScopeProcessorBase.RaiseOnRemoteEvent(RpcScopeEvent, IRpcScopeEventMessage) DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public abstract record RpcProcessor.RpcRemoteScopeBase : RpcProcessor.RpcScopeProcessorBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcProcessor.RpcScopeProcessorBase>, IEquatable<RpcProcessor.RpcRemoteScopeBase> Constructors | Edit this page View Source RpcRemoteScopeBase(in RpcProcessor, in RpcScopeValue, in bool) Constructor Declaration protected RpcRemoteScopeBase(in RpcProcessor processor, in RpcScopeValue scope, in bool add) Parameters Type Name Description RpcProcessor processor RPC processor RpcScopeValue scope Scope bool add Add the sope? Properties | Edit this page View Source DisposeValue Dispose the Value when disposing? Declaration public bool DisposeValue { get; set; } Property Value Type Description bool | Edit this page View Source DisposeValueOnError If to dispose the Value on error Declaration public bool DisposeValueOnError { get; protected set; } Property Value Type Description bool | Edit this page View Source Id Scope ID Declaration public override sealed long Id { get; } Property Value Type Description long Overrides RpcProcessor.RpcScopeProcessorBase.Id | Edit this page View Source InformMasterWhenDisposing If to inform the scope master when disposing Declaration public bool InformMasterWhenDisposing { get; set; } Property Value Type Description bool | Edit this page View Source IsError If there was an error Declaration public bool IsError { get; protected set; } Property Value Type Description bool | Edit this page View Source LastException Last exception Declaration public Exception? LastException { get; protected set; } Property Value Type Description Exception | Edit this page View Source Parameter RPC method parameter which got the scope Declaration public RpcApiMethodParameterInfo? Parameter { get; set; } Property Value Type Description RpcApiMethodParameterInfo | Edit this page View Source ReplaceExistingScope If to replace the existing keyed remote scope Declaration public bool ReplaceExistingScope { get; } Property Value Type Description bool | Edit this page View Source ScopeValue Received RPC scope value Declaration public RpcScopeValue ScopeValue { get; } Property Value Type Description RpcScopeValue | Edit this page View Source Value Value Declaration public virtual object? Value { get; } Property Value Type Description object | Edit this page View Source WillDisposeValue If the Value will be disposed when disposing Declaration public virtual bool WillDisposeValue { get; } Property Value Type Description bool Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides RpcProcessor.RpcScopeProcessorBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides RpcProcessor.RpcScopeProcessorBase.DisposeCore() | Edit this page View Source RaiseEventAsync(string, EventArgs?, bool, CancellationToken) Raise an event at the peer Declaration public override Task RaiseEventAsync(string name, EventArgs? e = null, bool wait = false, CancellationToken cancellationToken = default) Parameters Type Name Description string name Event name EventArgs e Event arguments bool wait Wait for remote event handlers to finish? CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcProcessor.RpcScopeProcessorBase.RaiseEventAsync(string, EventArgs?, bool, CancellationToken) | Edit this page View Source SetIsErrorAsync(Exception) Set the value of IsError to true and perform required actions Declaration public virtual Task SetIsErrorAsync(Exception ex) Parameters Type Name Description Exception ex Exception Returns Type Description Task | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides RpcProcessor.RpcScopeProcessorBase.ToString() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessor.RpcScopeBase.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.RpcScopeBase.html",
    "title": "Class RpcProcessor.RpcScopeBase | wan24-RPC",
    "keywords": "Class RpcProcessor.RpcScopeBase Base class for a RPC scope Inheritance object DisposableRecordBase RpcProcessor.RpcScopeProcessorBase RpcProcessor.RpcScopeBase Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcProcessor.RpcScopeProcessorBase> IEquatable<RpcProcessor.RpcScopeBase> Inherited Members RpcProcessor.RpcScopeProcessorBase.processor RpcProcessor.RpcScopeProcessorBase.key RpcProcessor.RpcScopeProcessorBase.Sync RpcProcessor.RpcScopeProcessorBase._RemoteEvents RpcProcessor.RpcScopeProcessorBase.Name RpcProcessor.RpcScopeProcessorBase.Key RpcProcessor.RpcScopeProcessorBase.IsStored RpcProcessor.RpcScopeProcessorBase.IsDiscarded RpcProcessor.RpcScopeProcessorBase.Processor RpcProcessor.RpcScopeProcessorBase.Logger RpcProcessor.RpcScopeProcessorBase.CancelToken RpcProcessor.RpcScopeProcessorBase.RemoteEvents RpcProcessor.RpcScopeProcessorBase.RegisterEvent(in string, in Type, in RpcScopeEvent.EventHandler_Delegate) RpcProcessor.RpcScopeProcessorBase.RegisterEvent<T>(in string, in RpcScopeEvent.EventHandler_Delegate) RpcProcessor.RpcScopeProcessorBase.RegisterEvent(in string, in RpcScopeEvent.EventHandler_Delegate) RpcProcessor.RpcScopeProcessorBase.HandleMessageAsync(IRpcScopeMessage, CancellationToken) RpcProcessor.RpcScopeProcessorBase.SendMessageAsync(IRpcMessage, int, CancellationToken) RpcProcessor.RpcScopeProcessorBase.SendMessageAsync(IRpcMessage, CancellationToken) RpcProcessor.RpcScopeProcessorBase.AddRemoteEvent(in RpcScopeEvent) RpcProcessor.RpcScopeProcessorBase.GetRemoteEvent(in string) RpcProcessor.RpcScopeProcessorBase.RemoveRemoteEvent(in RpcScopeEvent) RpcProcessor.RpcScopeProcessorBase.RemoveRemoteEvent(in string) RpcProcessor.RpcScopeProcessorBase.CreateEvent(in string, in Type, in RpcScopeEvent.EventHandler_Delegate) RpcProcessor.RpcScopeProcessorBase.CreateEvent<T>(in string, in RpcScopeEvent.EventHandler_Delegate) RpcProcessor.RpcScopeProcessorBase.CreateEvent(in string, in RpcScopeEvent.EventHandler_Delegate) RpcProcessor.RpcScopeProcessorBase.HandleMessageIntAsync(IRpcScopeMessage, CancellationToken) RpcProcessor.RpcScopeProcessorBase.HandleEventAsync(IRpcScopeEventMessage, CancellationToken) RpcProcessor.RpcScopeProcessorBase.HandleDiscardedAsync(IRpcScopeDiscardedMessage, CancellationToken) RpcProcessor.RpcScopeProcessorBase.OnRemoteEvent RpcProcessor.RpcScopeProcessorBase.RaiseOnRemoteEvent(RpcScopeEvent, IRpcScopeEventMessage) DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public abstract record RpcProcessor.RpcScopeBase : RpcProcessor.RpcScopeProcessorBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcProcessor.RpcScopeProcessorBase>, IEquatable<RpcProcessor.RpcScopeBase> Remarks Constructor Constructors | Edit this page View Source RpcScopeBase(in RpcProcessor) Constructor Declaration protected RpcScopeBase(in RpcProcessor processor) Parameters Type Name Description RpcProcessor processor RPC processor | Edit this page View Source RpcScopeBase(in RpcProcessor, in long, in string?) Base class for a RPC scope Declaration protected RpcScopeBase(in RpcProcessor processor, in long id, in string? key = null) Parameters Type Name Description RpcProcessor processor RPC processor long id ID string key Key Remarks Constructor Fields | Edit this page View Source DisposeValue Dispose the Value when disposing? Declaration protected bool DisposeValue Field Value Type Description bool Properties | Edit this page View Source DisposeValueOnError If to dispose the Value on error Declaration public bool DisposeValueOnError { get; protected set; } Property Value Type Description bool | Edit this page View Source Id Scope ID Declaration public override sealed long Id { get; } Property Value Type Description long Overrides RpcProcessor.RpcScopeProcessorBase.Id | Edit this page View Source InformConsumerWhenDisposing If to inform the scope consumer when disposing Declaration public bool InformConsumerWhenDisposing { get; set; } Property Value Type Description bool | Edit this page View Source IsError If there was an error Declaration public bool IsError { get; protected set; } Property Value Type Description bool | Edit this page View Source LastException Last exception Declaration public Exception? LastException { get; protected set; } Property Value Type Description Exception | Edit this page View Source Method RPC method which returns the scope Declaration public RpcApiMethodInfo? Method { get; set; } Property Value Type Description RpcApiMethodInfo | Edit this page View Source ScopeParameter Scope parameter Declaration public IRpcScopeParameter? ScopeParameter { get; init; } Property Value Type Description IRpcScopeParameter | Edit this page View Source Value Value Declaration public abstract object? Value { get; } Property Value Type Description object | Edit this page View Source WillDisposeValue If the Value will be disposed when disposing Declaration public virtual bool WillDisposeValue { get; } Property Value Type Description bool | Edit this page View Source id ID Declaration public long id { get; init; } Property Value Type Description long Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides RpcProcessor.RpcScopeProcessorBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides RpcProcessor.RpcScopeProcessorBase.DisposeCore() | Edit this page View Source RaiseEventAsync(string, EventArgs?, bool, CancellationToken) Raise an event at the peer Declaration public override Task RaiseEventAsync(string name, EventArgs? e = null, bool wait = false, CancellationToken cancellationToken = default) Parameters Type Name Description string name Event name EventArgs e Event arguments bool wait Wait for remote event handlers to finish? CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcProcessor.RpcScopeProcessorBase.RaiseEventAsync(string, EventArgs?, bool, CancellationToken) | Edit this page View Source SetIsErrorAsync(Exception) Set the value of IsError to true and perform required actions Declaration public virtual Task SetIsErrorAsync(Exception ex) Parameters Type Name Description Exception ex Exception Returns Type Description Task | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides RpcProcessor.RpcScopeProcessorBase.ToString() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessor.RpcScopeProcessorBase.RemoteEventArgs.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.RpcScopeProcessorBase.RemoteEventArgs.html",
    "title": "Class RpcProcessor.RpcScopeProcessorBase.RemoteEventArgs | wan24-RPC",
    "keywords": "Class RpcProcessor.RpcScopeProcessorBase.RemoteEventArgs Remote event arguments Inheritance object EventArgs RpcProcessor.RpcScopeProcessorBase.RemoteEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public class RpcProcessor.RpcScopeProcessorBase.RemoteEventArgs : EventArgs Constructors | Edit this page View Source RemoteEventArgs(in RpcScopeEvent?, in IRpcScopeEventMessage) Remote event arguments Declaration public RemoteEventArgs(in RpcScopeEvent? e, in IRpcScopeEventMessage message) Parameters Type Name Description RpcScopeEvent e Event handler IRpcScopeEventMessage message Event RPC message Properties | Edit this page View Source EventHandler Event handler Declaration public RpcScopeEvent? EventHandler { get; } Property Value Type Description RpcScopeEvent | Edit this page View Source Message Event RPC message Declaration public IRpcScopeEventMessage Message { get; } Property Value Type Description IRpcScopeEventMessage"
  },
  "api/wan24.RPC.Processing.RpcProcessor.RpcScopeProcessorBase.RemoteEventHandler_Delegate.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.RpcScopeProcessorBase.RemoteEventHandler_Delegate.html",
    "title": "Delegate RpcProcessor.RpcScopeProcessorBase.RemoteEventHandler_Delegate | wan24-RPC",
    "keywords": "Delegate RpcProcessor.RpcScopeProcessorBase.RemoteEventHandler_Delegate Delegate for a remote event handler Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public delegate void RpcProcessor.RpcScopeProcessorBase.RemoteEventHandler_Delegate(RpcProcessor.RpcScopeProcessorBase scope, RpcProcessor.RpcScopeProcessorBase.RemoteEventArgs message) Parameters Type Name Description RpcProcessor.RpcScopeProcessorBase scope RPC processor RpcProcessor.RpcScopeProcessorBase.RemoteEventArgs message Event message"
  },
  "api/wan24.RPC.Processing.RpcProcessor.RpcScopeProcessorBase.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.RpcScopeProcessorBase.html",
    "title": "Class RpcProcessor.RpcScopeProcessorBase | wan24-RPC",
    "keywords": "Class RpcProcessor.RpcScopeProcessorBase Base class for a RPC scope processor Inheritance object DisposableRecordBase RpcProcessor.RpcScopeProcessorBase RpcProcessor.RpcRemoteScopeBase RpcProcessor.RpcScopeBase Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcProcessor.RpcScopeProcessorBase> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public abstract record RpcProcessor.RpcScopeProcessorBase : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcProcessor.RpcScopeProcessorBase> Remarks Constructor Constructors | Edit this page View Source RpcScopeProcessorBase(in RpcProcessor, in string?) Base class for a RPC scope processor Declaration protected RpcScopeProcessorBase(in RpcProcessor processor, in string? key = null) Parameters Type Name Description RpcProcessor processor RPC processor string key Key Remarks Constructor Fields | Edit this page View Source Sync Thread synchronization Declaration protected readonly SemaphoreSync Sync Field Value Type Description SemaphoreSync | Edit this page View Source _RemoteEvents Remote events (key is the event name) Declaration protected readonly ConcurrentDictionary<string, RpcScopeEvent> _RemoteEvents Field Value Type Description ConcurrentDictionary<string, RpcScopeEvent> Properties | Edit this page View Source CancelToken RPC processor cancellation token Declaration public CancellationToken CancelToken { get; } Property Value Type Description CancellationToken | Edit this page View Source Id Scope ID Declaration public abstract long Id { get; } Property Value Type Description long | Edit this page View Source IsDiscarded If the scope was discarded from the peer Declaration public bool IsDiscarded { get; protected set; } Property Value Type Description bool | Edit this page View Source IsStored If the scope is stored Declaration public bool IsStored { get; init; } Property Value Type Description bool | Edit this page View Source Key Scope key Declaration public string? Key { get; } Property Value Type Description string | Edit this page View Source Logger Logger Declaration public ILogger? Logger { get; } Property Value Type Description ILogger | Edit this page View Source Name Name Declaration public string? Name { get; set; } Property Value Type Description string | Edit this page View Source Processor RPC processor Declaration public RpcProcessor Processor { get; } Property Value Type Description RpcProcessor | Edit this page View Source RemoteEvents Registered remote events Declaration public IEnumerable<RpcScopeEvent> RemoteEvents { get; } Property Value Type Description IEnumerable<RpcScopeEvent> | Edit this page View Source key Key Declaration public string? key { get; init; } Property Value Type Description string | Edit this page View Source processor RPC processor Declaration public RpcProcessor processor { get; init; } Property Value Type Description RpcProcessor Methods | Edit this page View Source AddRemoteEvent(in RpcScopeEvent) Add a remote event Declaration protected virtual bool AddRemoteEvent(in RpcScopeEvent e) Parameters Type Name Description RpcScopeEvent e Event Returns Type Description bool | Edit this page View Source CreateEvent(in string, in Type, in EventHandler_Delegate) Create an event Declaration protected virtual RpcScopeEvent CreateEvent(in string name, in Type arguments, in RpcScopeEvent.EventHandler_Delegate handler) Parameters Type Name Description string name Event name Type arguments Event arguments type RpcScopeEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcScopeEvent Event | Edit this page View Source CreateEvent(in string, in EventHandler_Delegate) Create an event Declaration protected virtual RpcScopeEvent CreateEvent(in string name, in RpcScopeEvent.EventHandler_Delegate handler) Parameters Type Name Description string name Event name RpcScopeEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcScopeEvent Event | Edit this page View Source CreateEvent<T>(in string, in EventHandler_Delegate) Create an event Declaration protected RpcScopeEvent CreateEvent<T>(in string name, in RpcScopeEvent.EventHandler_Delegate handler) where T : EventArgs Parameters Type Name Description string name Event name RpcScopeEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcScopeEvent Event Type Parameters Name Description T Event arguments type | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableRecordBase.DisposeCore() | Edit this page View Source GetRemoteEvent(in string) Get a remote event Declaration protected virtual RpcScopeEvent? GetRemoteEvent(in string name) Parameters Type Name Description string name Name Returns Type Description RpcScopeEvent Event | Edit this page View Source HandleDiscardedAsync(IRpcScopeDiscardedMessage, CancellationToken) Handle discarded from the peer (should set IsDiscarded to true and dispose) Declaration protected virtual Task HandleDiscardedAsync(IRpcScopeDiscardedMessage message, CancellationToken cancellationToken) Parameters Type Name Description IRpcScopeDiscardedMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source HandleEventAsync(IRpcScopeEventMessage, CancellationToken) Handle a RPC event (processing will be stopped on handler exception) Declaration protected virtual Task HandleEventAsync(IRpcScopeEventMessage message, CancellationToken cancellationToken) Parameters Type Name Description IRpcScopeEventMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source HandleMessageAsync(IRpcScopeMessage, CancellationToken) Handle a RPC scope message (will throw on unknown message type to disconnect) Declaration public Task HandleMessageAsync(IRpcScopeMessage message, CancellationToken cancellationToken) Parameters Type Name Description IRpcScopeMessage message RPC scope message CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source HandleMessageIntAsync(IRpcScopeMessage, CancellationToken) Handle a message (will disconnect when an exception is being thrown by this method) Declaration protected virtual Task<bool> HandleMessageIntAsync(IRpcScopeMessage message, CancellationToken cancellationToken) Parameters Type Name Description IRpcScopeMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task<bool> If handled | Edit this page View Source RaiseEventAsync(string, EventArgs?, bool, CancellationToken) Raise an event at the peer Declaration public abstract Task RaiseEventAsync(string name, EventArgs? e = null, bool wait = false, CancellationToken cancellationToken = default) Parameters Type Name Description string name Event name EventArgs e Event arguments bool wait Wait for remote event handlers to finish? CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source RaiseOnRemoteEvent(RpcScopeEvent?, IRpcScopeEventMessage) Raise the OnRemoteEvent Declaration protected virtual void RaiseOnRemoteEvent(RpcScopeEvent? handler, IRpcScopeEventMessage message) Parameters Type Name Description RpcScopeEvent handler Event handler IRpcScopeEventMessage message Event RPC message | Edit this page View Source RegisterEvent(in string, in Type, in EventHandler_Delegate) Register a remote event handler Declaration public virtual RpcScopeEvent RegisterEvent(in string name, in Type arguments, in RpcScopeEvent.EventHandler_Delegate handler) Parameters Type Name Description string name Event name Type arguments Event arguments type (must be an EventArgs) RpcScopeEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcScopeEvent Event | Edit this page View Source RegisterEvent(in string, in EventHandler_Delegate) Register a remote event handler Declaration public virtual RpcScopeEvent RegisterEvent(in string name, in RpcScopeEvent.EventHandler_Delegate handler) Parameters Type Name Description string name Event name RpcScopeEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcScopeEvent Event | Edit this page View Source RegisterEvent<T>(in string, in EventHandler_Delegate) Register a remote event handler Declaration public RpcScopeEvent RegisterEvent<T>(in string name, in RpcScopeEvent.EventHandler_Delegate handler) where T : EventArgs Parameters Type Name Description string name Event name RpcScopeEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcScopeEvent Event Type Parameters Name Description T Event arguments type | Edit this page View Source RemoveRemoteEvent(in string) Remove a remote event Declaration protected virtual RpcScopeEvent? RemoveRemoteEvent(in string name) Parameters Type Name Description string name Name Returns Type Description RpcScopeEvent Event | Edit this page View Source RemoveRemoteEvent(in RpcScopeEvent) Remove a remote event Declaration protected virtual bool RemoveRemoteEvent(in RpcScopeEvent e) Parameters Type Name Description RpcScopeEvent e Event Returns Type Description bool If removed | Edit this page View Source SendMessageAsync(IRpcMessage, int, CancellationToken) Send a RPC message to the peer (using the outgoing message queue) Declaration protected virtual Task SendMessageAsync(IRpcMessage message, int priority, CancellationToken cancellationToken) Parameters Type Name Description IRpcMessage message Message int priority Priority (higher value will be processed faster) CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source SendMessageAsync(IRpcMessage, CancellationToken) Send a RPC message to the peer directly (won't use the outgoing message queue) Declaration protected virtual Task SendMessageAsync(IRpcMessage message, CancellationToken cancellationToken) Parameters Type Name Description IRpcMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task Events | Edit this page View Source OnRemoteEvent Raised on remote event Declaration public event RpcProcessor.RpcScopeProcessorBase.RemoteEventHandler_Delegate? OnRemoteEvent Event Type Type Description RpcProcessor.RpcScopeProcessorBase.RemoteEventHandler_Delegate Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessor.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.html",
    "title": "Class RpcProcessor | wan24-RPC",
    "keywords": "Class RpcProcessor RPC processor Inheritance object DisposableBase HostedServiceBase RpcProcessor Implements IWillDispose IServiceWorker IHostedService IDisposableObject IDisposable IAsyncDisposable IExportUserActions IStatusProvider Inherited Members HostedServiceBase.Sync HostedServiceBase.RunEvent HostedServiceBase.PauseEvent HostedServiceBase.StopTask HostedServiceBase.Cancellation HostedServiceBase.ServiceTask HostedServiceBase._LastException HostedServiceBase.StartAsync(CancellationToken) HostedServiceBase.StopAsync(CancellationToken) HostedServiceBase.PauseAsync(CancellationToken) HostedServiceBase.ResumeAsync(CancellationToken) HostedServiceBase.ToString() HostedServiceBase.BeforeStartAsync(CancellationToken) HostedServiceBase.StartingAsync(CancellationToken) HostedServiceBase.AfterStartAsync(CancellationToken) HostedServiceBase.BeforeStopAsync(CancellationToken) HostedServiceBase.StoppingAsync(CancellationToken) HostedServiceBase.AfterStopAsync(CancellationToken) HostedServiceBase.BeforePauseAsync(CancellationToken) HostedServiceBase.PausingAsync(CancellationToken) HostedServiceBase.AfterPauseAsync(CancellationToken) HostedServiceBase.BeforeResumeAsync(CancellationToken) HostedServiceBase.ResumingAsync(CancellationToken) HostedServiceBase.AfterResumeAsync(CancellationToken) HostedServiceBase.RunServiceAsync() HostedServiceBase.EnsureNotCanceled(in bool) HostedServiceBase.EnsureRunning(in bool) HostedServiceBase.RaiseOnException() HostedServiceBase.CanPause HostedServiceBase.IsRunning HostedServiceBase.IsPaused HostedServiceBase.Started HostedServiceBase.Paused HostedServiceBase.Stopped HostedServiceBase.IsStopping HostedServiceBase.LastException HostedServiceBase.StoppedExceptional HostedServiceBase.Name HostedServiceBase.ErrorSource HostedServiceBase.CancelToken HostedServiceBase.OnException DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public class RpcProcessor : HostedServiceBase, IWillDispose, IServiceWorker, IHostedService, IDisposableObject, IDisposable, IAsyncDisposable, IExportUserActions, IStatusProvider Constructors | Edit this page View Source RpcProcessor(in RpcProcessorOptions) Constructor Declaration public RpcProcessor(in RpcProcessorOptions options) Parameters Type Name Description RpcProcessorOptions options Options (will be disposed) Fields | Edit this page View Source Calls RPC calls Declaration protected readonly RpcProcessor.CallQueue Calls Field Value Type Description RpcProcessor.CallQueue | Edit this page View Source HeartBeat Heartbeat Declaration protected readonly Timeout? HeartBeat Field Value Type Description Timeout | Edit this page View Source IncomingMessages Incoming messages Declaration protected readonly RpcProcessor.IncomingQueue IncomingMessages Field Value Type Description RpcProcessor.IncomingQueue | Edit this page View Source KeyedRemoteScopes Keyed remote scopes (key is the scope key) Declaration protected readonly ConcurrentDictionary<string, RpcProcessor.RpcRemoteScopeBase> KeyedRemoteScopes Field Value Type Description ConcurrentDictionary<string, RpcProcessor.RpcRemoteScopeBase> | Edit this page View Source KeyedScopes Keyed scopes (key is the scope key) Declaration protected readonly ConcurrentDictionary<string, RpcProcessor.RpcScopeBase> KeyedScopes Field Value Type Description ConcurrentDictionary<string, RpcProcessor.RpcScopeBase> | Edit this page View Source MessageId Message ID Declaration protected long MessageId Field Value Type Description long | Edit this page View Source OutgoingMessages Outgoing messages Declaration protected readonly RpcProcessor.OutgoingQueue OutgoingMessages Field Value Type Description RpcProcessor.OutgoingQueue | Edit this page View Source PeerHeartBeat Peer heartbeat Declaration protected readonly Timeout? PeerHeartBeat Field Value Type Description Timeout | Edit this page View Source PendingCalls Pending calls Declaration protected readonly ConcurrentDictionary<long, RpcProcessor.Call> PendingCalls Field Value Type Description ConcurrentDictionary<long, RpcProcessor.Call> | Edit this page View Source PendingRequests Pending RPC requests Declaration protected readonly ConcurrentDictionary<long, RpcProcessor.Request> PendingRequests Field Value Type Description ConcurrentDictionary<long, RpcProcessor.Request> | Edit this page View Source RemoteScopes Remote scopes (key is the ID) Declaration protected readonly ConcurrentDictionary<long, RpcProcessor.RpcRemoteScopeBase> RemoteScopes Field Value Type Description ConcurrentDictionary<long, RpcProcessor.RpcRemoteScopeBase> | Edit this page View Source Requests RPC request queue Declaration protected readonly RpcProcessor.RequestQueue Requests Field Value Type Description RpcProcessor.RequestQueue | Edit this page View Source ScopeId Scope ID Declaration protected long ScopeId Field Value Type Description long | Edit this page View Source Scopes Scopes (key is the ID) Declaration protected readonly ConcurrentDictionary<long, RpcProcessor.RpcScopeBase> Scopes Field Value Type Description ConcurrentDictionary<long, RpcProcessor.RpcScopeBase> | Edit this page View Source WriteSync Stream writing thread synchronization Declaration protected readonly SemaphoreSync WriteSync Field Value Type Description SemaphoreSync | Edit this page View Source _LastMessageReceived Time when the last message was received Declaration protected DateTime _LastMessageReceived Field Value Type Description DateTime | Edit this page View Source _LastMessageSent Time when the last message was sent Declaration protected DateTime _LastMessageSent Field Value Type Description DateTime | Edit this page View Source _RemoteEvents Remote events (key is the event name; values will be disposed) Declaration protected readonly ConcurrentDictionary<string, RpcEvent> _RemoteEvents Field Value Type Description ConcurrentDictionary<string, RpcEvent> Properties | Edit this page View Source LastMessageReceived Time when the last message was received Declaration public virtual DateTime LastMessageReceived { get; set; } Property Value Type Description DateTime | Edit this page View Source LastMessageSent Time when the last message was sent Declaration public virtual DateTime LastMessageSent { get; set; } Property Value Type Description DateTime | Edit this page View Source Logger Logger Declaration public virtual ILogger? Logger { get; } Property Value Type Description ILogger | Edit this page View Source MessageLoopDuration Message loop duration (only available if KeepAlive is used or PingAsync(TimeSpan, CancellationToken) was called) Declaration public TimeSpan MessageLoopDuration { get; protected set; } Property Value Type Description TimeSpan | Edit this page View Source Options Options (will be disposed) Declaration public RpcProcessorOptions Options { get; } Property Value Type Description RpcProcessorOptions | Edit this page View Source RemoteEvents Registered remote events Declaration public IEnumerable<RpcEvent> RemoteEvents { get; } Property Value Type Description IEnumerable<RpcEvent> | Edit this page View Source State Status information Declaration public virtual IEnumerable<Status> State { get; } Property Value Type Description IEnumerable<Status> Methods | Edit this page View Source AddPendingCall(in Call) Add a pending call Declaration protected virtual bool AddPendingCall(in RpcProcessor.Call call) Parameters Type Name Description RpcProcessor.Call call Call Returns Type Description bool If added | Edit this page View Source AddPendingRequest(in Request) Add a pending request Declaration protected virtual bool AddPendingRequest(in RpcProcessor.Request request) Parameters Type Name Description RpcProcessor.Request request Request Returns Type Description bool If added | Edit this page View Source AddRemoteEvent(in RpcEvent) Add a remote event Declaration protected virtual bool AddRemoteEvent(in RpcEvent e) Parameters Type Name Description RpcEvent e Event Returns Type Description bool | Edit this page View Source AddRemoteScopeAsync(RpcRemoteScopeBase) Add a remote scope Declaration protected virtual Task AddRemoteScopeAsync(RpcProcessor.RpcRemoteScopeBase scope) Parameters Type Name Description RpcProcessor.RpcRemoteScopeBase scope Scope (will be disposed) Returns Type Description Task | Edit this page View Source AddScope(RpcScopeBase) Add a scope Declaration protected virtual void AddScope(RpcProcessor.RpcScopeBase scope) Parameters Type Name Description RpcProcessor.RpcScopeBase scope Scope (will be disposed) | Edit this page View Source BeginWorkAsync() Begin working Declaration protected virtual Task BeginWorkAsync() Returns Type Description Task | Edit this page View Source CallValueAsync(string?, string, Type, CancellationToken, params object?[]) Call a RPC API method at the peer and wait for the return value Declaration public virtual Task<object?> CallValueAsync(string? api, string method, Type returnValueType, CancellationToken cancellationToken = default, params object?[] parameters) Parameters Type Name Description string api API name string method Method name Type returnValueType Return value type CancellationToken cancellationToken Cancellation token object[] parameters Parameters (won't be diposed) Returns Type Description Task<object> Return value (should be disposed, if possible) | Edit this page View Source CallValueAsync<T>(string?, string, CancellationToken, params object?[]) Call a RPC API method at the peer and wait for the return value Declaration public virtual Task<T?> CallValueAsync<T>(string? api, string method, CancellationToken cancellationToken = default, params object?[] parameters) Parameters Type Name Description string api API name string method Method name CancellationToken cancellationToken Cancellation token object[] parameters Parameters (won't be diposed) Returns Type Description Task<T> Return value (should be disposed, if possible) Type Parameters Name Description T Return value type | Edit this page View Source CallVoidAsync(string?, string, CancellationToken, params object?[]) Call a RPC API method at the peer and wait for the return value Declaration public virtual Task CallVoidAsync(string? api, string method, CancellationToken cancellationToken = default, params object?[] parameters) Parameters Type Name Description string api API name string method Method name CancellationToken cancellationToken Cancellation token object[] parameters Parameters (won't be diposed) Returns Type Description Task | Edit this page View Source CancelRequestAsync(RequestMessage) Cancel a RPC request execution at the peer Declaration protected virtual Task CancelRequestAsync(RequestMessage request) Parameters Type Name Description RequestMessage request RPC request message Returns Type Description Task | Edit this page View Source CreateCallContext(in RequestMessage, in RpcApiMethodInfo, in CancellationToken) Create a context for processing a RPC call Declaration protected virtual RpcContext CreateCallContext(in RequestMessage request, in RpcApiMethodInfo method, in CancellationToken cancellationToken) Parameters Type Name Description RequestMessage request Message RpcApiMethodInfo method API method CancellationToken cancellationToken Cancellation token Returns Type Description RpcContext Context | Edit this page View Source CreateCallQueue() Create a call queue Declaration protected virtual RpcProcessor.CallQueue CreateCallQueue() Returns Type Description RpcProcessor.CallQueue Call queue | Edit this page View Source CreateEvent(in string, in Type, in EventHandler_Delegate) Create an event Declaration protected virtual RpcEvent CreateEvent(in string name, in Type arguments, in RpcEvent.EventHandler_Delegate handler) Parameters Type Name Description string name Event name Type arguments Event arguments type RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event | Edit this page View Source CreateEvent(in string, in EventHandler_Delegate) Create an event Declaration protected virtual RpcEvent CreateEvent(in string name, in RpcEvent.EventHandler_Delegate handler) Parameters Type Name Description string name Event name RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event | Edit this page View Source CreateEvent<T>(in string, in EventHandler_Delegate) Create an event Declaration protected RpcEvent CreateEvent<T>(in string name, in RpcEvent.EventHandler_Delegate handler) where T : EventArgs Parameters Type Name Description string name Event name RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event Type Parameters Name Description T Event arguments type | Edit this page View Source CreateIncomingMessageQueue() Create an incoming messages queue Declaration protected virtual RpcProcessor.IncomingQueue CreateIncomingMessageQueue() Returns Type Description RpcProcessor.IncomingQueue Incoming messages queue | Edit this page View Source CreateOutgoingMessageQueue() Create an outgoing message queue Declaration protected virtual RpcProcessor.OutgoingQueue CreateOutgoingMessageQueue() Returns Type Description RpcProcessor.OutgoingQueue Outgoing message queue | Edit this page View Source CreateRequestQueue() Create a request queue Declaration protected virtual RpcProcessor.RequestQueue CreateRequestQueue() Returns Type Description RpcProcessor.RequestQueue Request queue | Edit this page View Source CreateScopeId() Create a scope ID Declaration protected virtual long CreateScopeId() Returns Type Description long Scope ID | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides HostedServiceBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.HostedServiceBase.DisposeCore() | Edit this page View Source EndWorkAsync() End working Declaration protected virtual Task EndWorkAsync() Returns Type Description Task | Edit this page View Source EnsureScopesAreEnabled() Ensure scopes are enabled Declaration protected virtual void EnsureScopesAreEnabled() | Edit this page View Source GetPendingCall(in long) Get a pending call Declaration protected virtual RpcProcessor.Call? GetPendingCall(in long id) Parameters Type Name Description long id ID Returns Type Description RpcProcessor.Call Call | Edit this page View Source GetPendingRequest(in long) Get a pending request Declaration protected virtual RpcProcessor.Request? GetPendingRequest(in long id) Parameters Type Name Description long id ID Returns Type Description RpcProcessor.Request Request | Edit this page View Source GetRemoteEvent(in string) Get a remote event Declaration protected virtual RpcEvent? GetRemoteEvent(in string name) Parameters Type Name Description string name Name Returns Type Description RpcEvent Event | Edit this page View Source GetRemoteScope(in long) Get a remote scope Declaration protected virtual RpcProcessor.RpcRemoteScopeBase? GetRemoteScope(in long id) Parameters Type Name Description long id ID Returns Type Description RpcProcessor.RpcRemoteScopeBase Remote scope (will be disposed) | Edit this page View Source GetRemoteScope(in string) Get a remote scope Declaration public virtual RpcProcessor.RpcRemoteScopeBase? GetRemoteScope(in string key) Parameters Type Name Description string key Key Returns Type Description RpcProcessor.RpcRemoteScopeBase Remote scope (will be disposed) | Edit this page View Source GetScope(in long) Get a scope Declaration protected virtual RpcProcessor.RpcScopeBase? GetScope(in long id) Parameters Type Name Description long id ID Returns Type Description RpcProcessor.RpcScopeBase Scope (will be disposed) | Edit this page View Source GetScope(in string) Get a scope Declaration public virtual RpcProcessor.RpcScopeBase? GetScope(in string key) Parameters Type Name Description string key Key Returns Type Description RpcProcessor.RpcScopeBase Scope (will be disposed) | Edit this page View Source HandleCallCancellationAsync(CancelMessage) Handle a RPC request cancellation (processing will be stopped on handler exception) Declaration protected virtual Task HandleCallCancellationAsync(CancelMessage message) Parameters Type Name Description CancelMessage message Message Returns Type Description Task | Edit this page View Source HandleErrorResponseAsync(ErrorResponseMessage) Handle a RPC error response (processing will be stopped on handler exception) Declaration protected virtual Task HandleErrorResponseAsync(ErrorResponseMessage message) Parameters Type Name Description ErrorResponseMessage message Message Returns Type Description Task | Edit this page View Source HandleEventAsync(EventMessage) Handle a RPC event (processing will be stopped on handler exception) Declaration protected virtual Task HandleEventAsync(EventMessage message) Parameters Type Name Description EventMessage message Message Returns Type Description Task | Edit this page View Source HandleHeartBeatMessageAsync(IRpcMessage) Handle a heartbeat message Declaration protected virtual Task<bool> HandleHeartBeatMessageAsync(IRpcMessage message) Parameters Type Name Description IRpcMessage message Message Returns Type Description Task<bool> If the message was handled | Edit this page View Source HandleHeartBeatTimeoutAsync(Timeout, EventArgs) Handle a heartbeat timeout (processing should be stopped on handler exception) Declaration protected virtual void HandleHeartBeatTimeoutAsync(Timeout sender, EventArgs e) Parameters Type Name Description Timeout sender Sender EventArgs e Arguments | Edit this page View Source HandleIncomingCustomMessageAsync(IRpcMessage) Handle an incoming custom message (will disconnect on exception by this method) Declaration protected virtual Task<bool> HandleIncomingCustomMessageAsync(IRpcMessage message) Parameters Type Name Description IRpcMessage message Message Returns Type Description Task<bool> If handled | Edit this page View Source HandleIncomingMessageAsync(IRpcMessage) Handle an incoming message (should call StopExceptionalAndDisposeAsync(Exception) on exception) Declaration protected virtual Task HandleIncomingMessageAsync(IRpcMessage message) Parameters Type Name Description IRpcMessage message Message Returns Type Description Task | Edit this page View Source HandleInvalidResponseReturnValueAsync(ResponseMessage) Handle an invalid response return value (this method shouldn't throw) Declaration protected virtual Task<bool> HandleInvalidResponseReturnValueAsync(ResponseMessage message) Parameters Type Name Description ResponseMessage message Message Returns Type Description Task<bool> If handled | Edit this page View Source HandlePeerHeartBeatTimeoutAsync(Timeout, EventArgs) Handle a peer heartbeat timeout Declaration protected virtual void HandlePeerHeartBeatTimeoutAsync(Timeout sender, EventArgs e) Parameters Type Name Description Timeout sender Sender EventArgs e Arguments | Edit this page View Source HandlePingMessageAsync(PingMessage) Handle a ping message (processing should be stopped on handler exception) Declaration protected virtual Task HandlePingMessageAsync(PingMessage message) Parameters Type Name Description PingMessage message Message Returns Type Description Task | Edit this page View Source HandlePongMessageAsync(PongMessage) Handle a pong message (processing should be stopped on handler exception) Declaration protected virtual Task HandlePongMessageAsync(PongMessage message) Parameters Type Name Description PongMessage message Message Returns Type Description Task | Edit this page View Source HandleRequestAsync(RequestMessage) Handle a RPC request (processing will be stopped on handler exception) Declaration protected virtual Task HandleRequestAsync(RequestMessage message) Parameters Type Name Description RequestMessage message Message Returns Type Description Task | Edit this page View Source HandleResponseAsync(ResponseMessage) Handle a RPC response (processing will be stopped on handler exception) Declaration protected virtual Task HandleResponseAsync(ResponseMessage message) Parameters Type Name Description ResponseMessage message Message Returns Type Description Task | Edit this page View Source HandleValueOnErrorAsync(object, bool, Exception) Handle a parameter or return value on error (this method shouldn't throw) Declaration protected virtual Task<bool> HandleValueOnErrorAsync(object value, bool outgoing, Exception ex) Parameters Type Name Description object value Value (will be disposed) bool outgoing If the value was going to be sent to the peer Exception ex Exception Returns Type Description Task<bool> If handled | Edit this page View Source HandleValuesOnErrorAsync(bool, Exception, params object?[]) Handle parameter or return values on error (this method shouldn't throw) Declaration protected virtual Task HandleValuesOnErrorAsync(bool outgoing, Exception ex, params object?[] values) Parameters Type Name Description bool outgoing If the values were going to be sent to the peer Exception ex Exception object[] values Values (will be disposed) Returns Type Description Task | Edit this page View Source OnCallErrorAsync(Call, Exception, List<object?>?, object?) Handle a call processing error (parameter and return value handling; this method should not throw) Declaration protected virtual Task OnCallErrorAsync(RpcProcessor.Call call, Exception error, List<object?>? parameters, object? returnValue) Parameters Type Name Description RpcProcessor.Call call RPC call Exception error Error List<object> parameters API method parameters object returnValue Return value Returns Type Description Task | Edit this page View Source OnCallExecutedAsync(Call, List<object?>) Handle an executed call (parameter handling) Declaration protected virtual Task OnCallExecutedAsync(RpcProcessor.Call call, List<object?> parameters) Parameters Type Name Description RpcProcessor.Call call RPC call List<object> parameters API method parameters Returns Type Description Task | Edit this page View Source OnCallRespondedAsync(Call, object?) Handle a responded call Declaration protected virtual Task OnCallRespondedAsync(RpcProcessor.Call call, object? returnValue) Parameters Type Name Description RpcProcessor.Call call RPC call object returnValue Return value Returns Type Description Task | Edit this page View Source PingAsync(TimeSpan, CancellationToken) Send a ping message and wait for the pong message Declaration public virtual Task PingAsync(TimeSpan timeout, CancellationToken cancellationToken = default) Parameters Type Name Description TimeSpan timeout Timeout CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source PreHandleIncomingMessageAsync(IRpcMessage) Handle an incoming message (should call StopExceptionalAndDisposeAsync(Exception) on exception) Declaration protected virtual Task<bool> PreHandleIncomingMessageAsync(IRpcMessage message) Parameters Type Name Description IRpcMessage message Message Returns Type Description Task<bool> If handled | Edit this page View Source RaiseEventAsync(string, EventArgs?, bool, CancellationToken) Raise an event at the peer Declaration public virtual Task RaiseEventAsync(string name, EventArgs? e = null, bool wait = false, CancellationToken cancellationToken = default) Parameters Type Name Description string name Event name EventArgs e Event arguments bool wait Wait for remote event handlers to finish? CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source RaiseOnRemoteEvent(RpcEvent?, EventMessage) Raise the OnRemoteEvent Declaration protected virtual void RaiseOnRemoteEvent(RpcEvent? handler, EventMessage message) Parameters Type Name Description RpcEvent handler Event handler EventMessage message Event RPC message | Edit this page View Source RegisterEvent(in string, in Type, in EventHandler_Delegate) Register a remote event handler Declaration public virtual RpcEvent RegisterEvent(in string name, in Type arguments, in RpcEvent.EventHandler_Delegate handler) Parameters Type Name Description string name Event name Type arguments Event arguments type (must be an EventArgs) RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event | Edit this page View Source RegisterEvent(in string, in EventHandler_Delegate) Register a remote event handler Declaration public virtual RpcEvent RegisterEvent(in string name, in RpcEvent.EventHandler_Delegate handler) Parameters Type Name Description string name Event name RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event | Edit this page View Source RegisterEvent<T>(in string, in EventHandler_Delegate) Register a remote event handler Declaration public RpcEvent RegisterEvent<T>(in string name, in RpcEvent.EventHandler_Delegate handler) where T : EventArgs Parameters Type Name Description string name Event name RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event Type Parameters Name Description T Event arguments type | Edit this page View Source RemovePendingCall(in long) Remove a pending call Declaration protected virtual RpcProcessor.Call? RemovePendingCall(in long id) Parameters Type Name Description long id ID Returns Type Description RpcProcessor.Call | Edit this page View Source RemovePendingCall(in Call) Remove a pending call Declaration protected virtual void RemovePendingCall(in RpcProcessor.Call call) Parameters Type Name Description RpcProcessor.Call call Call | Edit this page View Source RemovePendingRequest(in long) Remove a pending request Declaration protected virtual RpcProcessor.Request? RemovePendingRequest(in long id) Parameters Type Name Description long id ID Returns Type Description RpcProcessor.Request Request | Edit this page View Source RemovePendingRequest(in Request) Remove a pending request Declaration protected virtual void RemovePendingRequest(in RpcProcessor.Request request) Parameters Type Name Description RpcProcessor.Request request Request | Edit this page View Source RemoveRemoteEvent(in string) Remove a remote event Declaration protected virtual RpcEvent? RemoveRemoteEvent(in string name) Parameters Type Name Description string name Name Returns Type Description RpcEvent Event | Edit this page View Source RemoveRemoteEvent(in RpcEvent) Remove a remote event Declaration protected virtual bool RemoveRemoteEvent(in RpcEvent e) Parameters Type Name Description RpcEvent e Event Returns Type Description bool If removed | Edit this page View Source RemoveRemoteScope(in long) Remove a remote scope Declaration protected virtual RpcProcessor.RpcRemoteScopeBase? RemoveRemoteScope(in long id) Parameters Type Name Description long id ID Returns Type Description RpcProcessor.RpcRemoteScopeBase Removed remote scope (don't forget to dispose!) | Edit this page View Source RemoveRemoteScope(in RpcRemoteScopeBase) Remove a remote scope Declaration protected virtual bool RemoveRemoteScope(in RpcProcessor.RpcRemoteScopeBase scope) Parameters Type Name Description RpcProcessor.RpcRemoteScopeBase scope Remote scope (don't forget to dispose!) Returns Type Description bool If removed | Edit this page View Source RemoveScope(in long) Remove a scope Declaration protected virtual RpcProcessor.RpcScopeBase? RemoveScope(in long id) Parameters Type Name Description long id ID Returns Type Description RpcProcessor.RpcScopeBase Removed scope (don't forget to dispose!) | Edit this page View Source RemoveScope(in RpcScopeBase) Remove a scope Declaration protected virtual bool RemoveScope(in RpcProcessor.RpcScopeBase scope) Parameters Type Name Description RpcProcessor.RpcScopeBase scope Scope (don't forget to dispose!) Returns Type Description bool If removed | Edit this page View Source SendCallErrorResponseAsync(RequestMessage, Exception) Send an error response for a RPC request processing exception Declaration protected virtual Task SendCallErrorResponseAsync(RequestMessage message, Exception exception) Parameters Type Name Description RequestMessage message RPC request Exception exception Exception Returns Type Description Task | Edit this page View Source SendMessageAsync(IRpcMessage, int, CancellationToken) Send a RPC message to the peer Declaration protected virtual Task SendMessageAsync(IRpcMessage message, int priority, CancellationToken cancellationToken = default) Parameters Type Name Description IRpcMessage message Message int priority Priority (higher value will be processed faster) CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source SendMessageAsync(IRpcMessage, CancellationToken) Send a RPC message to the peer Declaration protected virtual Task SendMessageAsync(IRpcMessage message, CancellationToken cancellationToken = default) Parameters Type Name Description IRpcMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source SendMessageAsync(QueuedMessage) Send a RPC message to the peer Declaration protected virtual Task SendMessageAsync(RpcProcessor.OutgoingQueue.QueuedMessage queuedMessage) Parameters Type Name Description RpcProcessor.OutgoingQueue.QueuedMessage queuedMessage Message (won't be disposed) Returns Type Description Task | Edit this page View Source SendResponseAsync(RequestMessage, object?) Send a response for a RPC request Declaration protected virtual Task SendResponseAsync(RequestMessage message, object? returnValue) Parameters Type Name Description RequestMessage message RPC request object returnValue Return value (should be null, if WantsReturnValue is false) Returns Type Description Task | Edit this page View Source StopExceptionalAndDisposeAsync(Exception) Stop exceptional and dispose Declaration protected virtual Task StopExceptionalAndDisposeAsync(Exception ex) Parameters Type Name Description Exception ex Exception Returns Type Description Task | Edit this page View Source WorkerAsync() Service worker Declaration protected override Task WorkerAsync() Returns Type Description Task Overrides wan24.Core.HostedServiceBase.WorkerAsync() Events | Edit this page View Source OnRemoteEvent Raised on remote event Declaration public event RpcProcessor.RemoteEventHandler_Delegate? OnRemoteEvent Event Type Type Description RpcProcessor.RemoteEventHandler_Delegate Implements wan24.Core.IWillDispose wan24.Core.IServiceWorker IHostedService wan24.Core.IDisposableObject IDisposable IAsyncDisposable wan24.Core.IExportUserActions wan24.Core.IStatusProvider"
  },
  "api/wan24.RPC.Processing.RpcProcessorOptions.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessorOptions.html",
    "title": "Class RpcProcessorOptions | wan24-RPC",
    "keywords": "Class RpcProcessorOptions RPC processor options Inheritance object DisposableRecordBase RpcProcessorOptions Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcProcessorOptions> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public record RpcProcessorOptions : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcProcessorOptions> Constructors | Edit this page View Source RpcProcessorOptions() Constructor Declaration protected RpcProcessorOptions() | Edit this page View Source RpcProcessorOptions(params object[]) Constructor Declaration public RpcProcessorOptions(params object[] apis) Parameters Type Name Description object[] apis APIs (will be disposed per default) | Edit this page View Source RpcProcessorOptions(params Type[]) Constructor Declaration public RpcProcessorOptions(params Type[] apis) Parameters Type Name Description Type[] apis API types (instances will be disposed per default) Fields | Edit this page View Source MIN_RPC_VERSION Min. supported RPC protocol version Declaration public const int MIN_RPC_VERSION = 1 Field Value Type Description int | Edit this page View Source RPC_VERSION RPC protocol version Declaration public const int RPC_VERSION = 1 Field Value Type Description int Properties | Edit this page View Source API API (infos will be disposed) Declaration public Dictionary<string, RpcApiInfo> API { get; init; } Property Value Type Description Dictionary<string, RpcApiInfo> | Edit this page View Source CallQueue Call queue options Declaration public required ParallelQueueOptions CallQueue { get; init; } Property Value Type Description ParallelQueueOptions | Edit this page View Source DefaultContext Default context for an incoming RPC call (will be disposed) Declaration public RpcContext? DefaultContext { get; init; } Property Value Type Description RpcContext | Edit this page View Source DefaultServices Default service provider for an incoming RPC call (will be disposed) Declaration public IServiceProvider? DefaultServices { get; init; } Property Value Type Description IServiceProvider | Edit this page View Source DisconnectOnApiError Disconnect the peer on API error (when processing RPC requests)? Declaration public bool DisconnectOnApiError { get; init; } Property Value Type Description bool | Edit this page View Source FlushStream Flush the Stream after sending a message? Declaration public bool FlushStream { get; init; } Property Value Type Description bool | Edit this page View Source IncomingMessageQueue Incoming message queue options Declaration public required ParallelQueueOptions IncomingMessageQueue { get; init; } Property Value Type Description ParallelQueueOptions | Edit this page View Source KeepAlive Keep alive options Declaration public KeepAliveOptions? KeepAlive { get; init; } Property Value Type Description KeepAliveOptions | Edit this page View Source Logger Logger Declaration public ILogger? Logger { get; init; } Property Value Type Description ILogger | Edit this page View Source MaxMessageLength Max. message length (I/O) in bytes at both peers Declaration public int MaxMessageLength { get; init; } Property Value Type Description int | Edit this page View Source OutgoingMessageQueueCapacity Outgoing message queue capacity (for priority message sending) Declaration public required int OutgoingMessageQueueCapacity { get; init; } Property Value Type Description int | Edit this page View Source Priorities RPC message priority options Declaration public MessagePriorityOptions Priorities { get; init; } Property Value Type Description MessagePriorityOptions | Edit this page View Source RequestQueue Request queue options Declaration public required ParallelQueueOptions RequestQueue { get; init; } Property Value Type Description ParallelQueueOptions | Edit this page View Source RpcVersion Peer RPC protocol version Declaration public int RpcVersion { get; set; } Property Value Type Description int | Edit this page View Source SerializerVersion Stream serializer version Declaration public int SerializerVersion { get; init; } Property Value Type Description int | Edit this page View Source Stream Bi-directional RPC stream (will be disposed) Declaration public required Stream Stream { get; init; } Property Value Type Description Stream | Edit this page View Source Streams Stream options Declaration public StreamScopeOptions? Streams { get; init; } Property Value Type Description StreamScopeOptions | Edit this page View Source SyncObject An object for thread synchronization Declaration public object SyncObject { get; } Property Value Type Description object | Edit this page View Source UseScopes Use scopes? Declaration public bool UseScopes { get; init; } Property Value Type Description bool Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableRecordBase.DisposeCore() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessorTable.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessorTable.html",
    "title": "Class RpcProcessorTable | wan24-RPC",
    "keywords": "Class RpcProcessorTable RPC processor table Inheritance object RpcProcessorTable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public static class RpcProcessorTable Fields | Edit this page View Source Processors RPC processors (key is the object hash code) Declaration public static readonly ConcurrentDictionary<int, RpcProcessor> Processors Field Value Type Description ConcurrentDictionary<int, RpcProcessor>"
  },
  "api/wan24.RPC.Processing.Scopes.RpcScopeEvent.EventHandler_Delegate.html": {
    "href": "api/wan24.RPC.Processing.Scopes.RpcScopeEvent.EventHandler_Delegate.html",
    "title": "Delegate RpcScopeEvent.EventHandler_Delegate | wan24-RPC",
    "keywords": "Delegate RpcScopeEvent.EventHandler_Delegate Delegate for an event handler Namespace: wan24.RPC.Processing.Scopes Assembly: wan24RPC.dll Syntax public delegate Task RpcScopeEvent.EventHandler_Delegate(RpcScopeEvent eventInfo, IRpcScopeEventMessage message, CancellationToken cancellationToken) Parameters Type Name Description RpcScopeEvent eventInfo Event informations IRpcScopeEventMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task Delegate for an event handler"
  },
  "api/wan24.RPC.Processing.Scopes.RpcScopeEvent.html": {
    "href": "api/wan24.RPC.Processing.Scopes.RpcScopeEvent.html",
    "title": "Class RpcScopeEvent | wan24-RPC",
    "keywords": "Class RpcScopeEvent RPC scope event Inheritance object RpcScopeEvent Implements IEquatable<RpcScopeEvent> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Scopes Assembly: wan24RPC.dll Syntax public record RpcScopeEvent : IEquatable<RpcScopeEvent> Fields | Edit this page View Source SyncObject An object for thread synchronization Declaration protected readonly object SyncObject Field Value Type Description object Properties | Edit this page View Source Arguments Event arguments type (must be a EventArgs) Declaration public Type? Arguments { get; init; } Property Value Type Description Type | Edit this page View Source FirstRaised First raised time Declaration public DateTime FirstRaised { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Handler Event handler Declaration public required RpcScopeEvent.EventHandler_Delegate Handler { get; init; } Property Value Type Description RpcScopeEvent.EventHandler_Delegate | Edit this page View Source LastRaised Last raised time Declaration public DateTime LastRaised { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Name Event name Declaration public required string Name { get; init; } Property Value Type Description string | Edit this page View Source Processor Processor Declaration public required RpcProcessor Processor { get; init; } Property Value Type Description RpcProcessor | Edit this page View Source RaiseCount Number of times the event was raised Declaration public long RaiseCount { get; protected set; } Property Value Type Description long | Edit this page View Source ScopeId Scope ID Declaration public required long ScopeId { get; init; } Property Value Type Description long Methods | Edit this page View Source RaiseEventAsync(IRpcScopeEventMessage, CancellationToken) Raise the event Declaration public virtual Task RaiseEventAsync(IRpcScopeEventMessage message, CancellationToken cancellationToken) Parameters Type Name Description IRpcScopeEventMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task Implements IEquatable<T>"
  },
  "api/wan24.RPC.Processing.Scopes.RpcScopeTypes.html": {
    "href": "api/wan24.RPC.Processing.Scopes.RpcScopeTypes.html",
    "title": "Enum RpcScopeTypes | wan24-RPC",
    "keywords": "Enum RpcScopeTypes RPC scope types enumeration (use >255 for your custom scope implementations) Namespace: wan24.RPC.Processing.Scopes Assembly: wan24RPC.dll Syntax public enum RpcScopeTypes Fields Name Description Cancellation Cancellation Enumerable Enumerable Scope Simple sope without any specific functionality Stream Stream"
  },
  "api/wan24.RPC.Processing.Scopes.RpcScopes.ParameterScopeFactory_Delegate.html": {
    "href": "api/wan24.RPC.Processing.Scopes.RpcScopes.ParameterScopeFactory_Delegate.html",
    "title": "Delegate RpcScopes.ParameterScopeFactory_Delegate | wan24-RPC",
    "keywords": "Delegate RpcScopes.ParameterScopeFactory_Delegate Delegate for a parameter scope factory delegate Namespace: wan24.RPC.Processing.Scopes Assembly: wan24RPC.dll Syntax public delegate Task<RpcProcessor.RpcScopeBase?> RpcScopes.ParameterScopeFactory_Delegate(RpcProcessor processor, object parameterValue, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor processor RPC processor object parameterValue RPC request parameter CancellationToken cancellationToken Cancellation token Returns Type Description Task<RpcProcessor.RpcScopeBase> RPC scope"
  },
  "api/wan24.RPC.Processing.Scopes.RpcScopes.RemoteScopeFactory_Delegate.html": {
    "href": "api/wan24.RPC.Processing.Scopes.RpcScopes.RemoteScopeFactory_Delegate.html",
    "title": "Delegate RpcScopes.RemoteScopeFactory_Delegate | wan24-RPC",
    "keywords": "Delegate RpcScopes.RemoteScopeFactory_Delegate Delegate for a remote scope factory Namespace: wan24.RPC.Processing.Scopes Assembly: wan24RPC.dll Syntax public delegate Task<RpcProcessor.RpcRemoteScopeBase> RpcScopes.RemoteScopeFactory_Delegate(RpcProcessor processor, RpcScopeValue value, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor processor RPC processor RpcScopeValue value RPC scope value CancellationToken cancellationToken Cancellation token Returns Type Description Task<RpcProcessor.RpcRemoteScopeBase> RPC remote scope"
  },
  "api/wan24.RPC.Processing.Scopes.RpcScopes.ReturnScopeFactory_Delegate.html": {
    "href": "api/wan24.RPC.Processing.Scopes.RpcScopes.ReturnScopeFactory_Delegate.html",
    "title": "Delegate RpcScopes.ReturnScopeFactory_Delegate | wan24-RPC",
    "keywords": "Delegate RpcScopes.ReturnScopeFactory_Delegate Delegate for a return scope factory delegate Namespace: wan24.RPC.Processing.Scopes Assembly: wan24RPC.dll Syntax public delegate Task<RpcProcessor.RpcScopeBase?> RpcScopes.ReturnScopeFactory_Delegate(RpcProcessor processor, object returnValue, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor processor RPC processor object returnValue RPC method return value CancellationToken cancellationToken Cancellation token Returns Type Description Task<RpcProcessor.RpcScopeBase> RPC scope"
  },
  "api/wan24.RPC.Processing.Scopes.RpcScopes.ScopeFactory_Delegate.html": {
    "href": "api/wan24.RPC.Processing.Scopes.RpcScopes.ScopeFactory_Delegate.html",
    "title": "Delegate RpcScopes.ScopeFactory_Delegate | wan24-RPC",
    "keywords": "Delegate RpcScopes.ScopeFactory_Delegate Delegate for a scope factory Namespace: wan24.RPC.Processing.Scopes Assembly: wan24RPC.dll Syntax public delegate Task<RpcProcessor.RpcScopeBase> RpcScopes.ScopeFactory_Delegate(RpcProcessor processor, IRpcScopeParameter parameter, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor processor RPC processor IRpcScopeParameter parameter RPC scope parameter CancellationToken cancellationToken Cancellation token Returns Type Description Task<RpcProcessor.RpcScopeBase> RPC scope"
  },
  "api/wan24.RPC.Processing.Scopes.RpcScopes.html": {
    "href": "api/wan24.RPC.Processing.Scopes.RpcScopes.html",
    "title": "Class RpcScopes | wan24-RPC",
    "keywords": "Class RpcScopes RPC scope factories Inheritance object RpcScopes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing.Scopes Assembly: wan24RPC.dll Syntax public static class RpcScopes Fields | Edit this page View Source Factories Registered scope factories (key is the scope type) Declaration public static readonly Dictionary<int, RpcScopes.ScopeFactory_Delegate> Factories Field Value Type Description Dictionary<int, RpcScopes.ScopeFactory_Delegate> | Edit this page View Source ParameterScopeFactories Registered parameter scope factories (key is the parameter value type) Declaration public static readonly Dictionary<Type, RpcScopes.ParameterScopeFactory_Delegate> ParameterScopeFactories Field Value Type Description Dictionary<Type, RpcScopes.ParameterScopeFactory_Delegate> | Edit this page View Source RemoteFactories Registered remote scope factories (key is the scope type) Declaration public static readonly Dictionary<int, RpcScopes.RemoteScopeFactory_Delegate> RemoteFactories Field Value Type Description Dictionary<int, RpcScopes.RemoteScopeFactory_Delegate> | Edit this page View Source ReturnScopeFactories Registered return scope factories (key is the return value type) Declaration public static readonly Dictionary<Type, RpcScopes.ReturnScopeFactory_Delegate> ReturnScopeFactories Field Value Type Description Dictionary<Type, RpcScopes.ReturnScopeFactory_Delegate> Methods | Edit this page View Source GetParameterScopeFactory(Type) Get the parameter scope factory for a parameter value type Declaration public static RpcScopes.ParameterScopeFactory_Delegate? GetParameterScopeFactory(Type type) Parameters Type Name Description Type type Parameter value type Returns Type Description RpcScopes.ParameterScopeFactory_Delegate Parameter scope factory | Edit this page View Source GetReturnScopeFactory(Type) Get the return scope factory for a return value type Declaration public static RpcScopes.ReturnScopeFactory_Delegate? GetReturnScopeFactory(Type type) Parameters Type Name Description Type type Return value type Returns Type Description RpcScopes.ReturnScopeFactory_Delegate Return scope factory | Edit this page View Source RegisterScope(int, ScopeFactory_Delegate, RemoteScopeFactory_Delegate, Type, ParameterScopeFactory_Delegate, Type, ReturnScopeFactory_Delegate) Register a custom scope Declaration public static void RegisterScope(int scopeType, RpcScopes.ScopeFactory_Delegate scopeFactory, RpcScopes.RemoteScopeFactory_Delegate remoteScopeFactory, Type parameterType, RpcScopes.ParameterScopeFactory_Delegate parameterScopeFactory, Type returnType, RpcScopes.ReturnScopeFactory_Delegate returnScopeFactory) Parameters Type Name Description int scopeType Scope type (see RpcScopeTypes) RpcScopes.ScopeFactory_Delegate scopeFactory Scope factory RpcScopes.RemoteScopeFactory_Delegate remoteScopeFactory Remote scope factory Type parameterType Parameter type RpcScopes.ParameterScopeFactory_Delegate parameterScopeFactory Parameter scope factory Type returnType Return type RpcScopes.ReturnScopeFactory_Delegate returnScopeFactory Return scope factory Exceptions Type Condition InvalidOperationException"
  },
  "api/wan24.RPC.Processing.Scopes.html": {
    "href": "api/wan24.RPC.Processing.Scopes.html",
    "title": "Namespace wan24.RPC.Processing.Scopes | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Processing.Scopes Classes RpcScopeEvent RPC scope event RpcScopes RPC scope factories Enums RpcScopeTypes RPC scope types enumeration (use >255 for your custom scope implementations) Delegates RpcScopeEvent.EventHandler_Delegate Delegate for an event handler RpcScopes.ParameterScopeFactory_Delegate Delegate for a parameter scope factory delegate RpcScopes.RemoteScopeFactory_Delegate Delegate for a remote scope factory RpcScopes.ReturnScopeFactory_Delegate Delegate for a return scope factory delegate RpcScopes.ScopeFactory_Delegate Delegate for a scope factory"
  },
  "api/wan24.RPC.Processing.Values.RpcScopeValue.html": {
    "href": "api/wan24.RPC.Processing.Values.RpcScopeValue.html",
    "title": "Class RpcScopeValue | wan24-RPC",
    "keywords": "Class RpcScopeValue RPC scope value Inheritance object ValidatableRecordBase StreamSerializerRecordBase RpcScopeValue Implements IObjectValidatable IValidatableObject IEquatable<ValidatableRecordBase> IStreamSerializerVersion IStreamSerializer IEquatable<StreamSerializerRecordBase> IEquatable<RpcScopeValue> Inherited Members StreamSerializerRecordBase.BASE_VERSION StreamSerializerRecordBase.ToString() StreamSerializerRecordBase.PrintMembers(StringBuilder) StreamSerializerRecordBase.GetHashCode() StreamSerializerRecordBase.Equals(object) StreamSerializerRecordBase.Equals(ValidatableRecordBase) StreamSerializerRecordBase.Equals(StreamSerializerRecordBase) StreamSerializerRecordBase.<Clone>$() StreamSerializerRecordBase.EqualityContract StreamSerializerRecordBase.SerializedObjectVersion StreamSerializerRecordBase.SerializerVersion ValidatableRecordBase.Validate(ValidationContext) ValidatableRecordBase.ObjectValidatable(IObjectValidatable) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing.Values Assembly: wan24RPC.dll Syntax [Rpc] public record RpcScopeValue : StreamSerializerRecordBase, IObjectValidatable, IValidatableObject, IEquatable<ValidatableRecordBase>, IStreamSerializerVersion, IStreamSerializer, IEquatable<StreamSerializerRecordBase>, IEquatable<RpcScopeValue> Remarks Constructor Constructors | Edit this page View Source RpcScopeValue() RPC scope value Declaration public RpcScopeValue() Remarks Constructor Fields | Edit this page View Source VERSION Object version Declaration public const int VERSION = 1 Field Value Type Description int Properties | Edit this page View Source DisposeScopeValue Dispose the scope value when done? Declaration public bool DisposeScopeValue { get; set; } Property Value Type Description bool | Edit this page View Source DisposeScopeValueOnError If to dispose the scope value on error Declaration public bool DisposeScopeValueOnError { get; set; } Property Value Type Description bool | Edit this page View Source HlObjectVersion Higher level object version Declaration [JsonIgnore] public virtual int HlObjectVersion { get; } Property Value Type Description int | Edit this page View Source Id Scope ID Declaration [Range(1, 9.223372036854776E+18)] public required long Id { get; set; } Property Value Type Description long | Edit this page View Source InformMasterWhenDisposing Inform the scope master when disposing the scope value Declaration public bool InformMasterWhenDisposing { get; set; } Property Value Type Description bool | Edit this page View Source IsStored If the scope should be stored Declaration public bool IsStored { get; set; } Property Value Type Description bool | Edit this page View Source Key Scope key Declaration [StringLength(255, MinimumLength = 1)] public string? Key { get; set; } Property Value Type Description string | Edit this page View Source MinHlObjectVersion Minimum supported higher level object version (see SerializedHlObjectVersion) Declaration protected virtual int? MinHlObjectVersion { get; } Property Value Type Description int? | Edit this page View Source Parameter Parameter Declaration [JsonIgnore] public IRpcScopeParameter? Parameter { get; init; } Property Value Type Description IRpcScopeParameter | Edit this page View Source ReplaceExistingScope Replace an existing keyed scope (will be disposed)? Declaration public bool ReplaceExistingScope { get; set; } Property Value Type Description bool | Edit this page View Source SerializedHlObjectVersion Deserialized higher level object version Declaration protected int? SerializedHlObjectVersion { get; } Property Value Type Description int? | Edit this page View Source Type Scope type (see RpcScopeTypes) Declaration [Range(0, 2147483647)] public required int Type { get; set; } Property Value Type Description int Methods | Edit this page View Source ApplySettings(RpcApiMethodInfo) Apply settings from a method return value Declaration public virtual void ApplySettings(RpcApiMethodInfo mi) Parameters Type Name Description RpcApiMethodInfo mi Method | Edit this page View Source ApplySettings(RpcApiMethodParameterInfo) Apply settings from a method parameter Declaration public virtual void ApplySettings(RpcApiMethodParameterInfo pi) Parameters Type Name Description RpcApiMethodParameterInfo pi Parameter | Edit this page View Source Deserialize(Stream, int) Deserialize Declaration protected override sealed void Deserialize(Stream stream, int version) Parameters Type Name Description Stream stream Stream int version Serializer version Overrides StreamSerializerRecordBase.Deserialize(Stream, int) | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides StreamSerializerRecordBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source Serialize(Stream) Serialize Declaration protected override sealed void Serialize(Stream stream) Parameters Type Name Description Stream stream Stream Overrides StreamSerializerRecordBase.Serialize(Stream) | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides StreamSerializerRecordBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject IEquatable<T> wan24.StreamSerializerExtensions.IStreamSerializerVersion wan24.StreamSerializerExtensions.IStreamSerializer IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.Values.html": {
    "href": "api/wan24.RPC.Processing.Values.html",
    "title": "Namespace wan24.RPC.Processing.Values | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Processing.Values Classes RpcScopeValue RPC scope value"
  },
  "api/wan24.RPC.Processing.html": {
    "href": "api/wan24.RPC.Processing.html",
    "title": "Namespace wan24.RPC.Processing | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Processing Classes RpcContext RPC context RpcEvent RPC event RpcProcessor RPC processor RpcProcessor.Call RPC call (context) RpcProcessor.CallQueue RPC call queue RpcProcessor.IncomingQueue Incoming message queue RpcProcessor.OutgoingQueue Outgoing message queue RpcProcessor.OutgoingQueue.QueuedMessage Queued outgoing message RpcProcessor.RemoteEventArgs Remote event arguments RpcProcessor.Request RPC request (context) RpcProcessor.RequestQueue RPC request queue RpcProcessor.RpcRemoteScopeBase Base class for a RPC remote scope RpcProcessor.RpcScopeBase Base class for a RPC scope RpcProcessor.RpcScopeProcessorBase Base class for a RPC scope processor RpcProcessor.RpcScopeProcessorBase.RemoteEventArgs Remote event arguments RpcProcessorOptions RPC processor options RpcProcessorTable RPC processor table Interfaces IRpcProcessorInternals Interface for a RPC processor which exports its internals IRpcScopeInternals Interface for a RPC scope which exports its internals Delegates RpcContext.Unauthorized_Delegate Unauthorized handler delegate RpcEvent.EventHandler_Delegate Delegate for an event handler RpcProcessor.RemoteEventHandler_Delegate Delegate for a remote event handler RpcProcessor.RpcScopeProcessorBase.RemoteEventHandler_Delegate Delegate for a remote event handler"
  },
  "api/wan24.RPC.Sdk.IRpcSdk.html": {
    "href": "api/wan24.RPC.Sdk.IRpcSdk.html",
    "title": "Interface IRpcSdk | wan24-RPC",
    "keywords": "Interface IRpcSdk Interface for a RPC SDK Inherited Members IDisposableObject.IsDisposing IDisposableObject.IsDisposed IDisposableObject.OnDisposing IDisposableObject.OnDisposed IDisposable.Dispose() IAsyncDisposable.DisposeAsync() Namespace: wan24.RPC.Sdk Assembly: wan24RPC.dll Syntax public interface IRpcSdk : IDisposableObject, IDisposable, IAsyncDisposable"
  },
  "api/wan24.RPC.Sdk.RpcSdkBase-1.html": {
    "href": "api/wan24.RPC.Sdk.RpcSdkBase-1.html",
    "title": "Class RpcSdkBase<T> | wan24-RPC",
    "keywords": "Class RpcSdkBase<T> Base class for a RPC SDK Inheritance object DisposableBase RpcSdkBase<T> RpcSdkBase RpcSdkBaseExt<T> Implements IWillDispose IRpcSdk IDisposableObject IDisposable IAsyncDisposable Inherited Members DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Sdk Assembly: wan24RPC.dll Syntax public abstract class RpcSdkBase<T> : DisposableBase, IWillDispose, IRpcSdk, IDisposableObject, IDisposable, IAsyncDisposable where T : RpcProcessor Type Parameters Name Description T RPC processor type Constructors | Edit this page View Source RpcSdkBase() Constructor Declaration protected RpcSdkBase() | Edit this page View Source RpcSdkBase(in T) Constructor Declaration protected RpcSdkBase(in T processor) Parameters Type Name Description T processor RPC processor (will be disposed) Fields | Edit this page View Source Cancellation Cancellation Declaration protected readonly CancellationTokenSource Cancellation Field Value Type Description CancellationTokenSource | Edit this page View Source DisposeProcessor If to dispose the Processor when disposing Declaration protected bool DisposeProcessor Field Value Type Description bool | Edit this page View Source _Processor RPC processor (will be disposed) Declaration protected T? _Processor Field Value Type Description T Properties | Edit this page View Source Processor RPC processor (will be disposed) Declaration protected virtual T? Processor { get; set; } Property Value Type Description T Methods | Edit this page View Source CallValueAsync(string?, string, Type, TimeSpan, CancellationToken, params object?[]) Call a RPC API method at the peer and wait for the return value (may throw after the remote execution) Declaration protected virtual Task<object?> CallValueAsync(string? api, string method, Type returnValueType, TimeSpan timeout = default, CancellationToken cancellationToken = default, params object?[] parameters) Parameters Type Name Description string api API name string method Method name Type returnValueType Return value type TimeSpan timeout Timeout CancellationToken cancellationToken Cancellation token object[] parameters Parameters (won't be diposed) Returns Type Description Task<object> Return value (should be disposed, if possible) | Edit this page View Source CallVoidAsync(string?, string, TimeSpan, CancellationToken, params object?[]) Call a RPC API method at the peer and wait for feedback (may throw after the remote execution) Declaration protected virtual Task CallVoidAsync(string? api, string method, TimeSpan timeout = default, CancellationToken cancellationToken = default, params object?[] parameters) Parameters Type Name Description string api API name string method Method name TimeSpan timeout Timeout CancellationToken cancellationToken Cancellation token object[] parameters Parameters (won't be diposed) Returns Type Description Task | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableBase.DisposeCore() | Edit this page View Source EnsureInitialized() Ensure being initialized Declaration protected virtual void EnsureInitialized() | Edit this page View Source HandleProcessorDisposing(IDisposableObject, EventArgs) Handle a disposing RPC processor Declaration protected virtual void HandleProcessorDisposing(IDisposableObject sender, EventArgs e) Parameters Type Name Description IDisposableObject sender Sender EventArgs e Arguments | Edit this page View Source PingAsync(TimeSpan, CancellationToken) Send a ping request Declaration protected virtual Task PingAsync(TimeSpan timeout, CancellationToken cancellationToken = default) Parameters Type Name Description TimeSpan timeout Timeout CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source RaiseEventAsync(string, EventArgs?, bool, TimeSpan, CancellationToken) Raise an event at the peer (if waiting may throw after the remote execution) Declaration protected virtual Task RaiseEventAsync(string name, EventArgs? e = null, bool wait = false, TimeSpan timeout = default, CancellationToken cancellationToken = default) Parameters Type Name Description string name Event name EventArgs e Event arguments (won't be diposed) bool wait Wait for remote event handlers to finish? TimeSpan timeout Timeout CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source RegisterEvent(in string, in EventHandler_Delegate) Register a remote event handler Declaration protected virtual RpcEvent RegisterEvent(in string name, in RpcEvent.EventHandler_Delegate handler) Parameters Type Name Description string name Event name RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event | Edit this page View Source RegisterEvent<tReturn>(in string, in EventHandler_Delegate) Register a remote event handler Declaration protected virtual RpcEvent RegisterEvent<tReturn>(in string name, in RpcEvent.EventHandler_Delegate handler) where tReturn : EventArgs Parameters Type Name Description string name Event name RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event Type Parameters Name Description tReturn Event arguments type Implements wan24.Core.IWillDispose IRpcSdk wan24.Core.IDisposableObject IDisposable IAsyncDisposable"
  },
  "api/wan24.RPC.Sdk.RpcSdkBase.html": {
    "href": "api/wan24.RPC.Sdk.RpcSdkBase.html",
    "title": "Class RpcSdkBase | wan24-RPC",
    "keywords": "Class RpcSdkBase Base class for a RPC SDK Inheritance object DisposableBase RpcSdkBase<RpcProcessor> RpcSdkBase Implements IWillDispose IRpcSdk IDisposableObject IDisposable IAsyncDisposable Inherited Members RpcSdkBase<RpcProcessor>.Cancellation RpcSdkBase<RpcProcessor>.DisposeProcessor RpcSdkBase<RpcProcessor>._Processor RpcSdkBase<RpcProcessor>.Processor RpcSdkBase<RpcProcessor>.CallValueAsync(string, string, Type, TimeSpan, CancellationToken, params object[]) RpcSdkBase<RpcProcessor>.CallVoidAsync(string, string, TimeSpan, CancellationToken, params object[]) RpcSdkBase<RpcProcessor>.PingAsync(TimeSpan, CancellationToken) RpcSdkBase<RpcProcessor>.RegisterEvent<tReturn>(in string, in RpcEvent.EventHandler_Delegate) RpcSdkBase<RpcProcessor>.RegisterEvent(in string, in RpcEvent.EventHandler_Delegate) RpcSdkBase<RpcProcessor>.RaiseEventAsync(string, EventArgs, bool, TimeSpan, CancellationToken) RpcSdkBase<RpcProcessor>.EnsureInitialized() RpcSdkBase<RpcProcessor>.HandleProcessorDisposing(IDisposableObject, EventArgs) RpcSdkBase<RpcProcessor>.Dispose(bool) RpcSdkBase<RpcProcessor>.DisposeCore() DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Sdk Assembly: wan24RPC.dll Syntax public abstract class RpcSdkBase : RpcSdkBase<RpcProcessor>, IWillDispose, IRpcSdk, IDisposableObject, IDisposable, IAsyncDisposable Constructors | Edit this page View Source RpcSdkBase() Constructor Declaration protected RpcSdkBase() | Edit this page View Source RpcSdkBase(in RpcProcessor) Constructor Declaration protected RpcSdkBase(in RpcProcessor processor) Parameters Type Name Description RpcProcessor processor RPC processor (will be disposed) Implements wan24.Core.IWillDispose IRpcSdk wan24.Core.IDisposableObject IDisposable IAsyncDisposable"
  },
  "api/wan24.RPC.Sdk.RpcSdkBaseExt-1.html": {
    "href": "api/wan24.RPC.Sdk.RpcSdkBaseExt-1.html",
    "title": "Class RpcSdkBaseExt<T> | wan24-RPC",
    "keywords": "Class RpcSdkBaseExt<T> Base class for a RPC SDK which uses a RPC processor that exports its internals using IRpcProcessorInternals Inheritance object DisposableBase RpcSdkBase<T> RpcSdkBaseExt<T> Implements IWillDispose IRpcSdk IDisposableObject IDisposable IAsyncDisposable Inherited Members RpcSdkBase<T>.Cancellation RpcSdkBase<T>.DisposeProcessor RpcSdkBase<T>._Processor RpcSdkBase<T>.Processor RpcSdkBase<T>.CallValueAsync(string, string, Type, TimeSpan, CancellationToken, params object[]) RpcSdkBase<T>.CallVoidAsync(string, string, TimeSpan, CancellationToken, params object[]) RpcSdkBase<T>.PingAsync(TimeSpan, CancellationToken) RpcSdkBase<T>.RegisterEvent<tReturn>(in string, in RpcEvent.EventHandler_Delegate) RpcSdkBase<T>.RegisterEvent(in string, in RpcEvent.EventHandler_Delegate) RpcSdkBase<T>.RaiseEventAsync(string, EventArgs, bool, TimeSpan, CancellationToken) RpcSdkBase<T>.EnsureInitialized() RpcSdkBase<T>.HandleProcessorDisposing(IDisposableObject, EventArgs) RpcSdkBase<T>.Dispose(bool) RpcSdkBase<T>.DisposeCore() DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Sdk Assembly: wan24RPC.dll Syntax public abstract class RpcSdkBaseExt<T> : RpcSdkBase<T>, IWillDispose, IRpcSdk, IDisposableObject, IDisposable, IAsyncDisposable where T : RpcProcessor, IRpcProcessorInternals Type Parameters Name Description T RPC processor type Constructors | Edit this page View Source RpcSdkBaseExt() Constructor Declaration protected RpcSdkBaseExt() | Edit this page View Source RpcSdkBaseExt(in T) Constructor Declaration protected RpcSdkBaseExt(in T processor) Parameters Type Name Description T processor RPC processor (will be disposed) Methods | Edit this page View Source SendMessageAsync(IRpcMessage, int, TimeSpan, CancellationToken) Send a RPC message to the peer Declaration protected virtual Task SendMessageAsync(IRpcMessage message, int priority, TimeSpan timeout = default, CancellationToken cancellationToken = default) Parameters Type Name Description IRpcMessage message Message int priority Priority (higher value will be processed faster) TimeSpan timeout Timeout CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source SendMessageAsync(IRpcMessage, TimeSpan, CancellationToken) Send a RPC message to the peer Declaration protected virtual Task SendMessageAsync(IRpcMessage message, TimeSpan timeout = default, CancellationToken cancellationToken = default) Parameters Type Name Description IRpcMessage message Message TimeSpan timeout Timeout CancellationToken cancellationToken Cancellation token Returns Type Description Task Implements wan24.Core.IWillDispose IRpcSdk wan24.Core.IDisposableObject IDisposable IAsyncDisposable"
  },
  "api/wan24.RPC.Sdk.html": {
    "href": "api/wan24.RPC.Sdk.html",
    "title": "Namespace wan24.RPC.Sdk | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Sdk Classes RpcSdkBase Base class for a RPC SDK RpcSdkBaseExt<T> Base class for a RPC SDK which uses a RPC processor that exports its internals using IRpcProcessorInternals RpcSdkBase<T> Base class for a RPC SDK Interfaces IRpcSdk Interface for a RPC SDK"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | wan24-RPC",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "wan24-RPC | wan24-RPC",
    "keywords": "wan24-RPC This library contains some RPC helper which enables an app to use any bi-directional RPC stream on the fly. It supports Stream channels Enumeration channels Events Cancellation Binary and JSON serialization API versioning Compression Server AND client RPC (bi-directional) Authorization I try to keep the API of this library as abstract as possible, but giving a fully working environment. I've decided to concentrate on streams, which seem to be the best center for an abstraction logic. While the RPC stream is the central element, all other things (processor, SDK) are optional and just suggestions that are built on each other to let you make the decision how far you want or need to go, finally, and to offer everything to go for rapid app development. NOTE: This library requires a .NET server AND client. No other languages are supported at present. NOTE: The server side implementation requires components which are not part of this library. How to get it This library is available as NuGet package. Usage Creating a RPC API A RPC API is any type which exports public methods. You should use the (Disposable)RpcApiBase base type, 'cause it uses the NoRpcAttribute on methods which should not be remote callable. A short overview over the helpers that you may want to use: Helper Description RpcApiBase RPC API base type DisposableRpcApiBase Disposable RPC API base type RpcAuthorizationAttributeBase Base type for an authorization attribute for APIs or methods RpcAuthorizedAttribute Attribute for single API methods which don't require an authorization (if the API itself requires it) RpcAliasAttribute Attribute for APIs or methods which should be exported using a different name NoRpcAttribute Attribute for public methods or parameters which shouldn't be accessed from the peer NoRpcDisposeAttribute Attribute for RPC methods which return a disposable value which should NOT be disposed after sending it to the peer, or for API classes which should NOT be disposed, if disconnected NoRpcEnumerableAttribute Attribute for RPC method return value or parameters which are enumerables, but shouldn't be handled as enumerables during RPC call processing NoRpcCompressionAttribute Attribute for RPC method stream return value or parameters which shouldn't use compression ('cause they may be compressed already) RpcVersionAttribute Attribute for API or SDK methods which restrict the supported peer API version (evaluated by the RPC processor) Per default the API class and method names are used for addressing a RPC call. However, it's possible to add API classes and methods using customized names. If you use the pre-defined RPC service logic, wan24.Core.DiHelper is being used for dependency injection, so you may use keyed services also. RPC stream extensions Any blocking bi-directional stream can be used as RPC communication stream: // Reading any RPC message RpcMessageBase message = await stream.ReadRpcMessageAsync(); // Writing any RPC message await stream.WriteRpcMessageAsync(message); RpcMessageBase is just a base type, which is being used by SerializerRpcMessageBase (supports variable serializer) Those base types are used by ID Type Description 0 RequestMessage RPC request 1 ResponseMessage RPC response 2 ErrorResponseMessage RPC error response 3 CancellationMessage RPC cancellation 4 EventMessage RPC event and must be used as base type for your own implementations. Each RPC message type has an ID, which may be sent to the peer before the serialized message body. Your custom RPC message type needs to be registered: RpcMessages.Register<YourRpcMessage>(1 << 8); NOTE: The first 8 bit of the message type ID are reserved, so your custom message type ID must start from 256+. RPC message serialization These are the built in RPC message serializers: ID Type Description 0 BinarySerializer Binary serialization using Stream-Serializer-Extensions 1 JsonSerializer JSON serialization using wan24.Core.JsonHelper 2 MixedSerializer Variable serializer which chooses between binary and JSON serialization per object (prefers binary) The MixedSerializer is the default. Binary serialization will produce less overhead, but each object needs to implement the IStreamSerializer interface. To register a custom serializer: RpcSerializer.Register(1 << 8, yourSerializer); NOTE: The first 8 bits of the serializer ID are reserved, so your custom serializer ID must start from 256+. You can set the default RPC message serializer to use in the static SerializerRpcMessageBase.DefaultSerializer property. Using the RPC processor The RPC processor is used to evaluate a RPC call to registered RPC API classes and methods: RpcProcessor processor = new(new(typeof(YourRpcApi))); await using(processor) { await processor.StartAsync(); while(peer.IsConnected) { // Receive a request message, first ... // Then evaluate it processor.Evaluate(message, yourReturnValueHandler); // The return value will be managed from the RPC processor automatic } } NOTE: One RPC processor instance is required for each RPC peer connection! WARNING: The number of processing evaluations is limited (using the RPC processor options). Any limit exceeding call will cause an exception at the peer! Using the RPC SDK The RpcSdkBase is a base class for creating a SDK which uses a RPC stream: public class YourSdk : RpcSdkBase { public YourSdk() : base() { } public async Task ConnectAsync() { // Connect to the RPC server ... // Then set the RPC stream RPC = rpcStream; } public Task<AnyType> YourApiMethodAsync(AnyType2 parameter, CancellationToken ct = default) => SendRpcCallAsync<AnyType>(nameof(YourApiMethodAsync), ct, parameter); } The SDK will manage a RPC processor, if clientside RPC calls are enabled. SDK usage: YourSdk sdk = new(); await using(sdk) { // Configure the SDK connection ... // Then connect await sdk.ConnectAsync(); // Then call API methods AnyType result; try { result = await sdk.YourApiMethodAsync(value); } catch(RpcRemoteException ex) { // Handle the remote execution error // (InnerException has the remote exception type, if possible) } ... } TIP: For keeping consistence between the client and server RPC API and SDK implementations you can use a shared interface and implement an API method for pre-checking the API version, and if a client update is required, first. Enumerable parameters and return values Enumerables will be transfered asynchronous (streamed) and managed by the RPC processor automatic, if the type at the receiving side implements IList. A parameter or return value may be an IEnumerable<T> or IAsyncEnumerable<T>. NOTE: To disable that behavior you can use the NoRpcEnumerableAttribute for your RPC API or SDK method or RPC API parameter. For SDK method parameters wrap the value with NoRpcEnumerable. TIP: Use IAsyncEnumerable<T> where possible! WARNING: The number of processing enumerables is limited (using the RPC processor options). Any limit exceeding call will cause an exception at the peer! Stream parameters and return values Streams will be transfered asynchronous and managed by the RPC processor automatic. While synchronous stream usage is possible, all synchronous stream methods are mapped to asynchronous methods (you should avoid using them!). NOTE: If compression is enabled, streams will be transfered compressed per default. If you don't want that, you can use the NoRpcCompressionAttribute for your RPC API or SDK method or RPC API parameter. For SDK method parameters wrap a value with UncompressedRpcStream. WARNING: The number of processing streams is limited (using the RPC processor options). Any limit exceeding call will cause an exception at the peer! Events A RpcProcessor and a RpcSdkBase offer a simple solution for events using EventMessage and RpcEvent. In a processor or SDK you can register receivable events like this: RegisterEvent(new(nameof(YourEvent), typeof(YourEventData), RaiseYourEventAsync)); Example receivable event definition: public delegate void YourEvent_Delegate(object sender, YourEventData e); public event YourEvent_Delegate? YourEvent; private async Task RaiseYourEventAsync(RpcEvent rpcEvent, EventData? e) { await Task.Yield(); if(e is not YourEventData data) // Exception will be handled by the processor or SDK throw new InvalidProgramException(\"Missing/invalid event data\"); YourEvent?.Invoke(this, data); } NOTE: Since event handling is a synchronous operation, it's not possible to write something back to the event data and respond it to the RPC peers event sending context. To send any event to the peer: anyObject.AnyEvent += (sender, e) => SendEvent(nameof(AnyObjectType.AnyEvent), new AnyEventData(sender, e)); The event message processing will be handled by the RPC processor automatic. NOTE: The SendEvent method doesn't return a task, but will send the event asynchronous in background. It's part of the processor and the SDK base types and may be called in any other context, also. TIP: You can enable event throttling by defining an event throttler instance in the RPC processor options. WARNING: You should remove event listeners in order to enable the GC to clan up the object reference, if a processor or a SDK instance isn't in use anymore! Cancellation If a SDK method timed out, the SDK will send a RpcCancellationMessage to the peer, which will then cancel the RPC method execution, if possible. For this the RPC API method needs to have a CancellationToken type parameter. API versioning You need to implement a version check into your SDK by yourself. It's required to use an unsigned integer number as version number. Using the RpcVersionAttribute you can restrict the supported API version and also forward a RPC processor to another API method for the used SDK version: public async Task<int> ApiVersionAsync(RpcProcessor processor, int peerSdkVersion, CancellationToken ct) { // Check the version number ... // Then use it processor.CurrentApiVersion = peerSdkVersion; // Maybe return the latest API version to signal an available optional update return YourApi.VERSION; } [RpcVersion(fromVersion: 1, toVersion: 3, newerMethodName: \"YourApiMethodV2Async\")] public async Task YourApiMethodAsync(AnyType parameter, CancellationToken ct) { // Used with peer versions 1, 2 and 3 } [RpcVersion(4)] public async Task<ReturnType> YourApiMethodV2Async(AnyType parameter, OtherType other, CancellationToken ct) { // Used from peer versions 4+ } To enable API version restrictions your API needs to set the CurrentApiVersion value to the RPC processor which manages the connection. Any RPC call to an API method which has a RpcVersionAttribute before the CurrentApiVersion value was set will cause an error at the client side. Since communicated objects are being serialized, and they may be changed, too, you could use the serializer versioning for IStreamSerializer implementations (see the documentation of the Stream-Serializer-Extensions NuGet package). The serializer versioning is fully independent from the API versioning. Anyway, if the serializer version of a communicated type increases, you should also increase the API version number to be safe, if the updated serialization requires a peer software update (which is the case when the new serialization doesn't support the previous object structure). A serializer version increment is required, if the new type revision is incompatible with the previous type revision. An API version increment is required on any incompatibility: Incompatible types Method signature changes Method removals For any other change incrementing a version number is optional and depends on the context of the change, and if the change is downward compatible. Authorization Use the RpcAuthorizationAttributeBase type for implementing authorization for your RPC APIs and methods: [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method)] public class YourAuthorizationAttribute : RpcAuthorizationAttributeBase { public override async Task<bool> IsAuthorizedAsync(RpcContext context) { // Determine if the context is authorized and return TRUE to continue, // or FALSE to disconnect the peer } } This attribute can be applied to RPC API classes and methods and will be evaluated by the RPC processor before executing any API method. Any unauthorized access will disconnect the peer: [YourAuthorization]// Optional for all API methods public class YourRpcApi : RpcApiBase { [YourAuthorization]// Optional at the API method level public async Task YourApiMethod() { ... } ... } Using the RpcAuthorizedAttribute you can disable authorization for single methods of an API which requires authorization for all exported API methods. CAUTION: If you mix RpcAuthorizedAttribute with any RpcAuthorizationAttributeBase attributes, no authorization will be required, finally!"
  }
}