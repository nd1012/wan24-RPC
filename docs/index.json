{
  "api/index.html": {
    "href": "api/index.html",
    "title": "API reference | wan24-RPC",
    "keywords": "API reference Choose a type from the left to start browsing."
  },
  "api/wan24.RPC.Api.Attributes.NoRpcAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.NoRpcAttribute.html",
    "title": "Class NoRpcAttribute | wan24-RPC",
    "keywords": "Class NoRpcAttribute Attribute for A type which is not allowed to be deserialized A public non-RPC method of an API type A no-RPC servable RPC API method parameter (opt-out) Inheritance object Attribute NoRpcAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Parameter)] public class NoRpcAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source NoRpcAttribute() Attribute for A type which is not allowed to be deserialized A public non-RPC method of an API type A no-RPC servable RPC API method parameter (opt-out) Declaration public NoRpcAttribute() Remarks Constructor"
  },
  "api/wan24.RPC.Api.Attributes.NoRpcDisposeAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.NoRpcDisposeAttribute.html",
    "title": "Class NoRpcDisposeAttribute | wan24-RPC",
    "keywords": "Class NoRpcDisposeAttribute Attribute for A disposable RPC API method parameter which shouldn't be disposed after the method returned regular A disposable RPC API method return value which shouldn't be disposed after the response was sent to the peer A disposable RPC API type which shouldn't be disposed when the RPC processor is disposing Inheritance object Attribute NoRpcDisposeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Parameter)] public class NoRpcDisposeAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source NoRpcDisposeAttribute() Attribute for A disposable RPC API method parameter which shouldn't be disposed after the method returned regular A disposable RPC API method return value which shouldn't be disposed after the response was sent to the peer A disposable RPC API type which shouldn't be disposed when the RPC processor is disposing Declaration public NoRpcDisposeAttribute() Remarks Constructor"
  },
  "api/wan24.RPC.Api.Attributes.NoRpcEnumerableAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.NoRpcEnumerableAttribute.html",
    "title": "Class NoRpcEnumerableAttribute | wan24-RPC",
    "keywords": "Class NoRpcEnumerableAttribute Attribute for an enumerable RPC API method return value which shouldn't be RPC enumerated (will be transported as an array instead) Inheritance object Attribute NoRpcEnumerableAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class NoRpcEnumerableAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source NoRpcEnumerableAttribute() Attribute for an enumerable RPC API method return value which shouldn't be RPC enumerated (will be transported as an array instead) Declaration public NoRpcEnumerableAttribute() Remarks Constructor"
  },
  "api/wan24.RPC.Api.Attributes.RpcAliasAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcAliasAttribute.html",
    "title": "Class RpcAliasAttribute | wan24-RPC",
    "keywords": "Class RpcAliasAttribute Attribute for a RPC API (method) which uses an alias name Inheritance object Attribute RpcAliasAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method)] public class RpcAliasAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source RpcAliasAttribute(string) Attribute for a RPC API (method) which uses an alias name Declaration public RpcAliasAttribute(string alias) Parameters Type Name Description string alias Alias name Remarks Constructor Properties | Edit this page View Source Alias Alias name Declaration public virtual string Alias { get; } Property Value Type Description string"
  },
  "api/wan24.RPC.Api.Attributes.RpcAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcAttribute.html",
    "title": "Class RpcAttribute | wan24-RPC",
    "keywords": "Class RpcAttribute Attribute for a RPC type which is allowed to be deserialized (opt-in) Inheritance object Attribute RpcAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class RpcAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source RpcAttribute() Attribute for a RPC type which is allowed to be deserialized (opt-in) Declaration public RpcAttribute() Remarks Constructor"
  },
  "api/wan24.RPC.Api.Attributes.RpcAuthorizationAttributeBase.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcAuthorizationAttributeBase.html",
    "title": "Class RpcAuthorizationAttributeBase | wan24-RPC",
    "keywords": "Class RpcAuthorizationAttributeBase Base type for a RPC API and/or method authorization attribue Inheritance object Attribute RpcAuthorizationAttributeBase Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax public abstract class RpcAuthorizationAttributeBase : Attribute Remarks Constructor Constructors | Edit this page View Source RpcAuthorizationAttributeBase() Base type for a RPC API and/or method authorization attribue Declaration protected RpcAuthorizationAttributeBase() Remarks Constructor Methods | Edit this page View Source IsContextAuthorizedAsync(RpcContext) Determine if a context is authorized Declaration public abstract Task<bool> IsContextAuthorizedAsync(RpcContext context) Parameters Type Name Description RpcContext context Context Returns Type Description Task<bool> If authorized (if false, the peer will be disconnected)"
  },
  "api/wan24.RPC.Api.Attributes.RpcAuthorizedAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcAuthorizedAttribute.html",
    "title": "Class RpcAuthorizedAttribute | wan24-RPC",
    "keywords": "Class RpcAuthorizedAttribute Attribute for RPC API methods which don't require any authorization Inheritance object Attribute RpcAuthorizedAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Method)] public sealed class RpcAuthorizedAttribute : Attribute Constructors | Edit this page View Source RpcAuthorizedAttribute() Attribute for RPC API methods which don't require any authorization Declaration public RpcAuthorizedAttribute()"
  },
  "api/wan24.RPC.Api.Attributes.RpcStreamAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcStreamAttribute.html",
    "title": "Class RpcStreamAttribute | wan24-RPC",
    "keywords": "Class RpcStreamAttribute Attribute for a RPC API method stream return value or parameter transport configuration Inheritance object Attribute RpcStreamAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Method|AttributeTargets.Parameter)] public class RpcStreamAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source RpcStreamAttribute() Attribute for a RPC API method stream return value or parameter transport configuration Declaration public RpcStreamAttribute() Remarks Constructor Properties | Edit this page View Source ChunkSize Chunk size in bytes Declaration public int? ChunkSize { get; set; } Property Value Type Description int? | Edit this page View Source Compression If to use compression Declaration public bool Compression { get; set; } Property Value Type Description bool | Edit this page View Source CompressionAlgorithm Used compression algorithm Declaration public string? CompressionAlgorithm { get; set; } Property Value Type Description string | Edit this page View Source CompressionFlags Used compression flags Declaration public CompressionFlags? CompressionFlags { get; set; } Property Value Type Description CompressionFlags? | Edit this page View Source CompressionLevel Used comression level Declaration public CompressionLevel? CompressionLevel { get; set; } Property Value Type Description CompressionLevel? | Edit this page View Source MaxLength Max. (uncompressed) stream length in bytes Declaration public long? MaxLength { get; set; } Property Value Type Description long? | Edit this page View Source RawCompression If to use raw compression (without header) Declaration public bool RawCompression { get; set; } Property Value Type Description bool Methods | Edit this page View Source ApplyTo(CompressionOptions?) Apply the configuration to wan24.Compression.CompressionOptions Declaration public virtual CompressionOptions? ApplyTo(CompressionOptions? options) Parameters Type Name Description CompressionOptions options Options Returns Type Description CompressionOptions Options (may be a new instance)"
  },
  "api/wan24.RPC.Api.Attributes.RpcVersionAttribute.html": {
    "href": "api/wan24.RPC.Api.Attributes.RpcVersionAttribute.html",
    "title": "Class RpcVersionAttribute | wan24-RPC",
    "keywords": "Class RpcVersionAttribute Attribute for an API version restricted RPC API method Inheritance object Attribute RpcVersionAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api.Attributes Assembly: wan24RPC.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class RpcVersionAttribute : Attribute Constructors | Edit this page View Source RpcVersionAttribute(int) Constructor Declaration public RpcVersionAttribute(int fromVersion) Parameters Type Name Description int fromVersion From version including | Edit this page View Source RpcVersionAttribute(int, int, string?) Constructor Declaration public RpcVersionAttribute(int fromVersion, int toVersion, string? newerMethodName = null) Parameters Type Name Description int fromVersion From version including int toVersion To version including string newerMethodName Newer method name (forwards the RPC processor to another RPC API method for newer API versions) Properties | Edit this page View Source FromVersion From version including Declaration public int FromVersion { get; } Property Value Type Description int | Edit this page View Source NewerMethodName Newer RPC API method name to use Declaration public string? NewerMethodName { get; } Property Value Type Description string | Edit this page View Source ToVersion To version including Declaration public int? ToVersion { get; } Property Value Type Description int? Methods | Edit this page View Source GetNewerMethodName(in int, in RpcApiMethodInfo) Get the newer RPC API method name to use, if incompatible Declaration public virtual string? GetNewerMethodName(in int version, in RpcApiMethodInfo currentMethod) Parameters Type Name Description int version API version RpcApiMethodInfo currentMethod Current RPC API method used Returns Type Description string The current or newer RPC API method name to use, or null, if the method can't be served with the peers API version | Edit this page View Source IsCompatibleWithApiVersion(in int) Determine if an API version is compatible Declaration public virtual bool IsCompatibleWithApiVersion(in int version) Parameters Type Name Description int version API version Returns Type Description bool If compatible | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString()"
  },
  "api/wan24.RPC.Api.Attributes.html": {
    "href": "api/wan24.RPC.Api.Attributes.html",
    "title": "Namespace wan24.RPC.Api.Attributes | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Api.Attributes Classes NoRpcAttribute Attribute for A type which is not allowed to be deserialized A public non-RPC method of an API type A no-RPC servable RPC API method parameter (opt-out) NoRpcDisposeAttribute Attribute for A disposable RPC API method parameter which shouldn't be disposed after the method returned regular A disposable RPC API method return value which shouldn't be disposed after the response was sent to the peer A disposable RPC API type which shouldn't be disposed when the RPC processor is disposing NoRpcEnumerableAttribute Attribute for an enumerable RPC API method return value which shouldn't be RPC enumerated (will be transported as an array instead) RpcAliasAttribute Attribute for a RPC API (method) which uses an alias name RpcAttribute Attribute for a RPC type which is allowed to be deserialized (opt-in) RpcAuthorizationAttributeBase Base type for a RPC API and/or method authorization attribue RpcAuthorizedAttribute Attribute for RPC API methods which don't require any authorization RpcStreamAttribute Attribute for a RPC API method stream return value or parameter transport configuration RpcVersionAttribute Attribute for an API version restricted RPC API method"
  },
  "api/wan24.RPC.Api.DisposableRpcApiBase.html": {
    "href": "api/wan24.RPC.Api.DisposableRpcApiBase.html",
    "title": "Class DisposableRpcApiBase | wan24-RPC",
    "keywords": "Class DisposableRpcApiBase Base type for a disposable RPC API Inheritance object DisposableBase DisposableRpcApiBase Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable Inherited Members DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.Dispose(bool) DisposableBase.DisposeCore() DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api Assembly: wan24RPC.dll Syntax public abstract class DisposableRpcApiBase : DisposableBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable Constructors | Edit this page View Source DisposableRpcApiBase() Constructor Declaration protected DisposableRpcApiBase() | Edit this page View Source DisposableRpcApiBase(in bool, in bool) Constructor Declaration protected DisposableRpcApiBase(in bool asyncDisposing, in bool allowFinalizer = false) Parameters Type Name Description bool asyncDisposing Asynchronous disposing? bool allowFinalizer Don't count running the finalizer as an error? Methods | Edit this page View Source Dispose() Declaration [NoRpc] public void Dispose() | Edit this page View Source DisposeAsync() Declaration [NoRpc] public ValueTask DisposeAsync() Returns Type Description ValueTask | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration [NoRpc] public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration [NoRpc] public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Edit this page View Source RegisterForDispose<T>(in T) Register an object for disposing when this object is being disposed Declaration [NoRpc] public override void RegisterForDispose<T>(in T disposable) Parameters Type Name Description T disposable Disposable (will be disposed) Type Parameters Name Description T Object type Overrides wan24.Core.DisposableBase.RegisterForDispose<T>(in T) | Edit this page View Source ToString() Returns a string that represents the current object. Declaration [NoRpc] public override string? ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable"
  },
  "api/wan24.RPC.Api.Exceptions.RpcRemoteException.html": {
    "href": "api/wan24.RPC.Api.Exceptions.RpcRemoteException.html",
    "title": "Class RpcRemoteException | wan24-RPC",
    "keywords": "Class RpcRemoteException RPC remote exception (InnerException should serve the remote exception type) Inheritance object Exception RpcRemoteException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api.Exceptions Assembly: wan24RPC.dll Syntax [Serializable] public class RpcRemoteException : Exception, ISerializable Constructors | Edit this page View Source RpcRemoteException() Constructor Declaration public RpcRemoteException() | Edit this page View Source RpcRemoteException(string?) Constructor Declaration public RpcRemoteException(string? message) Parameters Type Name Description string message Message | Edit this page View Source RpcRemoteException(string?, Exception?) Constructor Declaration public RpcRemoteException(string? message, Exception? inner) Parameters Type Name Description string message Message Exception inner Inner exception Properties | Edit this page View Source RemoteExceptionType Remote exception type name Declaration public required string RemoteExceptionType { get; init; } Property Value Type Description string Implements ISerializable"
  },
  "api/wan24.RPC.Api.Exceptions.TooManyRpcRequestsException.html": {
    "href": "api/wan24.RPC.Api.Exceptions.TooManyRpcRequestsException.html",
    "title": "Class TooManyRpcRequestsException | wan24-RPC",
    "keywords": "Class TooManyRpcRequestsException Thrown on too many RPC requests Inheritance object Exception TooManyRpcRequestsException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api.Exceptions Assembly: wan24RPC.dll Syntax [Serializable] public class TooManyRpcRequestsException : Exception, ISerializable Constructors | Edit this page View Source TooManyRpcRequestsException() Constructor Declaration public TooManyRpcRequestsException() | Edit this page View Source TooManyRpcRequestsException(string?) Constructor Declaration public TooManyRpcRequestsException(string? message) Parameters Type Name Description string message Message | Edit this page View Source TooManyRpcRequestsException(string?, Exception?) Constructor Declaration public TooManyRpcRequestsException(string? message, Exception? inner) Parameters Type Name Description string message Message Exception inner Inner exception Implements ISerializable"
  },
  "api/wan24.RPC.Api.Exceptions.html": {
    "href": "api/wan24.RPC.Api.Exceptions.html",
    "title": "Namespace wan24.RPC.Api.Exceptions | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Api.Exceptions Classes RpcRemoteException RPC remote exception (InnerException should serve the remote exception type) TooManyRpcRequestsException Thrown on too many RPC requests"
  },
  "api/wan24.RPC.Api.Messages.CancellationMessage.html": {
    "href": "api/wan24.RPC.Api.Messages.CancellationMessage.html",
    "title": "Class CancellationMessage | wan24-RPC",
    "keywords": "Class CancellationMessage RPC cancellation message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase CancellationMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IStreamSerializer IRpcMessage Inherited Members RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) RpcMessageBase.SerializeAsync(Stream, CancellationToken) RpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Messages Assembly: wan24RPC.dll Syntax public class CancellationMessage : RpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IStreamSerializer, IRpcMessage Remarks Constructor Constructors | Edit this page View Source CancellationMessage() RPC cancellation message Declaration public CancellationMessage() Remarks Constructor | Edit this page View Source CancellationMessage(in RequestMessage) Constructor Declaration public CancellationMessage(in RequestMessage request) Parameters Type Name Description RequestMessage request RPC request to cancel Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 3 Field Value Type Description int Properties | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion wan24.StreamSerializerExtensions.IStreamSerializer IRpcMessage"
  },
  "api/wan24.RPC.Api.Messages.ErrorResponseMessage.html": {
    "href": "api/wan24.RPC.Api.Messages.ErrorResponseMessage.html",
    "title": "Class ErrorResponseMessage | wan24-RPC",
    "keywords": "Class ErrorResponseMessage RPC error response message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase ErrorResponseMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IStreamSerializer IRpcMessage Inherited Members RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Messages Assembly: wan24RPC.dll Syntax public class ErrorResponseMessage : RpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IStreamSerializer, IRpcMessage Remarks Constructor Constructors | Edit this page View Source ErrorResponseMessage() RPC error response message Declaration public ErrorResponseMessage() Remarks Constructor Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 2 Field Value Type Description int Properties | Edit this page View Source Error Error Declaration public required Exception Error { get; set; } Property Value Type Description Exception | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion wan24.StreamSerializerExtensions.IStreamSerializer IRpcMessage"
  },
  "api/wan24.RPC.Api.Messages.EventMessage.html": {
    "href": "api/wan24.RPC.Api.Messages.EventMessage.html",
    "title": "Class EventMessage | wan24-RPC",
    "keywords": "Class EventMessage RPC event message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase SerializerRpcMessageBase EventMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IStreamSerializer IRpcRequest IRpcMessage Inherited Members SerializerRpcMessageBase.DefaultSerializer SerializerRpcMessageBase.Serializer SerializerRpcMessageBase.SerializeObjectAsync(Stream, object, CancellationToken) SerializerRpcMessageBase.SerializeObjectListAsync(Stream, object[], CancellationToken) SerializerRpcMessageBase.DeserializeObjectAsync(Stream, CancellationToken) SerializerRpcMessageBase.DeserializeObjectListAsync(Stream, CancellationToken) SerializerRpcMessageBase.GetSerializer() RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Messages Assembly: wan24RPC.dll Syntax public class EventMessage : SerializerRpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IStreamSerializer, IRpcRequest, IRpcMessage Remarks Constructor Constructors | Edit this page View Source EventMessage() RPC event message Declaration public EventMessage() Remarks Constructor Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 4 Field Value Type Description int Properties | Edit this page View Source Arguments Event arguments Declaration public EventArgs? Arguments { get; set; } Property Value Type Description EventArgs | Edit this page View Source Name Event name Declaration [MinLength(1)] [MaxLength(255)] public required string Name { get; set; } Property Value Type Description string | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type | Edit this page View Source Waiting If the sender is waiting for the event hndlers to finish Declaration public bool Waiting { get; set; } Property Value Type Description bool Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source DisposeArgumentsAsync() Dispose the arguments Declaration public virtual Task DisposeArgumentsAsync() Returns Type Description Task | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion wan24.StreamSerializerExtensions.IStreamSerializer IRpcRequest IRpcMessage"
  },
  "api/wan24.RPC.Api.Messages.Interfaces.IRpcMessage.html": {
    "href": "api/wan24.RPC.Api.Messages.Interfaces.IRpcMessage.html",
    "title": "Interface IRpcMessage | wan24-RPC",
    "keywords": "Interface IRpcMessage Interface for a RPC message Namespace: wan24.RPC.Api.Messages.Interfaces Assembly: wan24RPC.dll Syntax public interface IRpcMessage Properties | Edit this page View Source Id Message ID Declaration long? Id { get; } Property Value Type Description long? | Edit this page View Source Type Message Type ID Declaration int Type { get; } Property Value Type Description int"
  },
  "api/wan24.RPC.Api.Messages.Interfaces.IRpcRequest.html": {
    "href": "api/wan24.RPC.Api.Messages.Interfaces.IRpcRequest.html",
    "title": "Interface IRpcRequest | wan24-RPC",
    "keywords": "Interface IRpcRequest Interface for a RPC request message Inherited Members IRpcMessage.Type IRpcMessage.Id Namespace: wan24.RPC.Api.Messages.Interfaces Assembly: wan24RPC.dll Syntax public interface IRpcRequest : IRpcMessage"
  },
  "api/wan24.RPC.Api.Messages.Interfaces.html": {
    "href": "api/wan24.RPC.Api.Messages.Interfaces.html",
    "title": "Namespace wan24.RPC.Api.Messages.Interfaces | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Api.Messages.Interfaces Interfaces IRpcMessage Interface for a RPC message IRpcRequest Interface for a RPC request message"
  },
  "api/wan24.RPC.Api.Messages.RequestMessage.html": {
    "href": "api/wan24.RPC.Api.Messages.RequestMessage.html",
    "title": "Class RequestMessage | wan24-RPC",
    "keywords": "Class RequestMessage RPC request message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase SerializerRpcMessageBase RequestMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IStreamSerializer IRpcRequest IRpcMessage Inherited Members SerializerRpcMessageBase.DefaultSerializer SerializerRpcMessageBase.Serializer SerializerRpcMessageBase.SerializeObjectAsync(Stream, object, CancellationToken) SerializerRpcMessageBase.SerializeObjectListAsync(Stream, object[], CancellationToken) SerializerRpcMessageBase.DeserializeObjectAsync(Stream, CancellationToken) SerializerRpcMessageBase.DeserializeObjectListAsync(Stream, CancellationToken) SerializerRpcMessageBase.GetSerializer() RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Messages Assembly: wan24RPC.dll Syntax public class RequestMessage : SerializerRpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IStreamSerializer, IRpcRequest, IRpcMessage Remarks Constructor Constructors | Edit this page View Source RequestMessage() RPC request message Declaration public RequestMessage() Remarks Constructor Fields | Edit this page View Source ParametersDisposed If the parameters are disposed Declaration protected bool ParametersDisposed Field Value Type Description bool | Edit this page View Source SyncObject An object for thread synchronization Declaration protected readonly object SyncObject Field Value Type Description object | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 0 Field Value Type Description int Properties | Edit this page View Source Api API name Declaration [MinLength(1)] [MaxLength(255)] public string? Api { get; set; } Property Value Type Description string | Edit this page View Source Method API method name Declaration [MinLength(1)] [MaxLength(255)] public required string Method { get; set; } Property Value Type Description string | Edit this page View Source Parameters API method parameters Declaration [CountLimit(255)] public object?[]? Parameters { get; set; } Property Value Type Description object[] | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type | Edit this page View Source WantsReturnValue If a return value is expected Declaration public virtual bool WantsReturnValue { get; set; } Property Value Type Description bool Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source DisposeParametersAsync(RpcApiMethodInfo?) Dispose parameter values Declaration public virtual Task DisposeParametersAsync(RpcApiMethodInfo? method = null) Parameters Type Name Description RpcApiMethodInfo method Method Returns Type Description Task | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion wan24.StreamSerializerExtensions.IStreamSerializer IRpcRequest IRpcMessage"
  },
  "api/wan24.RPC.Api.Messages.ResponseMessage.html": {
    "href": "api/wan24.RPC.Api.Messages.ResponseMessage.html",
    "title": "Class ResponseMessage | wan24-RPC",
    "keywords": "Class ResponseMessage RPC response message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase SerializerRpcMessageBase ResponseMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IStreamSerializer IRpcMessage Inherited Members SerializerRpcMessageBase.DefaultSerializer SerializerRpcMessageBase.Serializer SerializerRpcMessageBase.SerializeObjectAsync(Stream, object, CancellationToken) SerializerRpcMessageBase.SerializeObjectListAsync(Stream, object[], CancellationToken) SerializerRpcMessageBase.DeserializeObjectAsync(Stream, CancellationToken) SerializerRpcMessageBase.DeserializeObjectListAsync(Stream, CancellationToken) SerializerRpcMessageBase.GetSerializer() RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.Id RpcMessageBase.Created RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Messages Assembly: wan24RPC.dll Syntax public class ResponseMessage : SerializerRpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IStreamSerializer, IRpcMessage Remarks Constructor Constructors | Edit this page View Source ResponseMessage() RPC response message Declaration public ResponseMessage() Remarks Constructor Fields | Edit this page View Source TYPE_ID RPC message type ID Declaration public const int TYPE_ID = 1 Field Value Type Description int Properties | Edit this page View Source RequireId If an Id is required Declaration public override sealed bool RequireId { get; } Property Value Type Description bool Overrides RpcMessageBase.RequireId | Edit this page View Source ReturnValue Return value Declaration public object? ReturnValue { get; set; } Property Value Type Description object | Edit this page View Source Type Message Type ID Declaration public override int Type { get; } Property Value Type Description int Overrides RpcMessageBase.Type Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source DisposeReturnValueAsync() Dispose the return value Declaration public virtual Task DisposeReturnValueAsync() Returns Type Description Task | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides SerializerRpcMessageBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion wan24.StreamSerializerExtensions.IStreamSerializer IRpcMessage"
  },
  "api/wan24.RPC.Api.Messages.RpcMessageBase.html": {
    "href": "api/wan24.RPC.Api.Messages.RpcMessageBase.html",
    "title": "Class RpcMessageBase | wan24-RPC",
    "keywords": "Class RpcMessageBase Base type for a RPC message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase CancellationMessage ErrorResponseMessage SerializerRpcMessageBase Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IStreamSerializer IRpcMessage Inherited Members StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Messages Assembly: wan24RPC.dll Syntax public abstract class RpcMessageBase : StreamSerializerBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IStreamSerializer, IRpcMessage Remarks Constructor Constructors | Edit this page View Source RpcMessageBase() Base type for a RPC message Declaration protected RpcMessageBase() Remarks Constructor Fields | Edit this page View Source VERSION Object version number Declaration public const int VERSION = 1 Field Value Type Description int Properties | Edit this page View Source Created Created time Declaration public DateTime Created { get; } Property Value Type Description DateTime | Edit this page View Source HlObjectVersion Higher level object version Declaration public virtual int HlObjectVersion { get; } Property Value Type Description int | Edit this page View Source Id Message ID Declaration [RequiredIf(\"RequireId\", new object?[] { true })] public long? Id { get; set; } Property Value Type Description long? | Edit this page View Source MinHlObjectVersion Minimum supported higher level object version (see SerializedHlObjectVersion) Declaration protected virtual int? MinHlObjectVersion { get; } Property Value Type Description int? | Edit this page View Source RequireId If an Id is required Declaration public virtual bool RequireId { get; } Property Value Type Description bool | Edit this page View Source SerializedHlObjectVersion Deserialized higher level object version Declaration protected int? SerializedHlObjectVersion { get; } Property Value Type Description int? | Edit this page View Source Type Message Type ID Declaration public abstract int Type { get; } Property Value Type Description int Methods | Edit this page View Source Deserialize(Stream, int) Deserialize Declaration protected override sealed void Deserialize(Stream stream, int version) Parameters Type Name Description Stream stream Stream int version Serializer version Overrides StreamSerializerBase.Deserialize(Stream, int) | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides StreamSerializerBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source Serialize(Stream) Serialize Declaration protected override sealed void Serialize(Stream stream) Parameters Type Name Description Stream stream Stream Overrides StreamSerializerBase.Serialize(Stream) | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides StreamSerializerBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion wan24.StreamSerializerExtensions.IStreamSerializer IRpcMessage"
  },
  "api/wan24.RPC.Api.Messages.RpcMessages.html": {
    "href": "api/wan24.RPC.Api.Messages.RpcMessages.html",
    "title": "Class RpcMessages | wan24-RPC",
    "keywords": "Class RpcMessages Registered RPC message types Inheritance object RpcMessages Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Messages Assembly: wan24RPC.dll Syntax public static class RpcMessages Methods | Edit this page View Source Get(in int) Get a RPC message type Declaration public static Type? Get(in int id) Parameters Type Name Description int id RPC message type ID Returns Type Description Type RPC message type | Edit this page View Source Register<T>(in int) Register a RPC message type Declaration public static void Register<T>(in int id) where T : RpcMessageBase, new() Parameters Type Name Description int id RPC message type ID Type Parameters Name Description T RPC message type"
  },
  "api/wan24.RPC.Api.Messages.Serialization.BinarySerializer.html": {
    "href": "api/wan24.RPC.Api.Messages.Serialization.BinarySerializer.html",
    "title": "Class BinarySerializer | wan24-RPC",
    "keywords": "Class BinarySerializer Binary RPC serializer Inheritance object BinarySerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Messages.Serialization Assembly: wan24RPC.dll Syntax public static class BinarySerializer Fields | Edit this page View Source SERIALIZER Serializer ID Declaration public const int SERIALIZER = 0 Field Value Type Description int Methods | Edit this page View Source CanSerialize(Type?) Determine if a type can be serialized Declaration public static bool CanSerialize(Type? type) Parameters Type Name Description Type type Type Returns Type Description bool If the type can be serialized | Edit this page View Source ObjectDeserializerAsync(Stream, CancellationToken) Object deserializer Declaration public static Task<object?> ObjectDeserializerAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Object | Edit this page View Source ObjectListDeserializerAsync(Stream, CancellationToken) Object list deserializer Declaration public static Task<object?[]?> ObjectListDeserializerAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object[]> Object list | Edit this page View Source ObjectListSerializerAsync(object?[]?, Stream, CancellationToken) Object list serializer Declaration public static Task ObjectListSerializerAsync(object?[]? objList, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object[] objList Object list Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source ObjectSerializerAsync(object?, Stream, CancellationToken) Object serializer Declaration public static Task ObjectSerializerAsync(object? obj, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object obj Object Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task"
  },
  "api/wan24.RPC.Api.Messages.Serialization.Extensions.StreamExtensions.html": {
    "href": "api/wan24.RPC.Api.Messages.Serialization.Extensions.StreamExtensions.html",
    "title": "Class StreamExtensions | wan24-RPC",
    "keywords": "Class StreamExtensions Stream extensions Inheritance object StreamExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Messages.Serialization.Extensions Assembly: wan24RPC.dll Syntax public static class StreamExtensions Methods | Edit this page View Source ReadRpcMessageAsync(Stream, int?, Type?, CancellationToken) Read a RPC message Declaration public static ValueTask<RpcMessageBase> ReadRpcMessageAsync(this Stream stream, int? serializerVersion = null, Type? expectedType = null, CancellationToken cancellationToken = default) Parameters Type Name Description Stream stream Stream int? serializerVersion Serializer version Type expectedType Expected RPC message type CancellationToken cancellationToken Cancellation token Returns Type Description ValueTask<RpcMessageBase> RPC message | Edit this page View Source ReadRpcMessageAsync<T>(Stream, int?, CancellationToken) Read a RPC message Declaration public static ValueTask<RpcMessageBase> ReadRpcMessageAsync<T>(this Stream stream, int? serializerVersion = null, CancellationToken cancellationToken = default) where T : RpcMessageBase, new() Parameters Type Name Description Stream stream Stream int? serializerVersion Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description ValueTask<RpcMessageBase> RPC message Type Parameters Name Description T Expected RPC message type | Edit this page View Source WriteRpcMessageAsync(Stream, RpcMessageBase, CancellationToken) Write a RPC message Declaration public static ValueTask WriteRpcMessageAsync(this Stream stream, RpcMessageBase message, CancellationToken cancellationToken = default) Parameters Type Name Description Stream stream Stream RpcMessageBase message Message CancellationToken cancellationToken Cancellation token Returns Type Description ValueTask"
  },
  "api/wan24.RPC.Api.Messages.Serialization.Extensions.html": {
    "href": "api/wan24.RPC.Api.Messages.Serialization.Extensions.html",
    "title": "Namespace wan24.RPC.Api.Messages.Serialization.Extensions | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Api.Messages.Serialization.Extensions Classes StreamExtensions Stream extensions"
  },
  "api/wan24.RPC.Api.Messages.Serialization.JsonSerializer.html": {
    "href": "api/wan24.RPC.Api.Messages.Serialization.JsonSerializer.html",
    "title": "Class JsonSerializer | wan24-RPC",
    "keywords": "Class JsonSerializer JSON RPC serializer Inheritance object JsonSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Messages.Serialization Assembly: wan24RPC.dll Syntax public static class JsonSerializer Fields | Edit this page View Source SERIALIZER Serializer ID Declaration public const int SERIALIZER = 1 Field Value Type Description int Methods | Edit this page View Source CanSerialize(Type?) Determine if a type can be serialized Declaration public static bool CanSerialize(Type? type) Parameters Type Name Description Type type Type Returns Type Description bool If the type can be serialized | Edit this page View Source ObjectDeserializerAsync(Stream, CancellationToken) Object deserializer Declaration public static Task<object?> ObjectDeserializerAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Object | Edit this page View Source ObjectListDeserializerAsync(Stream, CancellationToken) Object list deserializer Declaration public static Task<object?[]?> ObjectListDeserializerAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object[]> Object list | Edit this page View Source ObjectListSerializerAsync(object?[]?, Stream, CancellationToken) Object list serializer Declaration public static Task ObjectListSerializerAsync(object?[]? objList, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object[] objList Object list Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source ObjectSerializerAsync(object?, Stream, CancellationToken) Object serializer Declaration public static Task ObjectSerializerAsync(object? obj, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object obj Object Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task"
  },
  "api/wan24.RPC.Api.Messages.Serialization.MixedSerializer.html": {
    "href": "api/wan24.RPC.Api.Messages.Serialization.MixedSerializer.html",
    "title": "Class MixedSerializer | wan24-RPC",
    "keywords": "Class MixedSerializer Mixed RPC serializer (chooses between binary and JSON serialization, prefers binary) Inheritance object MixedSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Messages.Serialization Assembly: wan24RPC.dll Syntax public static class MixedSerializer Fields | Edit this page View Source SERIALIZER Serializer ID Declaration public const int SERIALIZER = 2 Field Value Type Description int Methods | Edit this page View Source CanSerialize(Type?) Determine if a type can be serialized Declaration public static bool CanSerialize(Type? type) Parameters Type Name Description Type type Type Returns Type Description bool If the type can be serialized | Edit this page View Source ObjectDeserializerAsync(Stream, CancellationToken) Object deserializer Declaration public static Task<object?> ObjectDeserializerAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Object | Edit this page View Source ObjectListDeserializerAsync(Stream, CancellationToken) Object list deserializer Declaration public static Task<object?[]?> ObjectListDeserializerAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object[]> Object list | Edit this page View Source ObjectListSerializerAsync(object?[]?, Stream, CancellationToken) Object list serializer Declaration public static Task ObjectListSerializerAsync(object?[]? objList, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object[] objList Object list Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source ObjectSerializerAsync(object?, Stream, CancellationToken) Object serializer Declaration public static Task ObjectSerializerAsync(object? obj, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object obj Object Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task"
  },
  "api/wan24.RPC.Api.Messages.Serialization.RpcSerializer.CanSerialize_Delegate.html": {
    "href": "api/wan24.RPC.Api.Messages.Serialization.RpcSerializer.CanSerialize_Delegate.html",
    "title": "Delegate RpcSerializer.CanSerialize_Delegate | wan24-RPC",
    "keywords": "Delegate RpcSerializer.CanSerialize_Delegate Delegate for a RPC serializer method to determine if a type can be serialized Namespace: wan24.RPC.Api.Messages.Serialization Assembly: wan24RPC.dll Syntax public delegate bool RpcSerializer.CanSerialize_Delegate(Type? type) Parameters Type Name Description Type type Type Returns Type Description bool If the type can be serialized"
  },
  "api/wan24.RPC.Api.Messages.Serialization.RpcSerializer.ObjectDeserializer_Delegate.html": {
    "href": "api/wan24.RPC.Api.Messages.Serialization.RpcSerializer.ObjectDeserializer_Delegate.html",
    "title": "Delegate RpcSerializer.ObjectDeserializer_Delegate | wan24-RPC",
    "keywords": "Delegate RpcSerializer.ObjectDeserializer_Delegate Delegate for an object deserializer Namespace: wan24.RPC.Api.Messages.Serialization Assembly: wan24RPC.dll Syntax public delegate Task<object?> RpcSerializer.ObjectDeserializer_Delegate(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Object"
  },
  "api/wan24.RPC.Api.Messages.Serialization.RpcSerializer.ObjectListDeserializer_Delegate.html": {
    "href": "api/wan24.RPC.Api.Messages.Serialization.RpcSerializer.ObjectListDeserializer_Delegate.html",
    "title": "Delegate RpcSerializer.ObjectListDeserializer_Delegate | wan24-RPC",
    "keywords": "Delegate RpcSerializer.ObjectListDeserializer_Delegate Delegate for an object list deserializer Namespace: wan24.RPC.Api.Messages.Serialization Assembly: wan24RPC.dll Syntax public delegate Task<object?[]?> RpcSerializer.ObjectListDeserializer_Delegate(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object[]> Object list"
  },
  "api/wan24.RPC.Api.Messages.Serialization.RpcSerializer.ObjectListSerializer_Delegate.html": {
    "href": "api/wan24.RPC.Api.Messages.Serialization.RpcSerializer.ObjectListSerializer_Delegate.html",
    "title": "Delegate RpcSerializer.ObjectListSerializer_Delegate | wan24-RPC",
    "keywords": "Delegate RpcSerializer.ObjectListSerializer_Delegate Delegate for an object list serializer Namespace: wan24.RPC.Api.Messages.Serialization Assembly: wan24RPC.dll Syntax public delegate Task RpcSerializer.ObjectListSerializer_Delegate(object?[]? objList, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object[] objList Object list Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Delegate for an object list serializer"
  },
  "api/wan24.RPC.Api.Messages.Serialization.RpcSerializer.ObjectSerializer_Delegate.html": {
    "href": "api/wan24.RPC.Api.Messages.Serialization.RpcSerializer.ObjectSerializer_Delegate.html",
    "title": "Delegate RpcSerializer.ObjectSerializer_Delegate | wan24-RPC",
    "keywords": "Delegate RpcSerializer.ObjectSerializer_Delegate Delegate for an object serializer Namespace: wan24.RPC.Api.Messages.Serialization Assembly: wan24RPC.dll Syntax public delegate Task RpcSerializer.ObjectSerializer_Delegate(object? obj, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description object obj Object Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Delegate for an object serializer"
  },
  "api/wan24.RPC.Api.Messages.Serialization.RpcSerializer.html": {
    "href": "api/wan24.RPC.Api.Messages.Serialization.RpcSerializer.html",
    "title": "Class RpcSerializer | wan24-RPC",
    "keywords": "Class RpcSerializer RPC serializer Inheritance object RpcSerializer Implements IEquatable<RpcSerializer> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Messages.Serialization Assembly: wan24RPC.dll Syntax public sealed record RpcSerializer : IEquatable<RpcSerializer> Remarks Constructor Constructors | Edit this page View Source RpcSerializer() RPC serializer Declaration public RpcSerializer() Remarks Constructor Properties | Edit this page View Source CanSerialize Determine if a type can be serialized Declaration public required RpcSerializer.CanSerialize_Delegate CanSerialize { get; init; } Property Value Type Description RpcSerializer.CanSerialize_Delegate | Edit this page View Source DefaultOptIn Opt-in deserializable types? Declaration public static bool DefaultOptIn { get; set; } Property Value Type Description bool | Edit this page View Source ObjectDeserializer Object deserializer Declaration public required RpcSerializer.ObjectDeserializer_Delegate ObjectDeserializer { get; init; } Property Value Type Description RpcSerializer.ObjectDeserializer_Delegate | Edit this page View Source ObjectListDeserializer Object list deserializer Declaration public required RpcSerializer.ObjectListDeserializer_Delegate ObjectListDeserializer { get; init; } Property Value Type Description RpcSerializer.ObjectListDeserializer_Delegate | Edit this page View Source ObjectListSerializer Object list serializer Declaration public required RpcSerializer.ObjectListSerializer_Delegate ObjectListSerializer { get; init; } Property Value Type Description RpcSerializer.ObjectListSerializer_Delegate | Edit this page View Source ObjectSerializer Object serializer Declaration public required RpcSerializer.ObjectSerializer_Delegate ObjectSerializer { get; init; } Property Value Type Description RpcSerializer.ObjectSerializer_Delegate | Edit this page View Source OptIn Opt-in deserializable types? Declaration public bool? OptIn { get; init; } Property Value Type Description bool? Methods | Edit this page View Source Get(in int) Get a serializer Declaration public static RpcSerializer? Get(in int id) Parameters Type Name Description int id ID Returns Type Description RpcSerializer Serializer | Edit this page View Source GetIsOptIn() Get if opt-in is required for deserializable types Declaration public bool GetIsOptIn() Returns Type Description bool If opt-in is required | Edit this page View Source Register(in int, in RpcSerializer) Register a serializer Declaration public static void Register(in int id, in RpcSerializer serializer) Parameters Type Name Description int id ID RpcSerializer serializer Serializer | Edit this page View Source Remove(in int) Remove a serializer Declaration public static void Remove(in int id) Parameters Type Name Description int id ID Implements IEquatable<T>"
  },
  "api/wan24.RPC.Api.Messages.Serialization.html": {
    "href": "api/wan24.RPC.Api.Messages.Serialization.html",
    "title": "Namespace wan24.RPC.Api.Messages.Serialization | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Api.Messages.Serialization Classes BinarySerializer Binary RPC serializer JsonSerializer JSON RPC serializer MixedSerializer Mixed RPC serializer (chooses between binary and JSON serialization, prefers binary) RpcSerializer RPC serializer Delegates RpcSerializer.CanSerialize_Delegate Delegate for a RPC serializer method to determine if a type can be serialized RpcSerializer.ObjectDeserializer_Delegate Delegate for an object deserializer RpcSerializer.ObjectListDeserializer_Delegate Delegate for an object list deserializer RpcSerializer.ObjectListSerializer_Delegate Delegate for an object list serializer RpcSerializer.ObjectSerializer_Delegate Delegate for an object serializer"
  },
  "api/wan24.RPC.Api.Messages.SerializerRpcMessageBase.html": {
    "href": "api/wan24.RPC.Api.Messages.SerializerRpcMessageBase.html",
    "title": "Class SerializerRpcMessageBase | wan24-RPC",
    "keywords": "Class SerializerRpcMessageBase Base type for a variable serializer RPC message Inheritance object ValidatableObjectBase StreamSerializerBase RpcMessageBase SerializerRpcMessageBase EventMessage RequestMessage ResponseMessage Implements IObjectValidatable IValidatableObject IStreamSerializerVersion IStreamSerializer IRpcMessage Inherited Members RpcMessageBase.VERSION RpcMessageBase.MinHlObjectVersion RpcMessageBase.SerializedHlObjectVersion RpcMessageBase.HlObjectVersion RpcMessageBase.Type RpcMessageBase.Id RpcMessageBase.RequireId RpcMessageBase.Created RpcMessageBase.Serialize(Stream) RpcMessageBase.Deserialize(Stream, int) StreamSerializerBase.BASE_VERSION StreamSerializerBase.SerializedObjectVersion StreamSerializerBase.SerializerVersion ValidatableObjectBase.Validate(ValidationContext) ValidatableObjectBase.ObjectValidatable(IObjectValidatable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Messages Assembly: wan24RPC.dll Syntax public abstract class SerializerRpcMessageBase : RpcMessageBase, IObjectValidatable, IValidatableObject, IStreamSerializerVersion, IStreamSerializer, IRpcMessage Remarks Constructor Constructors | Edit this page View Source SerializerRpcMessageBase() Base type for a variable serializer RPC message Declaration protected SerializerRpcMessageBase() Remarks Constructor Properties | Edit this page View Source DefaultSerializer Default serializer ID Declaration public static int DefaultSerializer { get; set; } Property Value Type Description int | Edit this page View Source Serializer Serializer ID Declaration public int Serializer { get; set; } Property Value Type Description int Methods | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcMessageBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source DeserializeObjectAsync(Stream, CancellationToken) Deserialize an object Declaration protected Task<object?> DeserializeObjectAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object> Object | Edit this page View Source DeserializeObjectListAsync(Stream, CancellationToken) Deserialize an object list Declaration protected Task<object?[]?> DeserializeObjectListAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task<object[]> Object list | Edit this page View Source GetSerializer() Get the serializer Declaration protected RpcSerializer GetSerializer() Returns Type Description RpcSerializer Serializer | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides RpcMessageBase.SerializeAsync(Stream, CancellationToken) | Edit this page View Source SerializeObjectAsync(Stream, object?, CancellationToken) Serialize an object Declaration protected Task SerializeObjectAsync(Stream stream, object? obj, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream object obj Object CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source SerializeObjectListAsync(Stream, object?[]?, CancellationToken) Serialize an object list Declaration protected Task SerializeObjectListAsync(Stream stream, object?[]? objList, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream object[] objList Object list CancellationToken cancellationToken Cancellation token Returns Type Description Task Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject wan24.StreamSerializerExtensions.IStreamSerializerVersion wan24.StreamSerializerExtensions.IStreamSerializer IRpcMessage"
  },
  "api/wan24.RPC.Api.Messages.Values.RpcEnumerableValue-1.html": {
    "href": "api/wan24.RPC.Api.Messages.Values.RpcEnumerableValue-1.html",
    "title": "Class RpcEnumerableValue<T> | wan24-RPC",
    "keywords": "Class RpcEnumerableValue<T> RPC enumerable parameter Inheritance object ValidatableRecordBase StreamSerializerRecordBase RpcEnumerableValue<T> Implements IObjectValidatable IValidatableObject IEquatable<ValidatableRecordBase> IStreamSerializerVersion IStreamSerializer IEquatable<StreamSerializerRecordBase> IEquatable<RpcEnumerableValue<T>> Inherited Members StreamSerializerRecordBase.BASE_VERSION StreamSerializerRecordBase.ToString() StreamSerializerRecordBase.PrintMembers(StringBuilder) StreamSerializerRecordBase.GetHashCode() StreamSerializerRecordBase.Equals(object) StreamSerializerRecordBase.Equals(ValidatableRecordBase) StreamSerializerRecordBase.Equals(StreamSerializerRecordBase) StreamSerializerRecordBase.<Clone>$() StreamSerializerRecordBase.EqualityContract StreamSerializerRecordBase.SerializedObjectVersion StreamSerializerRecordBase.SerializerVersion ValidatableRecordBase.Validate(ValidationContext) ValidatableRecordBase.ObjectValidatable(IObjectValidatable) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api.Messages.Values Assembly: wan24RPC.dll Syntax [Rpc] public record RpcEnumerableValue<T> : StreamSerializerRecordBase, IObjectValidatable, IValidatableObject, IEquatable<ValidatableRecordBase>, IStreamSerializerVersion, IStreamSerializer, IEquatable<StreamSerializerRecordBase>, IEquatable<RpcEnumerableValue<T>> Type Parameters Name Description T Item type Constructors | Edit this page View Source RpcEnumerableValue() RPC enumerable parameter Declaration public RpcEnumerableValue() Fields | Edit this page View Source VERSION Object version Declaration public const int VERSION = 1 Field Value Type Description int Properties | Edit this page View Source Enumerable Enumerable Declaration [RequiredIf(\"Id\", new object?[] { }, RequiredIfNull = true)] public IEnumerable<T>? Enumerable { get; set; } Property Value Type Description IEnumerable<T> | Edit this page View Source HlObjectVersion Higher level object version Declaration public virtual int HlObjectVersion { get; } Property Value Type Description int | Edit this page View Source Id Enumeration ID Declaration [RequiredIf(\"Enumerable\", new object?[] { }, RequiredIfNull = true)] public long? Id { get; set; } Property Value Type Description long? | Edit this page View Source MaxItemCount Max. item count Declaration public static int MaxItemCount { get; set; } Property Value Type Description int | Edit this page View Source MinHlObjectVersion Minimum supported higher level object version (see SerializedHlObjectVersion) Declaration protected virtual int? MinHlObjectVersion { get; } Property Value Type Description int? | Edit this page View Source SerializedHlObjectVersion Deserialized higher level object version Declaration protected int? SerializedHlObjectVersion { get; } Property Value Type Description int? Methods | Edit this page View Source Deserialize(Stream, int) Deserialize Declaration protected override sealed void Deserialize(Stream stream, int version) Parameters Type Name Description Stream stream Stream int version Serializer version Overrides StreamSerializerRecordBase.Deserialize(Stream, int) | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides StreamSerializerRecordBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source Serialize(Stream) Serialize Declaration protected override sealed void Serialize(Stream stream) Parameters Type Name Description Stream stream Stream Overrides StreamSerializerRecordBase.Serialize(Stream) | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides StreamSerializerRecordBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject IEquatable<T> wan24.StreamSerializerExtensions.IStreamSerializerVersion wan24.StreamSerializerExtensions.IStreamSerializer IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Api.Messages.Values.RpcStreamValue.html": {
    "href": "api/wan24.RPC.Api.Messages.Values.RpcStreamValue.html",
    "title": "Class RpcStreamValue | wan24-RPC",
    "keywords": "Class RpcStreamValue RPC stream parameter Inheritance object ValidatableRecordBase StreamSerializerRecordBase RpcStreamValue Implements IObjectValidatable IValidatableObject IEquatable<ValidatableRecordBase> IStreamSerializerVersion IStreamSerializer IEquatable<StreamSerializerRecordBase> IEquatable<RpcStreamValue> Inherited Members StreamSerializerRecordBase.BASE_VERSION StreamSerializerRecordBase.ToString() StreamSerializerRecordBase.PrintMembers(StringBuilder) StreamSerializerRecordBase.GetHashCode() StreamSerializerRecordBase.Equals(object) StreamSerializerRecordBase.Equals(ValidatableRecordBase) StreamSerializerRecordBase.Equals(StreamSerializerRecordBase) StreamSerializerRecordBase.<Clone>$() StreamSerializerRecordBase.EqualityContract StreamSerializerRecordBase.SerializedObjectVersion StreamSerializerRecordBase.SerializerVersion ValidatableRecordBase.Validate(ValidationContext) ValidatableRecordBase.ObjectValidatable(IObjectValidatable) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api.Messages.Values Assembly: wan24RPC.dll Syntax [Rpc] public record RpcStreamValue : StreamSerializerRecordBase, IObjectValidatable, IValidatableObject, IEquatable<ValidatableRecordBase>, IStreamSerializerVersion, IStreamSerializer, IEquatable<StreamSerializerRecordBase>, IEquatable<RpcStreamValue> Constructors | Edit this page View Source RpcStreamValue() RPC stream parameter Declaration public RpcStreamValue() Fields | Edit this page View Source VERSION Object version Declaration public const int VERSION = 1 Field Value Type Description int Properties | Edit this page View Source Content Stream content Declaration [RequiredIf(\"Id\", new object?[] { }, RequiredIfNull = true)] public byte[]? Content { get; set; } Property Value Type Description byte[] | Edit this page View Source HlObjectVersion Higher level object version Declaration public virtual int HlObjectVersion { get; } Property Value Type Description int | Edit this page View Source Id Stream ID Declaration [RequiredIf(\"Content\", new object?[] { }, RequiredIfNull = true)] public long? Id { get; set; } Property Value Type Description long? | Edit this page View Source MaxContentLength Max. stream content length in bytes Declaration public static int MaxContentLength { get; set; } Property Value Type Description int | Edit this page View Source MinHlObjectVersion Minimum supported higher level object version (see SerializedHlObjectVersion) Declaration protected virtual int? MinHlObjectVersion { get; } Property Value Type Description int? | Edit this page View Source SerializedHlObjectVersion Deserialized higher level object version Declaration protected int? SerializedHlObjectVersion { get; } Property Value Type Description int? Methods | Edit this page View Source Deserialize(Stream, int) Deserialize Declaration protected override sealed void Deserialize(Stream stream, int version) Parameters Type Name Description Stream stream Stream int version Serializer version Overrides StreamSerializerRecordBase.Deserialize(Stream, int) | Edit this page View Source DeserializeAsync(Stream, int, CancellationToken) Deserialize Declaration protected override Task DeserializeAsync(Stream stream, int version, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream int version Serializer version CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides StreamSerializerRecordBase.DeserializeAsync(Stream, int, CancellationToken) | Edit this page View Source Serialize(Stream) Serialize Declaration protected override sealed void Serialize(Stream stream) Parameters Type Name Description Stream stream Stream Overrides StreamSerializerRecordBase.Serialize(Stream) | Edit this page View Source SerializeAsync(Stream, CancellationToken) Serialize Declaration protected override Task SerializeAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream Stream CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides StreamSerializerRecordBase.SerializeAsync(Stream, CancellationToken) Implements wan24.ObjectValidation.IObjectValidatable IValidatableObject IEquatable<T> wan24.StreamSerializerExtensions.IStreamSerializerVersion wan24.StreamSerializerExtensions.IStreamSerializer IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Api.Messages.Values.html": {
    "href": "api/wan24.RPC.Api.Messages.Values.html",
    "title": "Namespace wan24.RPC.Api.Messages.Values | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Api.Messages.Values Classes RpcEnumerableValue<T> RPC enumerable parameter RpcStreamValue RPC stream parameter"
  },
  "api/wan24.RPC.Api.Messages.html": {
    "href": "api/wan24.RPC.Api.Messages.html",
    "title": "Namespace wan24.RPC.Api.Messages | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Api.Messages Classes CancellationMessage RPC cancellation message ErrorResponseMessage RPC error response message EventMessage RPC event message RequestMessage RPC request message ResponseMessage RPC response message RpcMessageBase Base type for a RPC message RpcMessages Registered RPC message types SerializerRpcMessageBase Base type for a variable serializer RPC message"
  },
  "api/wan24.RPC.Api.Reflection.Extensions.ReflectionExtensions.html": {
    "href": "api/wan24.RPC.Api.Reflection.Extensions.ReflectionExtensions.html",
    "title": "Class ReflectionExtensions | wan24-RPC",
    "keywords": "Class ReflectionExtensions Reflection extensions Inheritance object ReflectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Reflection.Extensions Assembly: wan24RPC.dll Syntax public static class ReflectionExtensions Methods | Edit this page View Source FindApi(IReadOnlyDictionary<string, RpcApiInfo>, string) Find an API by its name Declaration public static RpcApiInfo? FindApi(this IReadOnlyDictionary<string, RpcApiInfo> apis, string name) Parameters Type Name Description IReadOnlyDictionary<string, RpcApiInfo> apis APIs string name Name Returns Type Description RpcApiInfo API | Edit this page View Source FindApiMethod(IReadOnlyDictionary<string, RpcApiInfo>, in string) Find an API method by its name Declaration public static RpcApiMethodInfo? FindApiMethod(this IReadOnlyDictionary<string, RpcApiInfo> apis, in string name) Parameters Type Name Description IReadOnlyDictionary<string, RpcApiInfo> apis APIs string name Name Returns Type Description RpcApiMethodInfo API method | Edit this page View Source IsEnumerable(Type, in bool, bool) Determine if a type is an IEnumerable<T> or IAsyncEnumerable<T> Declaration public static bool IsEnumerable(this Type type, in bool strict = false, bool asyncOnly = false) Parameters Type Name Description Type type Type bool strict If the type must be strictly an IEnumerable<T> or IAsyncEnumerable<T> (may be the generic type definition also) bool asyncOnly IAsyncEnumerable<T> only? Returns Type Description bool If the type is an enumerable"
  },
  "api/wan24.RPC.Api.Reflection.Extensions.html": {
    "href": "api/wan24.RPC.Api.Reflection.Extensions.html",
    "title": "Namespace wan24.RPC.Api.Reflection.Extensions | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Api.Reflection.Extensions Classes ReflectionExtensions Reflection extensions"
  },
  "api/wan24.RPC.Api.Reflection.RpcApiInfo.html": {
    "href": "api/wan24.RPC.Api.Reflection.RpcApiInfo.html",
    "title": "Class RpcApiInfo | wan24-RPC",
    "keywords": "Class RpcApiInfo RPC API info Inheritance object DisposableBase RpcApiInfo Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable Inherited Members DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api.Reflection Assembly: wan24RPC.dll Syntax public class RpcApiInfo : DisposableBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable Constructors | Edit this page View Source RpcApiInfo() Constructor Declaration protected RpcApiInfo() | Edit this page View Source RpcApiInfo(in object) Constructor Declaration public RpcApiInfo(in object api) Parameters Type Name Description object api API instance | Edit this page View Source RpcApiInfo(in Type) Constructor Declaration public RpcApiInfo(in Type type) Parameters Type Name Description Type type API type Properties | Edit this page View Source Alias Alias Declaration public RpcAliasAttribute? Alias { get; protected set; } Property Value Type Description RpcAliasAttribute | Edit this page View Source Authorization Authorization Declaration public FrozenSet<RpcAuthorizationAttributeBase> Authorization { get; protected set; } Property Value Type Description FrozenSet<RpcAuthorizationAttributeBase> | Edit this page View Source Authorize If authorized for every context Declaration public bool Authorize { get; protected set; } Property Value Type Description bool | Edit this page View Source DisposeInstance If to dispose the Instance after use Declaration public bool DisposeInstance { get; protected set; } Property Value Type Description bool | Edit this page View Source Instance API instance Declaration public object Instance { get; protected set; } Property Value Type Description object | Edit this page View Source Methods Methods Declaration public FrozenDictionary<string, RpcApiMethodInfo> Methods { get; protected set; } Property Value Type Description FrozenDictionary<string, RpcApiMethodInfo> | Edit this page View Source Name Name Declaration public virtual string Name { get; } Property Value Type Description string | Edit this page View Source NamePrefix Name prefix Declaration public string? NamePrefix { get; set; } Property Value Type Description string | Edit this page View Source Type API type Declaration public Type Type { get; protected set; } Property Value Type Description Type | Edit this page View Source Version Version Declaration public RpcVersionAttribute? Version { get; protected set; } Property Value Type Description RpcVersionAttribute Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableBase.DisposeCore() | Edit this page View Source FindMethod(string) Find a method by its name Declaration public RpcApiMethodInfo? FindMethod(string name) Parameters Type Name Description string name Name Returns Type Description RpcApiMethodInfo Method | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable"
  },
  "api/wan24.RPC.Api.Reflection.RpcApiMethodInfo.html": {
    "href": "api/wan24.RPC.Api.Reflection.RpcApiMethodInfo.html",
    "title": "Class RpcApiMethodInfo | wan24-RPC",
    "keywords": "Class RpcApiMethodInfo RPC API method info Inheritance object RpcApiMethodInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api.Reflection Assembly: wan24RPC.dll Syntax public class RpcApiMethodInfo Constructors | Edit this page View Source RpcApiMethodInfo() Constructor Declaration protected RpcApiMethodInfo() | Edit this page View Source RpcApiMethodInfo(RpcApiInfo, MethodInfo) Constructor Declaration public RpcApiMethodInfo(RpcApiInfo api, MethodInfo method) Parameters Type Name Description RpcApiInfo api API MethodInfo method Method Properties | Edit this page View Source API API Declaration public RpcApiInfo API { get; protected set; } Property Value Type Description RpcApiInfo | Edit this page View Source Alias Alias Declaration public RpcAliasAttribute? Alias { get; protected set; } Property Value Type Description RpcAliasAttribute | Edit this page View Source Authorization Authorization Declaration public FrozenSet<RpcAuthorizationAttributeBase> Authorization { get; protected set; } Property Value Type Description FrozenSet<RpcAuthorizationAttributeBase> | Edit this page View Source Authorize If authorized for every context Declaration public bool Authorize { get; protected set; } Property Value Type Description bool | Edit this page View Source DisposeReturnValue If to dispose the return value after sending Declaration public bool DisposeReturnValue { get; protected set; } Property Value Type Description bool | Edit this page View Source EnumerateReturnValue If to enumerate the return value, if applicable Declaration public bool EnumerateReturnValue { get; protected set; } Property Value Type Description bool | Edit this page View Source Method Method Declaration public MethodInfo Method { get; protected set; } Property Value Type Description MethodInfo | Edit this page View Source Name Name Declaration public virtual string Name { get; } Property Value Type Description string | Edit this page View Source Parameters Parameters Declaration public FrozenDictionary<string, RpcApiMethodParameterInfo> Parameters { get; protected set; } Property Value Type Description FrozenDictionary<string, RpcApiMethodParameterInfo> | Edit this page View Source RpcParameters RPC parameters Declaration public FrozenSet<RpcApiMethodParameterInfo> RpcParameters { get; protected set; } Property Value Type Description FrozenSet<RpcApiMethodParameterInfo> | Edit this page View Source Stream Stream configuration Declaration public RpcStreamAttribute? Stream { get; protected set; } Property Value Type Description RpcStreamAttribute | Edit this page View Source Version Version Declaration public RpcVersionAttribute? Version { get; protected set; } Property Value Type Description RpcVersionAttribute Methods | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString()"
  },
  "api/wan24.RPC.Api.Reflection.RpcApiMethodParameterInfo.html": {
    "href": "api/wan24.RPC.Api.Reflection.RpcApiMethodParameterInfo.html",
    "title": "Class RpcApiMethodParameterInfo | wan24-RPC",
    "keywords": "Class RpcApiMethodParameterInfo RPC API method parameter info Inheritance object RpcApiMethodParameterInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Api.Reflection Assembly: wan24RPC.dll Syntax public class RpcApiMethodParameterInfo Constructors | Edit this page View Source RpcApiMethodParameterInfo() Constructor Declaration protected RpcApiMethodParameterInfo() | Edit this page View Source RpcApiMethodParameterInfo(in RpcApiMethodInfo, in ParameterInfo, in int, in NullabilityInfoContext) Constructor Declaration public RpcApiMethodParameterInfo(in RpcApiMethodInfo method, in ParameterInfo pi, in int index, in NullabilityInfoContext nic) Parameters Type Name Description RpcApiMethodInfo method Method ParameterInfo pi Parameter int index Index NullabilityInfoContext nic Nullability info context Properties | Edit this page View Source API API Declaration public RpcApiInfo API { get; } Property Value Type Description RpcApiInfo | Edit this page View Source DisposeParameterValue If to dispose the parameter value after processing Declaration public bool DisposeParameterValue { get; protected set; } Property Value Type Description bool | Edit this page View Source Enumerable If the parameter value may be transported as RPC enumerable Declaration public bool Enumerable { get; protected set; } Property Value Type Description bool | Edit this page View Source Index Index Declaration public int Index { get; protected set; } Property Value Type Description int | Edit this page View Source Method Method Declaration public RpcApiMethodInfo Method { get; protected set; } Property Value Type Description RpcApiMethodInfo | Edit this page View Source Nullable If the parameter value is nullable Declaration public bool Nullable { get; protected set; } Property Value Type Description bool | Edit this page View Source Parameter Parameter Declaration public ParameterInfo Parameter { get; protected set; } Property Value Type Description ParameterInfo | Edit this page View Source RPC If the parameter is available via RPC Declaration public bool RPC { get; protected set; } Property Value Type Description bool | Edit this page View Source Stream Stream configuration Declaration public RpcStreamAttribute? Stream { get; protected set; } Property Value Type Description RpcStreamAttribute"
  },
  "api/wan24.RPC.Api.Reflection.html": {
    "href": "api/wan24.RPC.Api.Reflection.html",
    "title": "Namespace wan24.RPC.Api.Reflection | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Api.Reflection Classes RpcApiInfo RPC API info RpcApiMethodInfo RPC API method info RpcApiMethodParameterInfo RPC API method parameter info"
  },
  "api/wan24.RPC.Api.RpcApiBase.html": {
    "href": "api/wan24.RPC.Api.RpcApiBase.html",
    "title": "Class RpcApiBase | wan24-RPC",
    "keywords": "Class RpcApiBase Base type for a RPC API Inheritance object RpcApiBase Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Api Assembly: wan24RPC.dll Syntax public abstract class RpcApiBase Remarks Constructor Constructors | Edit this page View Source RpcApiBase() Base type for a RPC API Declaration protected RpcApiBase() Remarks Constructor Methods | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration [NoRpc] public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration [NoRpc] public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Edit this page View Source ToString() Returns a string that represents the current object. Declaration [NoRpc] public override string? ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString()"
  },
  "api/wan24.RPC.Api.html": {
    "href": "api/wan24.RPC.Api.html",
    "title": "Namespace wan24.RPC.Api | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Api Classes DisposableRpcApiBase Base type for a disposable RPC API RpcApiBase Base type for a RPC API"
  },
  "api/wan24.RPC.Processing.RpcContext.html": {
    "href": "api/wan24.RPC.Processing.RpcContext.html",
    "title": "Class RpcContext | wan24-RPC",
    "keywords": "Class RpcContext RPC context Inheritance object DisposableRecordBase RpcContext Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcContext> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public record RpcContext : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcContext> Remarks Constructor Constructors | Edit this page View Source RpcContext() RPC context Declaration public RpcContext() Remarks Constructor Properties | Edit this page View Source API RPC API Declaration public RpcApiInfo API { get; } Property Value Type Description RpcApiInfo | Edit this page View Source Cancellation Cancellation Declaration public CancellationToken Cancellation { get; init; } Property Value Type Description CancellationToken | Edit this page View Source Created Created time Declaration public DateTime Created { get; init; } Property Value Type Description DateTime | Edit this page View Source Done Done time Declaration public DateTime Done { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Message RPC request Declaration public required RequestMessage Message { get; init; } Property Value Type Description RequestMessage | Edit this page View Source Method RPC API method Declaration public required RpcApiMethodInfo Method { get; init; } Property Value Type Description RpcApiMethodInfo | Edit this page View Source Processor RPC processor Declaration public required RpcProcessor Processor { get; init; } Property Value Type Description RpcProcessor | Edit this page View Source Services Service provider (will be disposed) Declaration public required ScopedDiHelper Services { get; init; } Property Value Type Description ScopedDiHelper Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableRecordBase.DisposeCore() | Edit this page View Source SetDone() Set done Declaration public virtual void SetDone() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcEvent.EventHandler_Delegate.html": {
    "href": "api/wan24.RPC.Processing.RpcEvent.EventHandler_Delegate.html",
    "title": "Delegate RpcEvent.EventHandler_Delegate | wan24-RPC",
    "keywords": "Delegate RpcEvent.EventHandler_Delegate Delegate for an event handler Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public delegate Task RpcEvent.EventHandler_Delegate(RpcEvent eventInfo, EventMessage message, CancellationToken cancellationToken) Parameters Type Name Description RpcEvent eventInfo Event informations EventMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task Delegate for an event handler"
  },
  "api/wan24.RPC.Processing.RpcEvent.html": {
    "href": "api/wan24.RPC.Processing.RpcEvent.html",
    "title": "Class RpcEvent | wan24-RPC",
    "keywords": "Class RpcEvent RPC event Inheritance object RpcEvent Implements IEquatable<RpcEvent> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public record RpcEvent : IEquatable<RpcEvent> Fields | Edit this page View Source SyncObject An object for thread synchronization Declaration protected readonly object SyncObject Field Value Type Description object Properties | Edit this page View Source Arguments Event arguments type (must be a EventArgs) Declaration public Type? Arguments { get; init; } Property Value Type Description Type | Edit this page View Source FirstRaised First raised time Declaration public DateTime FirstRaised { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Handler Event handler Declaration public required RpcEvent.EventHandler_Delegate Handler { get; init; } Property Value Type Description RpcEvent.EventHandler_Delegate | Edit this page View Source LastRaised Last raised time Declaration public DateTime LastRaised { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Name Event name Declaration public required string Name { get; init; } Property Value Type Description string | Edit this page View Source Processor Processor Declaration public required RpcProcessor Processor { get; init; } Property Value Type Description RpcProcessor | Edit this page View Source RaiseCount Number of times the event was raised Declaration public long RaiseCount { get; protected set; } Property Value Type Description long Methods | Edit this page View Source RaiseEventAsync(EventMessage, CancellationToken) Raise the event Declaration public virtual Task RaiseEventAsync(EventMessage message, CancellationToken cancellationToken) Parameters Type Name Description EventMessage message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task Implements IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessor.Call.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.Call.html",
    "title": "Class RpcProcessor.Call | wan24-RPC",
    "keywords": "Class RpcProcessor.Call RPC call Inheritance object DisposableRecordBase RpcProcessor.Call Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcProcessor.Call> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeCore() DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax protected record RpcProcessor.Call : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcProcessor.Call> Constructors | Edit this page View Source Call() RPC call Declaration public Call() Properties | Edit this page View Source CallCancellation Call cancellation Declaration public CancellationTokenSource CallCancellation { get; } Property Value Type Description CancellationTokenSource | Edit this page View Source Completion Completion Declaration public TaskCompletionSource<object?> Completion { get; } Property Value Type Description TaskCompletionSource<object> | Edit this page View Source Context Context Declaration public RpcContext? Context { get; set; } Property Value Type Description RpcContext | Edit this page View Source Created Created time Declaration public DateTime Created { get; } Property Value Type Description DateTime | Edit this page View Source Done Done time Declaration public DateTime Done { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Message Message Declaration public required IRpcRequest Message { get; init; } Property Value Type Description IRpcRequest | Edit this page View Source Processed If the call was processed Declaration public bool Processed { get; set; } Property Value Type Description bool | Edit this page View Source ProcessorCancellation RPC processor cancellation token Declaration public required CancellationToken ProcessorCancellation { get; init; } Property Value Type Description CancellationToken Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source SetDone() Set done Declaration public virtual void SetDone() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessor.CallQueue.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.CallQueue.html",
    "title": "Class RpcProcessor.CallQueue | wan24-RPC",
    "keywords": "Class RpcProcessor.CallQueue RPC call queue Inheritance object DisposableBase HostedServiceBase QueueWorker ParallelQueueWorker ParallelItemQueueWorkerBase<RpcProcessor.Call> RpcProcessor.CallQueue Implements IWillDispose IParallelQueueWorker IItemQueueWorker<RpcProcessor.Call> IQueueWorker IServiceWorkerStatus IServiceWorker IHostedService IDisposableObject IDisposable IAsyncDisposable IStatusProvider Inherited Members ParallelItemQueueWorkerBase<RpcProcessor.Call>.EnqueueAsync(RpcProcessor.Call, CancellationToken) ParallelItemQueueWorkerBase<RpcProcessor.Call>.TryEnqueue(RpcProcessor.Call) ParallelItemQueueWorkerBase<RpcProcessor.Call>.EnqueueRangeAsync(IEnumerable<RpcProcessor.Call>, CancellationToken) ParallelItemQueueWorkerBase<RpcProcessor.Call>.EnqueueRangeAsync(IAsyncEnumerable<RpcProcessor.Call>, CancellationToken) ParallelQueueWorker.Busy ParallelQueueWorker.Processing ParallelQueueWorker.WorkerSync ParallelQueueWorker.ProcessCount ParallelQueueWorker.WaitBoring(TimeSpan) ParallelQueueWorker.WaitBoringAsync(TimeSpan) ParallelQueueWorker.WaitBoring(CancellationToken) ParallelQueueWorker.WaitBoringAsync(CancellationToken) ParallelQueueWorker.AfterStopAsync(CancellationToken) ParallelQueueWorker.WorkerAsync() ParallelQueueWorker.Process(QueueWorker.Task_Delegate, CancellationToken) ParallelQueueWorker.Dispose(bool) ParallelQueueWorker.DisposeCore() ParallelQueueWorker.Threads ParallelQueueWorker.State QueueWorker.Queue QueueWorker.EnqueueAsync(QueueWorker.Task_Delegate, CancellationToken) QueueWorker.TryEnqueue(QueueWorker.Task_Delegate, CancellationToken) QueueWorker.EnqueueRangeAsync(IEnumerable<QueueWorker.Task_Delegate>, CancellationToken) QueueWorker.EnqueueRangeAsync(IAsyncEnumerable<QueueWorker.Task_Delegate>, CancellationToken) QueueWorker.GUID QueueWorker.Queued HostedServiceBase.Sync HostedServiceBase.RunEvent HostedServiceBase.PauseEvent HostedServiceBase.StopTask HostedServiceBase.Cancellation HostedServiceBase.ServiceTask HostedServiceBase._LastException HostedServiceBase.StartAsync(CancellationToken) HostedServiceBase.StopAsync(CancellationToken) HostedServiceBase.PauseAsync(CancellationToken) HostedServiceBase.ResumeAsync(CancellationToken) HostedServiceBase.ToString() HostedServiceBase.BeforeStartAsync(CancellationToken) HostedServiceBase.StartingAsync(CancellationToken) HostedServiceBase.AfterStartAsync(CancellationToken) HostedServiceBase.BeforeStopAsync(CancellationToken) HostedServiceBase.StoppingAsync(CancellationToken) HostedServiceBase.BeforePauseAsync(CancellationToken) HostedServiceBase.PausingAsync(CancellationToken) HostedServiceBase.AfterPauseAsync(CancellationToken) HostedServiceBase.BeforeResumeAsync(CancellationToken) HostedServiceBase.ResumingAsync(CancellationToken) HostedServiceBase.AfterResumeAsync(CancellationToken) HostedServiceBase.RunServiceAsync() HostedServiceBase.EnsureNotCanceled(in bool) HostedServiceBase.EnsureRunning(in bool) HostedServiceBase.RaiseOnException() HostedServiceBase.CanPause HostedServiceBase.IsRunning HostedServiceBase.IsPaused HostedServiceBase.Started HostedServiceBase.Paused HostedServiceBase.Stopped HostedServiceBase.IsStopping HostedServiceBase.LastException HostedServiceBase.StoppedExceptional HostedServiceBase.Name HostedServiceBase.ErrorSource HostedServiceBase.CancelToken HostedServiceBase.OnException DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax protected class RpcProcessor.CallQueue : ParallelItemQueueWorkerBase<RpcProcessor.Call>, IWillDispose, IParallelQueueWorker, IItemQueueWorker<RpcProcessor.Call>, IQueueWorker, IServiceWorkerStatus, IServiceWorker, IHostedService, IDisposableObject, IDisposable, IAsyncDisposable, IStatusProvider Remarks Constructor Constructors | Edit this page View Source CallQueue(in RpcProcessor) RPC call queue Declaration public CallQueue(in RpcProcessor processor) Parameters Type Name Description RpcProcessor processor RPC processor Remarks Constructor Properties | Edit this page View Source Processor RPC processor Declaration public RpcProcessor Processor { get; } Property Value Type Description RpcProcessor Methods | Edit this page View Source AuthorizeContextAsync(Call, RequestMessage, RpcApiMethodInfo, RpcContext) Authorize the RPC context (should set a Completion exception on error) Declaration protected virtual Task<bool> AuthorizeContextAsync(RpcProcessor.Call item, RequestMessage request, RpcApiMethodInfo method, RpcContext context) Parameters Type Name Description RpcProcessor.Call item RPC call RequestMessage request RPC request message RpcApiMethodInfo method RPC API method RpcContext context Context Returns Type Description Task<bool> If authorized | Edit this page View Source FindApiMethodAsync(Call, RequestMessage) Find the API method to use (should set a Completion exception on error) Declaration protected virtual Task<RpcApiMethodInfo?> FindApiMethodAsync(RpcProcessor.Call item, RequestMessage request) Parameters Type Name Description RpcProcessor.Call item RPC call RequestMessage request RPC request message Returns Type Description Task<RpcApiMethodInfo> API method (validated to be callable using the RPC request informations) | Edit this page View Source GetFinalParameterValueAsync(Call, RequestMessage, RpcContext, RpcApiMethodParameterInfo, int, object?) Get the final parameter value for the API method call Declaration protected virtual Task<object?> GetFinalParameterValueAsync(RpcProcessor.Call item, RequestMessage request, RpcContext context, RpcApiMethodParameterInfo parameter, int index, object? value) Parameters Type Name Description RpcProcessor.Call item RPC call RequestMessage request RPC request message RpcContext context Context RpcApiMethodParameterInfo parameter API method parameter int index Zero based index of the RPC call parameter (or -1, if it's not a RPC servable parameter) object value Current parameter value Returns Type Description Task<object> Parameter value to use | Edit this page View Source GetFinalReturnValueAsync(Call, RequestMessage, RpcContext, RpcApiMethodInfo, object?) Get the final return value of a method callwhich will be sent back to the peer Declaration protected virtual Task<object?> GetFinalReturnValueAsync(RpcProcessor.Call item, RequestMessage request, RpcContext context, RpcApiMethodInfo method, object? returnValue) Parameters Type Name Description RpcProcessor.Call item RPC call RequestMessage request RPC request message RpcContext context Context RpcApiMethodInfo method API method object returnValue Return value Returns Type Description Task<object> Final return value | Edit this page View Source GetParameterValueAsync(Call, RequestMessage, RpcContext, RpcApiMethodParameterInfo, int) Get a parameter value for the API method call Declaration protected virtual Task<object?> GetParameterValueAsync(RpcProcessor.Call item, RequestMessage request, RpcContext context, RpcApiMethodParameterInfo parameter, int index) Parameters Type Name Description RpcProcessor.Call item RPC call RequestMessage request RPC request message RpcContext context Context RpcApiMethodParameterInfo parameter API method parameter int index Zero based index of the RPC call parameter (or -1, if it's not a RPC servable parameter) Returns Type Description Task<object> Parameter value to use | Edit this page View Source ProcessItem(Call, CancellationToken) Process one item Declaration protected override Task ProcessItem(RpcProcessor.Call item, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor.Call item Item to process CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides ParallelItemQueueWorkerBase<RpcProcessor.Call>.ProcessItem(RpcProcessor.Call, CancellationToken) Implements wan24.Core.IWillDispose wan24.Core.IParallelQueueWorker wan24.Core.IItemQueueWorker<T> wan24.Core.IQueueWorker wan24.Core.IServiceWorkerStatus wan24.Core.IServiceWorker IHostedService wan24.Core.IDisposableObject IDisposable IAsyncDisposable wan24.Core.IStatusProvider"
  },
  "api/wan24.RPC.Processing.RpcProcessor.Request.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.Request.html",
    "title": "Class RpcProcessor.Request | wan24-RPC",
    "keywords": "Class RpcProcessor.Request RPC request Inheritance object DisposableRecordBase RpcProcessor.Request Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcProcessor.Request> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeCore() DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax protected record RpcProcessor.Request : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcProcessor.Request> Constructors | Edit this page View Source Request() RPC request Declaration public Request() Properties | Edit this page View Source Created Created time Declaration public DateTime Created { get; } Property Value Type Description DateTime | Edit this page View Source Done Done time Declaration public DateTime Done { get; protected set; } Property Value Type Description DateTime | Edit this page View Source Message Message Declaration public required IRpcRequest Message { get; init; } Property Value Type Description IRpcRequest | Edit this page View Source Processed If the request was processed Declaration public bool Processed { get; set; } Property Value Type Description bool | Edit this page View Source ProcessorCancellation RPC processor cancellation token Declaration public required CancellationToken ProcessorCancellation { get; init; } Property Value Type Description CancellationToken | Edit this page View Source ProcessorCompletion Processor completion Declaration public TaskCompletionSource<object?> ProcessorCompletion { get; } Property Value Type Description TaskCompletionSource<object> | Edit this page View Source RequestCancellation Request cancellation token Declaration public CancellationToken RequestCancellation { get; init; } Property Value Type Description CancellationToken | Edit this page View Source RequestCompletion Request completion Declaration public TaskCompletionSource<object?> RequestCompletion { get; } Property Value Type Description TaskCompletionSource<object> Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source SetDone() Set done Declaration public virtual void SetDone() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.RpcProcessor.RequestQueue.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.RequestQueue.html",
    "title": "Class RpcProcessor.RequestQueue | wan24-RPC",
    "keywords": "Class RpcProcessor.RequestQueue RPC request queue Inheritance object DisposableBase HostedServiceBase QueueWorker ParallelQueueWorker ParallelItemQueueWorkerBase<RpcProcessor.Request> RpcProcessor.RequestQueue Implements IWillDispose IParallelQueueWorker IItemQueueWorker<RpcProcessor.Request> IQueueWorker IServiceWorkerStatus IServiceWorker IHostedService IDisposableObject IDisposable IAsyncDisposable IStatusProvider Inherited Members ParallelItemQueueWorkerBase<RpcProcessor.Request>.EnqueueAsync(RpcProcessor.Request, CancellationToken) ParallelItemQueueWorkerBase<RpcProcessor.Request>.TryEnqueue(RpcProcessor.Request) ParallelItemQueueWorkerBase<RpcProcessor.Request>.EnqueueRangeAsync(IEnumerable<RpcProcessor.Request>, CancellationToken) ParallelItemQueueWorkerBase<RpcProcessor.Request>.EnqueueRangeAsync(IAsyncEnumerable<RpcProcessor.Request>, CancellationToken) ParallelQueueWorker.Busy ParallelQueueWorker.Processing ParallelQueueWorker.WorkerSync ParallelQueueWorker.ProcessCount ParallelQueueWorker.WaitBoring(TimeSpan) ParallelQueueWorker.WaitBoringAsync(TimeSpan) ParallelQueueWorker.WaitBoring(CancellationToken) ParallelQueueWorker.WaitBoringAsync(CancellationToken) ParallelQueueWorker.AfterStopAsync(CancellationToken) ParallelQueueWorker.WorkerAsync() ParallelQueueWorker.Process(QueueWorker.Task_Delegate, CancellationToken) ParallelQueueWorker.Dispose(bool) ParallelQueueWorker.DisposeCore() ParallelQueueWorker.Threads ParallelQueueWorker.State QueueWorker.Queue QueueWorker.EnqueueAsync(QueueWorker.Task_Delegate, CancellationToken) QueueWorker.TryEnqueue(QueueWorker.Task_Delegate, CancellationToken) QueueWorker.EnqueueRangeAsync(IEnumerable<QueueWorker.Task_Delegate>, CancellationToken) QueueWorker.EnqueueRangeAsync(IAsyncEnumerable<QueueWorker.Task_Delegate>, CancellationToken) QueueWorker.GUID QueueWorker.Queued HostedServiceBase.Sync HostedServiceBase.RunEvent HostedServiceBase.PauseEvent HostedServiceBase.StopTask HostedServiceBase.Cancellation HostedServiceBase.ServiceTask HostedServiceBase._LastException HostedServiceBase.StartAsync(CancellationToken) HostedServiceBase.StopAsync(CancellationToken) HostedServiceBase.PauseAsync(CancellationToken) HostedServiceBase.ResumeAsync(CancellationToken) HostedServiceBase.ToString() HostedServiceBase.BeforeStartAsync(CancellationToken) HostedServiceBase.StartingAsync(CancellationToken) HostedServiceBase.AfterStartAsync(CancellationToken) HostedServiceBase.BeforeStopAsync(CancellationToken) HostedServiceBase.StoppingAsync(CancellationToken) HostedServiceBase.BeforePauseAsync(CancellationToken) HostedServiceBase.PausingAsync(CancellationToken) HostedServiceBase.AfterPauseAsync(CancellationToken) HostedServiceBase.BeforeResumeAsync(CancellationToken) HostedServiceBase.ResumingAsync(CancellationToken) HostedServiceBase.AfterResumeAsync(CancellationToken) HostedServiceBase.RunServiceAsync() HostedServiceBase.EnsureNotCanceled(in bool) HostedServiceBase.EnsureRunning(in bool) HostedServiceBase.RaiseOnException() HostedServiceBase.CanPause HostedServiceBase.IsRunning HostedServiceBase.IsPaused HostedServiceBase.Started HostedServiceBase.Paused HostedServiceBase.Stopped HostedServiceBase.IsStopping HostedServiceBase.LastException HostedServiceBase.StoppedExceptional HostedServiceBase.Name HostedServiceBase.ErrorSource HostedServiceBase.CancelToken HostedServiceBase.OnException DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax protected class RpcProcessor.RequestQueue : ParallelItemQueueWorkerBase<RpcProcessor.Request>, IWillDispose, IParallelQueueWorker, IItemQueueWorker<RpcProcessor.Request>, IQueueWorker, IServiceWorkerStatus, IServiceWorker, IHostedService, IDisposableObject, IDisposable, IAsyncDisposable, IStatusProvider Constructors | Edit this page View Source RequestQueue(in RpcProcessor) RPC request queue Declaration public RequestQueue(in RpcProcessor processor) Parameters Type Name Description RpcProcessor processor Properties | Edit this page View Source Processor RPC processor Declaration public RpcProcessor Processor { get; } Property Value Type Description RpcProcessor Methods | Edit this page View Source ProcessItem(Request, CancellationToken) Process one item Declaration protected override Task ProcessItem(RpcProcessor.Request item, CancellationToken cancellationToken) Parameters Type Name Description RpcProcessor.Request item Item to process CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides ParallelItemQueueWorkerBase<RpcProcessor.Request>.ProcessItem(RpcProcessor.Request, CancellationToken) Implements wan24.Core.IWillDispose wan24.Core.IParallelQueueWorker wan24.Core.IItemQueueWorker<T> wan24.Core.IQueueWorker wan24.Core.IServiceWorkerStatus wan24.Core.IServiceWorker IHostedService wan24.Core.IDisposableObject IDisposable IAsyncDisposable wan24.Core.IStatusProvider"
  },
  "api/wan24.RPC.Processing.RpcProcessor.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessor.html",
    "title": "Class RpcProcessor | wan24-RPC",
    "keywords": "Class RpcProcessor RPC processor Inheritance object DisposableBase HostedServiceBase RpcProcessor Implements IWillDispose IServiceWorker IHostedService IDisposableObject IDisposable IAsyncDisposable Inherited Members HostedServiceBase.Sync HostedServiceBase.RunEvent HostedServiceBase.PauseEvent HostedServiceBase.StopTask HostedServiceBase.Cancellation HostedServiceBase.ServiceTask HostedServiceBase._LastException HostedServiceBase.StartAsync(CancellationToken) HostedServiceBase.StopAsync(CancellationToken) HostedServiceBase.PauseAsync(CancellationToken) HostedServiceBase.ResumeAsync(CancellationToken) HostedServiceBase.ToString() HostedServiceBase.BeforeStartAsync(CancellationToken) HostedServiceBase.StartingAsync(CancellationToken) HostedServiceBase.AfterStartAsync(CancellationToken) HostedServiceBase.BeforeStopAsync(CancellationToken) HostedServiceBase.StoppingAsync(CancellationToken) HostedServiceBase.AfterStopAsync(CancellationToken) HostedServiceBase.BeforePauseAsync(CancellationToken) HostedServiceBase.PausingAsync(CancellationToken) HostedServiceBase.AfterPauseAsync(CancellationToken) HostedServiceBase.BeforeResumeAsync(CancellationToken) HostedServiceBase.ResumingAsync(CancellationToken) HostedServiceBase.AfterResumeAsync(CancellationToken) HostedServiceBase.RunServiceAsync() HostedServiceBase.EnsureNotCanceled(in bool) HostedServiceBase.EnsureRunning(in bool) HostedServiceBase.RaiseOnException() HostedServiceBase.CanPause HostedServiceBase.IsRunning HostedServiceBase.IsPaused HostedServiceBase.Started HostedServiceBase.Paused HostedServiceBase.Stopped HostedServiceBase.IsStopping HostedServiceBase.LastException HostedServiceBase.StoppedExceptional HostedServiceBase.Name HostedServiceBase.ErrorSource HostedServiceBase.CancelToken HostedServiceBase.OnException DisposableBase.DisposeSyncObject DisposableBase.AsyncDisposing DisposableBase.AllowFinalizer DisposableBase.DisposeObjects DisposableBase.StackInfo DisposableBase.RegisterForDispose<T>(in T) DisposableBase.EnsureUndisposed(in bool, in bool) DisposableBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableBase.IfUndisposed<T>(in T, in bool) DisposableBase.IfUndisposed(in Action, in bool) DisposableBase.IfUndisposed<T>(in Func<T>, in bool) DisposableBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableBase.DisposeAttributes() DisposableBase.DisposeAttributesAsync() DisposableBase.Dispose() DisposableBase.DisposeAsync() DisposableBase.CreateStackInfo DisposableBase.DestructorDisposing DisposableBase.IsDisposing DisposableBase.IsDisposed DisposableBase.OnDisposing DisposableBase.OnDisposed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public class RpcProcessor : HostedServiceBase, IWillDispose, IServiceWorker, IHostedService, IDisposableObject, IDisposable, IAsyncDisposable Constructors | Edit this page View Source RpcProcessor(in RpcProcessorOptions) Constructor Declaration public RpcProcessor(in RpcProcessorOptions options) Parameters Type Name Description RpcProcessorOptions options Options (will be disposed) Fields | Edit this page View Source Calls RPC calls Declaration protected readonly RpcProcessor.CallQueue Calls Field Value Type Description RpcProcessor.CallQueue | Edit this page View Source MessageId Message ID Declaration protected long MessageId Field Value Type Description long | Edit this page View Source PendingCalls Pending calls Declaration protected readonly ConcurrentDictionary<long, RpcProcessor.Call> PendingCalls Field Value Type Description ConcurrentDictionary<long, RpcProcessor.Call> | Edit this page View Source PendingRequests Pending RPC requests Declaration protected readonly ConcurrentDictionary<long, RpcProcessor.Request> PendingRequests Field Value Type Description ConcurrentDictionary<long, RpcProcessor.Request> | Edit this page View Source Requests RPC request queue Declaration protected readonly RpcProcessor.RequestQueue Requests Field Value Type Description RpcProcessor.RequestQueue | Edit this page View Source WriteSync Stream writing thread synchronization Declaration protected readonly SemaphoreSync WriteSync Field Value Type Description SemaphoreSync | Edit this page View Source _RemoteEvents Remote events (key is the event name; values will be disposed) Declaration protected readonly ConcurrentDictionary<string, RpcEvent> _RemoteEvents Field Value Type Description ConcurrentDictionary<string, RpcEvent> Properties | Edit this page View Source Options Options (will be disposed) Declaration public RpcProcessorOptions Options { get; } Property Value Type Description RpcProcessorOptions | Edit this page View Source RemoteEvents Registered remote events Declaration public IEnumerable<RpcEvent> RemoteEvents { get; } Property Value Type Description IEnumerable<RpcEvent> Methods | Edit this page View Source BeginWorkAsync() Begin working Declaration protected virtual Task BeginWorkAsync() Returns Type Description Task | Edit this page View Source CallNullableAsync<T>(string?, string, CancellationToken, params object?[]) Call a RPC API method at the peer and wait for the response Declaration public virtual Task<T?> CallNullableAsync<T>(string? api, string method, CancellationToken cancellationToken = default, params object?[] parameters) Parameters Type Name Description string api API name string method Method name CancellationToken cancellationToken Cancellation token object[] parameters Parameters Returns Type Description Task<T> Return value Type Parameters Name Description T Return value type | Edit this page View Source CallValueAsync<T>(string?, string, CancellationToken, params object?[]) Call a RPC API method at the peer and wait for the return value Declaration public virtual Task<T> CallValueAsync<T>(string? api, string method, CancellationToken cancellationToken = default, params object?[] parameters) Parameters Type Name Description string api API name string method Method name CancellationToken cancellationToken Cancellation token object[] parameters Parameters Returns Type Description Task<T> Return value Type Parameters Name Description T Return value type | Edit this page View Source CallVoidAsync(string?, string, CancellationToken, params object?[]) Call a RPC API method at the peer and wait for the return value Declaration public virtual Task CallVoidAsync(string? api, string method, CancellationToken cancellationToken = default, params object?[] parameters) Parameters Type Name Description string api API name string method Method name CancellationToken cancellationToken Cancellation token object[] parameters Parameters Returns Type Description Task Return value | Edit this page View Source CancelRequestAsync(RequestMessage) Cancel a RPC request Declaration protected virtual Task CancelRequestAsync(RequestMessage request) Parameters Type Name Description RequestMessage request RPC request message Returns Type Description Task | Edit this page View Source CreateEvent(in string, in EventHandler_Delegate) Create an event Declaration protected virtual RpcEvent CreateEvent(in string name, in RpcEvent.EventHandler_Delegate handler) Parameters Type Name Description string name Event name RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event | Edit this page View Source CreateEvent<T>(in string, in EventHandler_Delegate) Create an event Declaration protected virtual RpcEvent CreateEvent<T>(in string name, in RpcEvent.EventHandler_Delegate handler) where T : EventArgs Parameters Type Name Description string name Event name RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event Type Parameters Name Description T Event arguments type | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides HostedServiceBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.HostedServiceBase.DisposeCore() | Edit this page View Source EndWorkAsync() End working Declaration protected virtual Task EndWorkAsync() Returns Type Description Task | Edit this page View Source GetContext(in RequestMessage, in RpcApiMethodInfo, in CancellationToken) Get a context for processing a RPC call Declaration protected virtual RpcContext GetContext(in RequestMessage request, in RpcApiMethodInfo method, in CancellationToken cancellationToken) Parameters Type Name Description RequestMessage request Message RpcApiMethodInfo method API method CancellationToken cancellationToken Cancellation token Returns Type Description RpcContext Context | Edit this page View Source HandleCallProcessingErrorAsync(Call, Exception) Handle a call processing error Declaration protected virtual Task HandleCallProcessingErrorAsync(RpcProcessor.Call call, Exception exception) Parameters Type Name Description RpcProcessor.Call call Call Exception exception Exception Returns Type Description Task | Edit this page View Source HandleCancellationAsync(CancellationMessage) Handle a RPC request cancellation (processing will be stopped on handler exception) Declaration protected virtual Task HandleCancellationAsync(CancellationMessage message) Parameters Type Name Description CancellationMessage message Message Returns Type Description Task | Edit this page View Source HandleErrorAsync(ErrorResponseMessage) Handle a RPC error response (processing will be stopped on handler exception) Declaration protected virtual Task HandleErrorAsync(ErrorResponseMessage message) Parameters Type Name Description ErrorResponseMessage message Message Returns Type Description Task | Edit this page View Source HandleEventAsync(EventMessage) Handle a RPC event (processing will be stopped on handler exception) Declaration protected virtual Task HandleEventAsync(EventMessage message) Parameters Type Name Description EventMessage message Message Returns Type Description Task | Edit this page View Source HandleMessageAsync(RpcMessageBase) Handle a message (should call StopExceptionalAsync(Exception) on exception) Declaration protected virtual Task HandleMessageAsync(RpcMessageBase message) Parameters Type Name Description RpcMessageBase message Message Returns Type Description Task | Edit this page View Source HandleRequestAsync(RequestMessage) Handle a RPC request (processing will be stopped on handler exception) Declaration protected virtual Task HandleRequestAsync(RequestMessage message) Parameters Type Name Description RequestMessage message Message Returns Type Description Task | Edit this page View Source HandleResponseAsync(ResponseMessage) Handle a RPC response (processing will be stopped on handler exception) Declaration protected virtual Task HandleResponseAsync(ResponseMessage message) Parameters Type Name Description ResponseMessage message Message Returns Type Description Task | Edit this page View Source RaiseEventAsync(string, EventArgs?, bool, CancellationToken) Raise an event at the peer Declaration public virtual Task RaiseEventAsync(string name, EventArgs? e = null, bool wait = false, CancellationToken cancellationToken = default) Parameters Type Name Description string name Event name EventArgs e Event arguments bool wait Wait for remote event handlers to finish? CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source RegisterEvent(in string, in EventHandler_Delegate) Register a remote event handler Declaration public virtual RpcEvent RegisterEvent(in string name, in RpcEvent.EventHandler_Delegate handler) Parameters Type Name Description string name Event name RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event | Edit this page View Source RegisterEvent<T>(in string, in EventHandler_Delegate) Register a remote event handler Declaration public virtual RpcEvent RegisterEvent<T>(in string name, in RpcEvent.EventHandler_Delegate handler) where T : EventArgs Parameters Type Name Description string name Event name RpcEvent.EventHandler_Delegate handler Event handler Returns Type Description RpcEvent Event Type Parameters Name Description T Event arguments type | Edit this page View Source SendErrorResponseAsync(RequestMessage, Exception) Send an error response for a RPC request processing exception Declaration protected virtual Task SendErrorResponseAsync(RequestMessage message, Exception exception) Parameters Type Name Description RequestMessage message RPC request Exception exception Exception Returns Type Description Task | Edit this page View Source SendMessageAsync(RpcMessageBase, CancellationToken) Send a RPC message to the peer Declaration protected virtual Task SendMessageAsync(RpcMessageBase message, CancellationToken cancellationToken = default) Parameters Type Name Description RpcMessageBase message Message CancellationToken cancellationToken Cancellation token Returns Type Description Task | Edit this page View Source SendResponseAsync(RequestMessage, object?) Send a response for a RPC request Declaration protected virtual Task SendResponseAsync(RequestMessage message, object? returnValue) Parameters Type Name Description RequestMessage message RPC request object returnValue Return value (should be null, if WantsReturnValue is false) Returns Type Description Task | Edit this page View Source StopExceptionalAsync(Exception) Stop exceptional Declaration protected virtual Task StopExceptionalAsync(Exception ex) Parameters Type Name Description Exception ex Exception Returns Type Description Task | Edit this page View Source WorkerAsync() Service worker Declaration protected override Task WorkerAsync() Returns Type Description Task Overrides wan24.Core.HostedServiceBase.WorkerAsync() Implements wan24.Core.IWillDispose wan24.Core.IServiceWorker IHostedService wan24.Core.IDisposableObject IDisposable IAsyncDisposable"
  },
  "api/wan24.RPC.Processing.RpcProcessorOptions.html": {
    "href": "api/wan24.RPC.Processing.RpcProcessorOptions.html",
    "title": "Class RpcProcessorOptions | wan24-RPC",
    "keywords": "Class RpcProcessorOptions RPC processor options Inheritance object DisposableRecordBase RpcProcessorOptions Implements IWillDispose IDisposableObject IDisposable IAsyncDisposable IEquatable<DisposableRecordBase> IEquatable<RpcProcessorOptions> Inherited Members DisposableRecordBase.DisposeSyncObject DisposableRecordBase.AsyncDisposing DisposableRecordBase.AllowFinalizer DisposableRecordBase.DisposeObjects DisposableRecordBase.StackInfo DisposableRecordBase.RegisterForDispose<T>(in T) DisposableRecordBase.LockDisposing(in TimeSpan, in CancellationToken) DisposableRecordBase.LockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.TryLockDisposing(out SemaphoreSyncContext, in TimeSpan, in CancellationToken) DisposableRecordBase.TryLockDisposingAsync(TimeSpan, CancellationToken) DisposableRecordBase.EnsureUndisposed(in bool, in bool) DisposableRecordBase.IfUndisposed<T>(in T, in bool) DisposableRecordBase.IfUndisposed(in Action, in bool) DisposableRecordBase.IfUndisposed<T>(in Func<T>, in bool) DisposableRecordBase.IfUndisposedNullable<T>(in Func<T>, in bool) DisposableRecordBase.DisposeAttributes() DisposableRecordBase.DisposeAttributesAsync() DisposableRecordBase.Dispose() DisposableRecordBase.DisposeAsync() DisposableRecordBase.ToString() DisposableRecordBase.PrintMembers(StringBuilder) DisposableRecordBase.GetHashCode() DisposableRecordBase.Equals(object) DisposableRecordBase.Equals(DisposableRecordBase) DisposableRecordBase.<Clone>$() DisposableRecordBase.EqualityContract DisposableRecordBase.CreateStackInfo DisposableRecordBase.DestructorDisposing DisposableRecordBase.IsDisposing DisposableRecordBase.IsDisposed DisposableRecordBase.OnDisposing DisposableRecordBase.OnDisposed object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.RPC.Processing Assembly: wan24RPC.dll Syntax public record RpcProcessorOptions : DisposableRecordBase, IWillDispose, IDisposableObject, IDisposable, IAsyncDisposable, IEquatable<DisposableRecordBase>, IEquatable<RpcProcessorOptions> Constructors | Edit this page View Source RpcProcessorOptions() Constructor Declaration protected RpcProcessorOptions() | Edit this page View Source RpcProcessorOptions(params object[]) Constructor Declaration public RpcProcessorOptions(params object[] apis) Parameters Type Name Description object[] apis APIs (will be disposed per default) | Edit this page View Source RpcProcessorOptions(params Type[]) Constructor Declaration public RpcProcessorOptions(params Type[] apis) Parameters Type Name Description Type[] apis API types (instances will be disposed per default) Properties | Edit this page View Source API API (infos will be disposed) Declaration public Dictionary<string, RpcApiInfo> API { get; init; } Property Value Type Description Dictionary<string, RpcApiInfo> | Edit this page View Source ApiVersion Peer API version Declaration public int ApiVersion { get; set; } Property Value Type Description int | Edit this page View Source CallQueueSize Max. number of queued RPC requests (RPC requests from the peer; should at last fit the peers RequestThreads) Declaration public required int CallQueueSize { get; init; } Property Value Type Description int | Edit this page View Source CallThreads Max. number of RPC request processing threads Declaration public required int CallThreads { get; init; } Property Value Type Description int | Edit this page View Source DefaultContext Default context for an incoming RPC call (will be disposed) Declaration public RpcContext? DefaultContext { get; init; } Property Value Type Description RpcContext | Edit this page View Source DefaultServices Default service provider for an incoming RPC call (will be disposed) Declaration public IServiceProvider? DefaultServices { get; init; } Property Value Type Description IServiceProvider | Edit this page View Source DisconnectOnApiError Disconnect the peer on API error (when processing RPC requests)? Declaration public bool DisconnectOnApiError { get; init; } Property Value Type Description bool | Edit this page View Source FlushStream Flush the Stream after sending a message? Declaration public bool FlushStream { get; init; } Property Value Type Description bool | Edit this page View Source Logger Logger Declaration public ILogger? Logger { get; init; } Property Value Type Description ILogger | Edit this page View Source RequestQueueSize Max. number of queued RPC calls (RPC requests to the peer) Declaration public required int RequestQueueSize { get; init; } Property Value Type Description int | Edit this page View Source RequestThreads Max. number of RPC call processing threads (should not exceed the peers CallQueueSize) Declaration public required int RequestThreads { get; init; } Property Value Type Description int | Edit this page View Source SerializerVersion Stream serializer version Declaration public int SerializerVersion { get; init; } Property Value Type Description int | Edit this page View Source Stream Bi-directional RPC stream (will be disposed) Declaration public required Stream Stream { get; init; } Property Value Type Description Stream Methods | Edit this page View Source Dispose(bool) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Disposing? (may be false, if called from the destructor) Overrides DisposableRecordBase.Dispose(bool) | Edit this page View Source DisposeCore() Dispose Declaration protected override Task DisposeCore() Returns Type Description Task Overrides wan24.Core.DisposableRecordBase.DisposeCore() Implements wan24.Core.IWillDispose wan24.Core.IDisposableObject IDisposable IAsyncDisposable IEquatable<T> IEquatable<T>"
  },
  "api/wan24.RPC.Processing.html": {
    "href": "api/wan24.RPC.Processing.html",
    "title": "Namespace wan24.RPC.Processing | wan24-RPC",
    "keywords": "Namespace wan24.RPC.Processing Classes RpcContext RPC context RpcEvent RPC event RpcProcessor RPC processor RpcProcessor.Call RPC call RpcProcessor.CallQueue RPC call queue RpcProcessor.Request RPC request RpcProcessor.RequestQueue RPC request queue RpcProcessorOptions RPC processor options Delegates RpcEvent.EventHandler_Delegate Delegate for an event handler"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | wan24-RPC",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "wan24-RPC | wan24-RPC",
    "keywords": "wan24-RPC This library contains some RPC helper which enables an app to use any bi-directional RPC stream on the fly. It supports Stream channels Enumeration channels Events Cancellation Binary and JSON serialization API versioning Compression Server AND client RPC (bi-directional) Authorization I try to keep the API of this library as abstract as possible, but giving a fully working environment. I've decided to concentrate on streams, which seem to be the best center for an abstraction logic. While the RPC stream is the central element, all other things (processor, SDK) are optional and just suggestions that are built on each other to let you make the decision how far you want or need to go, finally, and to offer everything to go for rapid app development. NOTE: This library requires a .NET server AND client. No other languages are supported at present. NOTE: The server side implementation requires components which are not part of this library. How to get it This library is available as NuGet package. Usage Creating a RPC API A RPC API is any type which exports public methods. You should use the (Disposable)RpcApiBase base type, 'cause it uses the NoRpcAttribute on methods which should not be remote callable. A short overview over the helpers that you may want to use: Helper Description RpcApiBase RPC API base type DisposableRpcApiBase Disposable RPC API base type RpcAuthorizationAttributeBase Base type for an authorization attribute for APIs or methods RpcAuthorizedAttribute Attribute for single API methods which don't require an authorization (if the API itself requires it) RpcAliasAttribute Attribute for APIs or methods which should be exported using a different name NoRpcAttribute Attribute for public methods or parameters which shouldn't be accessed from the peer NoRpcDisposeAttribute Attribute for RPC methods which return a disposable value which should NOT be disposed after sending it to the peer, or for API classes which should NOT be disposed, if disconnected NoRpcEnumerableAttribute Attribute for RPC method return value or parameters which are enumerables, but shouldn't be handled as enumerables during RPC call processing NoRpcCompressionAttribute Attribute for RPC method stream return value or parameters which shouldn't use compression ('cause they may be compressed already) RpcVersionAttribute Attribute for API or SDK methods which restrict the supported peer API version (evaluated by the RPC processor) Per default the API class and method names are used for addressing a RPC call. However, it's possible to add API classes and methods using customized names. If you use the pre-defined RPC service logic, wan24.Core.DiHelper is being used for dependency injection, so you may use keyed services also. RPC stream extensions Any blocking bi-directional stream can be used as RPC communication stream: // Reading any RPC message RpcMessageBase message = await stream.ReadRpcMessageAsync(); // Writing any RPC message await stream.WriteRpcMessageAsync(message); RpcMessageBase is just a base type, which is being used by SerializerRpcMessageBase (supports variable serializer) Those base types are used by ID Type Description 0 RequestMessage RPC request 1 ResponseMessage RPC response 2 ErrorResponseMessage RPC error response 3 CancellationMessage RPC cancellation 4 EventMessage RPC event and must be used as base type for your own implementations. Each RPC message type has an ID, which may be sent to the peer before the serialized message body. Your custom RPC message type needs to be registered: RpcMessages.Register<YourRpcMessage>(1 << 8); NOTE: The first 8 bit of the message type ID are reserved, so your custom message type ID must start from 256+. RPC message serialization These are the built in RPC message serializers: ID Type Description 0 BinarySerializer Binary serialization using Stream-Serializer-Extensions 1 JsonSerializer JSON serialization using wan24.Core.JsonHelper 2 MixedSerializer Variable serializer which chooses between binary and JSON serialization per object (prefers binary) The MixedSerializer is the default. Binary serialization will produce less overhead, but each object needs to implement the IStreamSerializer interface. To register a custom serializer: RpcSerializer.Register(1 << 8, yourSerializer); NOTE: The first 8 bits of the serializer ID are reserved, so your custom serializer ID must start from 256+. You can set the default RPC message serializer to use in the static SerializerRpcMessageBase.DefaultSerializer property. Using the RPC processor The RPC processor is used to evaluate a RPC call to registered RPC API classes and methods: RpcProcessor processor = new(new(typeof(YourRpcApi))); await using(processor) { await processor.StartAsync(); while(peer.IsConnected) { // Receive a request message, first ... // Then evaluate it processor.Evaluate(message, yourReturnValueHandler); // The return value will be managed from the RPC processor automatic } } NOTE: One RPC processor instance is required for each RPC peer connection! WARNING: The number of processing evaluations is limited (using the RPC processor options). Any limit exceeding call will cause an exception at the peer! Using the RPC SDK The RpcSdkBase is a base class for creating a SDK which uses a RPC stream: public class YourSdk : RpcSdkBase { public YourSdk() : base() { } public async Task ConnectAsync() { // Connect to the RPC server ... // Then set the RPC stream RPC = rpcStream; } public Task<AnyType> YourApiMethodAsync(AnyType2 parameter, CancellationToken ct = default) => SendRpcCallAsync<AnyType>(nameof(YourApiMethodAsync), ct, parameter); } The SDK will manage a RPC processor, if clientside RPC calls are enabled. SDK usage: YourSdk sdk = new(); await using(sdk) { // Configure the SDK connection ... // Then connect await sdk.ConnectAsync(); // Then call API methods AnyType result; try { result = await sdk.YourApiMethodAsync(value); } catch(RpcRemoteException ex) { // Handle the remote execution error // (InnerException has the remote exception type, if possible) } ... } TIP: For keeping consistence between the client and server RPC API and SDK implementations you can use a shared interface and implement an API method for pre-checking the API version, and if a client update is required, first. Enumerable parameters and return values Enumerables will be transfered asynchronous (streamed) and managed by the RPC processor automatic, if the type at the receiving side implements IList. A parameter or return value may be an IEnumerable<T> or IAsyncEnumerable<T>. NOTE: To disable that behavior you can use the NoRpcEnumerableAttribute for your RPC API or SDK method or RPC API parameter. For SDK method parameters wrap the value with NoRpcEnumerable. TIP: Use IAsyncEnumerable<T> where possible! WARNING: The number of processing enumerables is limited (using the RPC processor options). Any limit exceeding call will cause an exception at the peer! Stream parameters and return values Streams will be transfered asynchronous and managed by the RPC processor automatic. While synchronous stream usage is possible, all synchronous stream methods are mapped to asynchronous methods (you should avoid using them!). NOTE: If compression is enabled, streams will be transfered compressed per default. If you don't want that, you can use the NoRpcCompressionAttribute for your RPC API or SDK method or RPC API parameter. For SDK method parameters wrap a value with UncompressedRpcStream. WARNING: The number of processing streams is limited (using the RPC processor options). Any limit exceeding call will cause an exception at the peer! Events A RpcProcessor and a RpcSdkBase offer a simple solution for events using EventMessage and RpcEvent. In a processor or SDK you can register receivable events like this: RegisterEvent(new(nameof(YourEvent), typeof(YourEventData), RaiseYourEventAsync)); Example receivable event definition: public delegate void YourEvent_Delegate(object sender, YourEventData e); public event YourEvent_Delegate? YourEvent; private async Task RaiseYourEventAsync(RpcEvent rpcEvent, EventData? e) { await Task.Yield(); if(e is not YourEventData data) // Exception will be handled by the processor or SDK throw new InvalidProgramException(\"Missing/invalid event data\"); YourEvent?.Invoke(this, data); } NOTE: Since event handling is a synchronous operation, it's not possible to write something back to the event data and respond it to the RPC peers event sending context. To send any event to the peer: anyObject.AnyEvent += (sender, e) => SendEvent(nameof(AnyObjectType.AnyEvent), new AnyEventData(sender, e)); The event message processing will be handled by the RPC processor automatic. NOTE: The SendEvent method doesn't return a task, but will send the event asynchronous in background. It's part of the processor and the SDK base types and may be called in any other context, also. TIP: You can enable event throttling by defining an event throttler instance in the RPC processor options. WARNING: You should remove event listeners in order to enable the GC to clan up the object reference, if a processor or a SDK instance isn't in use anymore! Cancellation If a SDK method timed out, the SDK will send a RpcCancellationMessage to the peer, which will then cancel the RPC method execution, if possible. For this the RPC API method needs to have a CancellationToken type parameter. API versioning You need to implement a version check into your SDK by yourself. It's required to use an unsigned integer number as version number. Using the RpcVersionAttribute you can restrict the supported API version and also forward a RPC processor to another API method for the used SDK version: public async Task<int> ApiVersionAsync(RpcProcessor processor, int peerSdkVersion, CancellationToken ct) { // Check the version number ... // Then use it processor.CurrentApiVersion = peerSdkVersion; // Maybe return the latest API version to signal an available optional update return YourApi.VERSION; } [RpcVersion(fromVersion: 1, toVersion: 3, newerMethodName: \"YourApiMethodV2Async\")] public async Task YourApiMethodAsync(AnyType parameter, CancellationToken ct) { // Used with peer versions 1, 2 and 3 } [RpcVersion(4)] public async Task<ReturnType> YourApiMethodV2Async(AnyType parameter, OtherType other, CancellationToken ct) { // Used from peer versions 4+ } To enable API version restrictions your API needs to set the CurrentApiVersion value to the RPC processor which manages the connection. Any RPC call to an API method which has a RpcVersionAttribute before the CurrentApiVersion value was set will cause an error at the client side. Since communicated objects are being serialized, and they may be changed, too, you could use the serializer versioning for IStreamSerializer implementations (see the documentation of the Stream-Serializer-Extensions NuGet package). The serializer versioning is fully independent from the API versioning. Anyway, if the serializer version of a communicated type increases, you should also increase the API version number to be safe, if the updated serialization requires a peer software update (which is the case when the new serialization doesn't support the previous object structure). A serializer version increment is required, if the new type revision is incompatible with the previous type revision. An API version increment is required on any incompatibility: Incompatible types Method signature changes Method removals For any other change incrementing a version number is optional and depends on the context of the change, and if the change is downward compatible. Authorization Use the RpcAuthorizationAttributeBase type for implementing authorization for your RPC APIs and methods: [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method)] public class YourAuthorizationAttribute : RpcAuthorizationAttributeBase { public override async Task<bool> IsAuthorizedAsync(RpcContext context) { // Determine if the context is authorized and return TRUE to continue, // or FALSE to disconnect the peer } } This attribute can be applied to RPC API classes and methods and will be evaluated by the RPC processor before executing any API method. Any unauthorized access will disconnect the peer: [YourAuthorization]// Optional for all API methods public class YourRpcApi : RpcApiBase { [YourAuthorization]// Optional at the API method level public async Task YourApiMethod() { ... } ... } Using the RpcAuthorizedAttribute you can disable authorization for single methods of an API which requires authorization for all exported API methods. CAUTION: If you mix RpcAuthorizedAttribute with any RpcAuthorizationAttributeBase attributes, no authorization will be required, finally!"
  }
}